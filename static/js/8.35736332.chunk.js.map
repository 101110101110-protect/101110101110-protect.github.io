{"version":3,"sources":["components/Licenses/Generate/CorporateGenerate.jsx"],"names":["CorporateActivity","props","React","useState","login","setLoginValue","password","setPasswordValue","nickname","setNicknameValue","telegram","setTelegramValue","comment","setCommentValue","rowItem","className","fullWidth","value","onChange","e","target","variant","disabled","IconPack","buttons","minus","plus"],"mappings":"qPAqGeA,UAvFW,SAACC,GAAW,IAAD,EAEFC,IAAMC,SAAS,eAFb,mBAE1BC,EAF0B,KAEnBC,EAFmB,OAGIH,IAAMC,SAAS,gBAHnB,mBAG1BG,EAH0B,KAGhBC,EAHgB,OAIIL,IAAMC,SAAS,WAJnB,mBAI1BK,EAJ0B,KAIhBC,EAJgB,OAKIP,IAAMC,SAAS,mBALnB,mBAK1BO,EAL0B,KAKhBC,EALgB,OAMET,IAAMC,SAAS,qBANjB,mBAM1BS,EAN0B,KAMjBC,EANiB,KAQ7BC,EAAW,oCACX,kBAAC,IAAD,CAAUC,UAAU,cAChB,kBAAC,IAAD,CAAWA,UAAU,gCACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOb,EACPc,SAAU,SAACC,GAAKd,EAAcc,EAAEC,OAAOH,QACvCI,QAAQ,SACRC,UAAQ,KAGhB,kBAAC,IAAD,CAAWP,UAAU,gCACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOX,EACPY,SAAU,SAACC,GAAKZ,EAAiBY,EAAEC,OAAOH,QAC1CI,QAAQ,YAGhB,kBAAC,IAAD,CAAWN,UAAU,gCACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOT,EACPU,SAAU,SAACC,GAAKV,EAAiBU,EAAEC,OAAOH,QAC1CI,QAAQ,YAGhB,kBAAC,IAAD,CAAWN,UAAU,+BACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOP,EACPQ,SAAU,SAACC,GAAKR,EAAiBQ,EAAEC,OAAOH,QAC1CI,QAAQ,YAGhB,kBAAC,IAAD,CAAWN,UAAU,+BACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOL,EACPM,SAAU,SAACC,GAAKN,EAAgBM,EAAEC,OAAOH,QACzCI,QAAQ,SACRN,UAAU,SAEd,yBAAKA,UAAU,8BACf,yBAAKA,UAAU,cAAcQ,IAASC,QAAQC,OAC9C,yBAAKV,UAAU,cAAcQ,IAASC,QAAQE,UAQ1D,OACI,yBAAKX,UAAU,oBACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,eAAb,gJACA,0BAAMA,UAAU,uBAAhB,SAEJ,kBAAC,IAAD,CAAOA,UAAU,eACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWA,UAAU,qBAArB,SACA,kBAAC,IAAD,CAAWA,UAAU,qBAArB,YACA,kBAAC,IAAD,CAAWA,UAAU,oBAArB,YACA,kBAAC,IAAD,CAAWA,UAAU,oBAArB,YACA,kBAAC,IAAD,CAAWA,UAAU,yBAArB,8BAGR,kBAAC,IAAD,KACKD,EACAA,EACAA,EACAA","file":"static/js/8.35736332.chunk.js","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\r\n\r\n\r\n\r\nconst CorporateActivity = (props) => {\r\n\r\n    const [login, setLoginValue] = React.useState('CU847392002');\r\n    const [password, setPasswordValue] = React.useState('Hs@351!saS!@');\r\n    const [nickname, setNicknameValue] = React.useState('Valeron');\r\n    const [telegram, setTelegramValue] = React.useState('Valeron.Valeron');\r\n    const [comment, setCommentValue] = React.useState('Valera Old Farmer');\r\n\r\n    let rowItem = (<>\r\n        <TableRow className=\"inputs-row\">\r\n            <TableCell className=\"padding-sides-10 color-white\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={login}\r\n                    onChange={(e)=>{setLoginValue(e.target.value)}}\r\n                    variant=\"filled\"\r\n                    disabled\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={password}\r\n                    onChange={(e)=>{setPasswordValue(e.target.value)}}\r\n                    variant=\"filled\"\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={nickname}\r\n                    onChange={(e)=>{setNicknameValue(e.target.value)}}\r\n                    variant=\"filled\"\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-grey\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={telegram}\r\n                    onChange={(e)=>{setTelegramValue(e.target.value)}}\r\n                    variant=\"filled\"\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-grey\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={comment}\r\n                    onChange={(e)=>{setCommentValue(e.target.value)}}\r\n                    variant=\"filled\"\r\n                    className=\"w80p\"\r\n                />\r\n                <div className=\"generateTable__btnsWrapper\">\r\n                <div className=\"btn--table\">{IconPack.buttons.minus}</div>\r\n                <div className=\"btn--table\">{IconPack.buttons.plus}</div>\r\n                </div>\r\n            </TableCell>\r\n        </TableRow>\r\n\r\n    </>);\r\n\r\n\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n            <div className=\"alertPanel\">\r\n                <p className=\"color-white\">Prepare accounts for their future owners. It is not necessary to write down the login and password at this stage, you can easily do it later</p>\r\n                <span className=\"btn-text color-blue\">MORE</span>\r\n            </div>\r\n            <Table className=\"configTable\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className=\"padding-sides-20 \">Login</TableCell>\r\n                        <TableCell className=\"padding-sides-10 \">Password</TableCell>\r\n                        <TableCell className=\"padding-sides-10\">Nickname</TableCell>\r\n                        <TableCell className=\"padding-sides-10\">Telegram</TableCell>\r\n                        <TableCell className=\"padding-sides-10 w500\">Comment(role or more...)</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rowItem}\r\n                    {rowItem}\r\n                    {rowItem}\r\n                    {rowItem}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\nexport default CorporateActivity;"],"sourceRoot":""}