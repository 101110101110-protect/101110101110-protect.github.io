{"version":3,"sources":["redux/licenses/licenses.actions.js","redux/licenses/corporate/users/users.actions.js","components/TableComponents/DaysLeft/DaysLeft.jsx","redux/licenses/corporate/generate/generate.actions.js","components/TableComponents/ConfigLimits/ConfigLimits.jsx","logo-r.svg","components/TabsManager/PersonalLicense/images/user.id.svg","components/TabsManager/PersonalLicense/images/user.days.svg","components/TabsManager/PersonalLicense/images/cog.icon.svg","components/Dashboard/Profile/avatar.svg","components/Dashboard/Tickets/ChatComponents/user.icon.svg","components/TableComponents/DaysLeft/cog.svg","components/TableComponents/ConfigLimits/minus.svg","components/TableComponents/ConfigLimits/plus.svg","components/defaultComponent/DefaultComponent.jsx","components/TabsManager/PersonalLicense/PersonalLicense.jsx","components/TabsManager/TabsManager.jsx","components/Licenses/Alerts/licenseAlert.jsx","redux/config-shop/config.actions.js","components/Licenses/Alerts/generateAlert.jsx","components/Licenses/Alerts/inviteAlert.jsx","components/Licenses/Dashboard/Dashboard.jsx","components/Licenses/Licenses.jsx","components/Licenses/LicensesNew/LicensesNew.jsx","redux/support/tickets/tickets.actions.js","components/Dashboard/Installer/Installer.jsx","components/Dashboard/Operations/OperationsTable/OperationsTable.jsx","components/Dashboard/Operations/Operations.jsx","components/Dashboard/Transactions/TransactionsTable/TransactionsTable.jsx","components/Dashboard/Transactions/Transactions.jsx","components/Dashboard/Profile/Profile.jsx","components/Dashboard/Tickets/ChatComponents/Message.jsx","components/Dashboard/Tickets/MessageTable/MessageTable.jsx","components/Dashboard/Tickets/ChatComponents/Chat.jsx","components/Dashboard/Tickets/Tickets.jsx","components/Dashboard/NewTicket/NewTicket.jsx","components/Dashboard/Deals/DealsTable/DealsTable.jsx","components/Dashboard/Deals/Deals.jsx","components/Dashboard/Faq/Faq.jsx","components/Dashboard/NewDeal/NewDeal.jsx","components/ConfigShop/ConfigAlert/ConfigAlert.jsx","components/ConfigShop/Shop/shop.jsx","components/ConfigShop/ConfigShop.jsx","components/ConfigShop/PurchasedAlert/ConfigAlert.jsx","redux/config-purchased/config.actions.js","components/ConfigShop/Purchased/purchased.jsx","components/ConfigShop/ConfigPurchased.jsx","components/Dashboard/Documentation/Documentation.jsx","components/Dashboard/DashBoard.jsx"],"names":["setCurrentLicense","string","type","licensesTypes","SET_CURRENT_LICENSE","payload","setAutoRenewPersonal","bool","SET_AUTO_RENEW_PERSONAL","setAutoRenewCorporate","SET_AUTO_RENEW_CORPORATE","setOptionsLicenseMenu","SET_OPTIONS__LICENSE_MENU","setCurrentTab","SET_CURRENT_TAB","setAdditionalScreenCorporate","SET_ADDITIONAL_SCREEN_CORPORATE","setActivity","id","usersTypes","SET_ACTIVITY","setUsers","SET_USERS","setCosts","SET_COSTS","setSelect","SET_SELECT","sortTableByType","SORT_TABLE_BY_TYPE","setAccessRights","obj","SET_ACCESS_RIGHTS","setSelectForUsers","SET_SELECT_FOR_USERS","updateUsers","UPDATE_USERS","setDaysLeft","SET_DAYS_LEFT","setConfigLimit","SET_CONFIG_LIMIT","connect","state","usersTabData","corporateLicenseUsers","usersTab","dispatch","setLicenseDaysSettingsModal","props","className","rowData","userOptions","daysLeft","maxDaysLeft","onClick","data","src","cogIcon","alt","setNewValueForStoreItem","item","itemValue","generateTypes","SET_NEW_VALUE_FOR_STORE_ITEM","createItem","object","CREATE_ITEM","deleteItem","DELETE_ITEM","dataValue","configsLimits","val","max","user","configLimit","Minus","Plus","module","exports","DComponent","logo","page","licenses","currentUser","prop","setAutoRenewalModal","setMigrationModal","tabTitle","balanceString","configsLeft","currentLicense","balanceArray","autoRenew","autoRenewHandler","changeTo","showLicenseMenu","options","menuForChangingLicense","licensePath","history","useHistory","personalLicense","corporateLicense","balance","title","split","menu","push","days","Switch","checked","name","cog","width","height","viewBox","fill","xmlns","d","fillOpacity","setRefillLicenseModal","tabs","tabsComponent","licenseBalance","path","location","pathname","additionalComponent","tabItemClassName","invite","IconPack","licenseIcons","tabManagerMail","support","fill-opacity","href","map","tab","i","link","key","toString","licenseComponent","additionalScreen","generateClass","inviteClass","currentTab","appState","appOptions","setAccessRightsModal","setAuthorizationDataModal","React","useState","selectValue","setSelectValue","dataArray","selectedDataArray","isSelected","barComponent","Button","variant","cancelHandler","length","FormControl","value","onChange","e","target","fullWidth","select","MenuItem","applyHandler","setDeviceFilter","configTypes","SET_DEVICE_FILTER","setOsFilter","SET_OS_FILTER","setOsVersionFilter","version","SET_OS_VERSION_FILTER","setBrowserFilter","SET_BROWSER_FILTER","setBrowserVersionFilter","SET_BROWSER_VERSION_FILTER","updateData","UPDATE_DATA","searchData","SEARCH_DATA","selectItem","SELECT_ITEM","generateData","corporateLicenseGenerate","generate","store","inviteData","corporateLicenseInvite","PersonalActivity","lazy","PersonalCost","CorporateCost","CorporateUsers","CorporateActivity","CorporateInvite","CorporateGenerate","license","activeComponent","alertWrapper","fallback","Preloader","activeTab","setBuyCLicenseModal","setBuyPLicenseModal","value1","setValue1","card1Component","setCard1Component","value2","setValue2","card2Component","setCard2Component","personalLicenseData","dayCost","toFixed","daysAtAll","configCost","configAtAll","corporateLicenseData","licenseCardComponent","buttons","change","label","rows","licenseCardComponent2","Slider","step","min","event","newValue","aria-labelledby","createTicket","ticketsTypes","CREATE_TICKET","releases","cardsCount","setCardsCount","releasesItems","changelog","installerIcons","complete","minRequirements","warning","secondTitle","release","supportedVersions","windows","macOs","linux","window","requestAnimationFrame","chatWrapper","document","querySelector","undefined","scrollTop","scrollHeight","balanceData","operations","searchValue","setSearchValue","dateReverse","setDateReverse","getDayRow","day","date","Date","month","getMonth","getDay","TableRow","colspan","itemHTML","amount","statusGood","purpose","description","operationID","UNIX_timestamp","a","getFullYear","getDate","getHours","getMinutes","getSeconds","timeConverter","searchedData","filter","toLowerCase","includes","placeholder","searchComponents","calendar","Table","TableHead","tableIcons","TableBody","reverse","Operations","transactions","status","paymentSystem","transactionID","Transactions","setChangeEmailModal","setChangePasswordlModal","setChangeTelegramModal","userAvatar","Message","size","messageItemClassName","message","owner","Icon","author","tickets","setChatState","setChatId","numb","chatId","creationDate","lastMessageDate","addMessage","ADD_MESSAGE","currentDataObj","mess","setMess","chatItemsHTML","chatState","currentChatId","messageObj","x","iconPack","send","question","subject","multiline","messObj","dateIndex","now","pushMessage","ticketsComponent","isChatOpen","setSubject","setTitle","setMessage","currentIndex","ticketObj","deals","setChangeDealModal","tableActionHendler","getRowItem","userIcons","forTable","seller","buyer","dealId","dateCreated","Deals","Faq","expanded","setExpanded","handleChange","panel","newExpanded","ExpansionPanel","square","ExpansionPanelSummary","aria-controls","tabsIcons","questionActive","tabMarkActive","tabMark","ExpansionPanelDetails","buyerBTN","sellerBTN","setSeller","setBuyer","amountToSend","amountComisionRate","amountToRecive","isBuyer","setIsBuyer","setDescription","sellerBuyerSetter","checkTrue","checkFalse","disabled","configShop","summ","counter","selectedData","price","useEffect","setSearch","isSearchActive","setSearchActive","isCheckboxesActive","setCheckboxesActive","buyEventHandler","dataObj","checkBoxHandler","tableCheckBox","row","scope","Checkbox","color","tableSearchContent","deviceObject","icon","osObject","browserObject","screen","userAgent","videoCard","created","tableContent","tableData","InputLabel","Select","labelId","currentSort","device","deviceEventHandler","sort","os","find","osEventHandler","osVersion","osVersionsEventHandler","browser","browserEventHandler","browserVersion","browserVersionsEventHandler","searchEventHandler","configPurchased","setNewEmailAuthModal","setChangePasswordAuthModal","setResetPassAuthModal","setSignInAuthModal","setSignUpAuthModal","DashBoard","render","DefaultComponent"],"mappings":"sHAAA,wNAEaA,EAAoB,SAAAC,GAAM,MAAK,CAC1CC,KAAMC,IAAcC,oBACpBC,QAASJ,IAGEK,EAAuB,SAAAC,GAAI,MAAK,CAC3CL,KAAMC,IAAcK,wBACpBH,QAASE,IAGEE,EAAwB,SAAAF,GAAI,MAAK,CAC5CL,KAAMC,IAAcO,yBACpBL,QAASE,IAIEI,EAAwB,SAAAJ,GAAI,MAAK,CAC5CL,KAAMC,IAAcS,0BACpBP,QAASE,IAIEM,EAAgB,SAAAZ,GAAM,MAAK,CACtCC,KAAMC,IAAcW,gBACpBT,QAASJ,IAGEc,EAA+B,SAAAR,GAAI,MAAK,CACnDL,KAAMC,IAAca,gCACpBX,QAASE,K,iCC/BX,+VAGaU,EAAc,SAAEV,EAAMW,GAAR,MAAiB,CAC1ChB,KAAMiB,IAAWC,aACjBf,QAAS,CAACE,OAAMW,QAGLG,EAAW,SAAEd,EAAMW,GAAR,MAAiB,CACvChB,KAAMiB,IAAWG,UACjBjB,QAAS,CAACE,OAAMW,QAGLK,EAAW,SAAEhB,EAAMW,GAAR,MAAiB,CACvChB,KAAMiB,IAAWK,UACjBnB,QAAS,CAACE,OAAMW,QAGLO,EAAY,SAAElB,EAAMW,GAAR,MAAiB,CACxChB,KAAMiB,IAAWO,WACjBrB,QAAS,CAACE,OAAMW,QAGLS,EAAkB,SAAEzB,GAAF,MAAa,CAC1CA,KAAMiB,IAAWS,mBACjBvB,QAASH,IAGE2B,EAAkB,SAAEC,GAAF,MAAY,CACzC5B,KAAMiB,IAAWY,kBACjB1B,QAASyB,IAGEE,EAAoB,SAAEzB,GAAF,MAAa,CAC5CL,KAAMiB,IAAWc,qBACjB5B,QAASE,IAGE2B,EAAc,SAAEJ,GAAF,MAAY,CACrC5B,KAAMiB,IAAWgB,aACjB9B,QAASyB,IAGEM,EAAc,SAAEN,GAAF,MAAY,CACrC5B,KAAMiB,IAAWkB,cACjBhC,QAASyB,IAIEQ,EAAiB,SAAER,GAAF,MAAY,CACxC5B,KAAMiB,IAAWoB,iBACjBlC,QAASyB,K,iCCnDX,sDAgCeU,iBATS,SAACC,GAAD,MAAY,CAChCC,aAAcD,EAAME,sBAAsBC,aAGnB,SAACC,GACxB,MAAO,CACHC,4BAA6B,SAAChB,GAAD,OAASe,EAASC,YAA4BhB,QAGpEU,EA3BE,SAACO,GACd,OACI,yBAAKC,UAAU,sBACX,yBAAKA,UAAU,SACdD,EAAME,QAAQC,YAAYC,UAE3B,yBAAKH,UAAU,QACVD,EAAME,QAAQC,YAAYE,aAE/B,yBAAKJ,UAAU,MAAMK,QAAS,WAC1BN,EAAMD,4BAA4B,CAACvC,MAAM,EAAM+C,KAAMP,EAAME,YAE3D,yBAAKM,IAAKC,IAASC,IAAI,W,iCCjBvC,kHAGaC,EAA0B,SAAEC,EAAMC,EAAW1C,GAAnB,MAA4B,CAC/DhB,KAAM2D,IAAcC,6BACpBzD,QAAS,CAACsD,OAAMC,YAAW1C,QAGlB6C,EAAa,SAACC,GAAD,MAAa,CACnC9D,KAAM2D,IAAcI,YACpB5D,QAAS2D,IAGAE,EAAa,SAAChD,GAAD,MAAS,CAC/BhB,KAAM2D,IAAcM,YACpB9D,QAASa,K,iCCfb,yEA4CesB,iBATS,SAACC,GAAD,MAAY,CAChCC,aAAcD,EAAME,sBAAsBC,aAGnB,SAACC,GACxB,MAAO,CACHP,eAAgB,SAACR,GAAD,OAASe,EAASP,YAAeR,QAG1CU,EAtCM,SAACO,GAElB,OACI,yBAAKC,UAAU,0BACX,yBAAKA,UAAU,SACVD,EAAMqB,UAAUlB,YAAYmB,cAAcC,KAE/C,yBAAKtB,UAAU,QACVD,EAAMqB,UAAUlB,YAAYmB,cAAcE,KAE/C,yBAAKvB,UAAU,oBAAoBK,QAAS,WACpCN,EAAMqB,UAAUlB,YAAYmB,cAAcC,IAAM,GAChDvB,EAAMT,eAAe,CAACpB,GAAG6B,EAAMqB,UAAUI,KAAKtD,GAAKuD,YAAa1B,EAAMqB,UAAUlB,YAAYmB,cAAcC,IAAM,MAGpH,yBAAKf,IAAKmB,IAAOjB,IAAI,MAEzB,yBAAKT,UAAU,oBAAoBK,QAAS,WACjCN,EAAMqB,UAAUlB,YAAYmB,cAAcC,IAAMvB,EAAMqB,UAAUlB,YAAYmB,cAAcE,KACzFxB,EAAMT,eAAe,CAACpB,GAAI6B,EAAMqB,UAAUI,KAAKtD,GAAIuD,YAAa1B,EAAMqB,UAAUlB,YAAYmB,cAAcC,IAAM,MAGxH,yBAAKf,IAAKoB,IAAMlB,IAAI,W,oBC5BpCmB,EAAOC,QAAU,IAA0B,oC,gECA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,4GCA3CD,EAAOC,QAAU,IAA0B,oC,0CCA3CD,EAAOC,QAAU,IAA0B,uC,4GCA3CD,EAAOC,QAAU,IAA0B,iC,0CCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,4GCc5BC,EATI,SAAC/B,GAChB,OACI,4BAAQC,UAAU,cACd,yBAAKO,IAAKwB,IAAM/B,UAAU,WAAWS,IAAI,SACzC,4BAAKV,EAAMiC,Q,wGC+IRxC,eAzIS,SAACC,GAAD,MAAY,CAChCwC,SAAUxC,EAAMwC,SAASA,SACzBC,YAAazC,EAAM+B,KAAKU,gBA0HD,SAACrC,GACxB,MAAO,CACHlC,sBAAuB,SAACwE,GAAD,OAAUtC,EAASlC,YAAsBwE,KAChEnF,kBAAmB,SAACmF,GAAD,OAAUtC,EAAS7C,YAAkBmF,KACxD7E,qBAAsB,SAAC6E,GAAD,OAAUtC,EAASvC,YAAqB6E,KAC9D1E,sBAAwB,SAAC0E,GAAD,OAAUtC,EAASpC,YAAsB0E,KACjEtE,cAAgB,SAACsE,GAAD,OAAUtC,EAAShC,YAAcsE,KACjDpE,6BAA8B,SAACoE,GAAD,OAAUtC,EAAS9B,YAA6BoE,KAC9EC,oBAAqB,SAACD,GAAD,OAAUtC,EAASuC,YAAoBD,KAC5DE,kBAAmB,SAACF,GAAD,OAAUtC,EAASwC,YAAkBF,QAIjD3C,EAlIiB,SAACO,GAE7B,IAAIuC,EACAC,EACApC,EACAqC,EACAC,EACAC,EACAC,EACAC,EAEAC,EAAW,GACXC,EAAkB/C,EAAMkC,SAASc,QAAQC,uBACvCC,EAAc,aAAelD,EAAMmC,YAAYhE,GAAI,YACrDgF,EAAUC,cAKd,OAAQpD,EAAMkC,SAASQ,gBACnB,IAAK,WAEDI,EAAW,YACXJ,EAAiB1C,EAAMkC,SAASmB,gBAEhCR,EAAmB,SAACrF,GAChBwC,EAAMzC,qBAAqBC,IAG/B,MAEJ,IAAK,YAEDsF,EAAW,WACXJ,EAAiB1C,EAAMkC,SAASoB,iBAChCT,EAAmB,SAACrF,GAChBwC,EAAMtC,sBAAsBF,IAQxCgF,EAAgBE,EAAea,QAC/BhB,EAAWG,EAAec,MAC1BpD,EAAWsC,EAAetC,SAC1BqC,EAAcC,EAAeD,YAC7BE,EAAeH,EAAciB,MAAM,KACnCb,EAAYF,EAAeE,UAK3B,IAAIc,EAAQ,yBAAKvF,GAAG,qBAChB,0BAAMmC,QAAS,WACXN,EAAMlC,cAAc,YACpBkC,EAAMhC,8BAA6B,GACnCgC,EAAM/C,kBAAkB6F,GACxB9C,EAAMpC,uBAAsB,GAC5BuF,EAAQQ,KAAKT,KALjB,aAMeJ,IAOnB,OACI,yBAAK7C,UAAU,cAEX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,eAAesC,GAE7B,6BACI,yBAAK/B,IAAKrC,IAAIuC,IAAI,OAAM,8BAAOV,EAAMmC,YAAYhE,KAGrD,6BACI,yBAAKqC,IAAKoD,IAAMlD,IAAI,SACpB,0BAAMT,UAAU,eAAgBG,EAAhC,SAAgD,0BAAMH,UAAU,cAAhB,MAAhD,IAAyFwC,EAAzF,cAKR,yBAAKxC,UAAU,QACX,yBAAKA,UAAU,kBAEX,kBAAC4D,EAAA,EAAD,CAAQC,QAAUlB,EACVmB,KAAK,YACLzD,QAAS,WAAKuC,GAAkBD,MAGxC,4CAEA,yBAAK3C,UAAU,sBAAsBK,QAAS,WAAKN,EAAMqC,qBAAoB,KAAQ,yBAAK7B,IAAKwD,IAAKtD,IAAI,UAG5G,yBAAKT,UAAU,oBACX,yBAAKgE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAC9D,0BAAMC,EAAE,s9BAAs9BF,KAAK,QAAQG,YAAY,SAE3/B,8BAAQ5B,EAAa,IACrB,0BAAM1C,UAAU,cAAhB,IAAgC0C,EAAa,IAE7C,yBAAK1C,UAAU,gBAEnB,yBAAKA,UAAU,oBAAoBK,QAAS,kBAAMN,EAAMpC,uBAAwBmF,MAE/EA,EAAkBW,EAAO,Q,OCU3BjE,eAhBS,SAACC,GAAD,MAAY,CAChCwC,SAAUxC,EAAMwC,SAASA,SACzBC,YAAazC,EAAM+B,KAAKU,gBAGD,SAACrC,GACxB,MAAO,CACH7C,kBAAmB,SAACC,GAAD,OAAY4C,EAAS7C,YAAkBC,KAC1DY,cAAe,SAACZ,GAAD,OAAY4C,EAAShC,YAAcZ,KAClDc,6BAA8B,SAACR,GAAD,OAAUsC,EAAS9B,YAA6BR,KAC9EgH,sBAAuB,SAAChH,GAAD,OAAUsC,EAAS0E,YAAsBhH,KAChE6E,oBAAqB,SAAC7E,GAAD,OAAUsC,EAASuC,YAAoB7E,KAC5D8E,kBAAmB,SAAC9E,GAAD,OAAUsC,EAASwC,YAAkB9E,QAIjDiC,EAlIK,SAACO,GAEjB,IAEIyE,EAAMC,EA6CNC,EA/CAxB,EAAUC,cACVwB,EAAOzB,EAAQ0B,SAASC,SAExBC,EAAsB,GACtBC,EAAmB,UAEnBrC,EADgB3C,EAAMkC,SAASoB,iBAAiBC,QACnBE,MAAM,KAEnCwB,EACA,yBAAKhF,UAAU,gBAAgBK,QAAS,WAAKN,EAAMsC,mBAAkB,KAAS4C,IAASC,aAAaC,eAApG,uBAEAC,EACA,yBAAKpF,UAAU,gCACX,yBAAKgE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAC9D,0BAAMC,EAAE,ifAAifF,KAAK,QAAQkB,eAAa,SAEvhB,uBAAGrF,UAAU,aAAasF,KAAK,gCAA/B,aAJJ,uBAkDJ,GAzCIvF,EAAMO,OACNkE,EAAOzE,EAAMO,KAAKiF,KAAI,SAACC,EAAKC,GAexB,OAZIV,EADAJ,IAASa,EAAIE,KACM,0BAEA,UAGZ,yBAAK1F,UAAW+E,EAAkBY,IAAKF,EAAEG,WAAYvF,QAAS,WACrEN,EAAMlC,cAAc2H,EAAI1B,MACxBZ,EAAQQ,KAAK8B,EAAIE,QAEhBF,EAAI1B,UAOb/D,EAAM8F,mBACNf,EAAuB,yBAAK9E,UAAU,cAClC,kBAAC,EAAD,CAAyBM,KAAMP,EAAMkC,SAAUT,KAAMzB,EAAMmC,gBAKhEnC,EAAM2E,iBAELA,EAAkB,yBAAK1E,UAAU,+BACzB,yBAAKgE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAC9D,0BAAMC,EAAE,s9BAAs9BF,KAAK,QAAQG,YAAY,SAE3/B,0BAAMjE,QAAS,WAAK6C,EAAQQ,KAAK,aAAe3D,EAAMmC,YAAYhE,GAAI,YAAawE,EAAa,IAChG,0BAAM1C,UAAU,aAAaK,QAAS,WAAK6C,EAAQQ,KAAK,aAAe3D,EAAMmC,YAAYhE,GAAI,YAA7F,IAA2GwE,EAAa,IAExH,yBAAK1C,UAAU,aAAaK,QAAS,WAAKN,EAAMwE,uBAAsB,QAK9EI,IAAS,aAAe5E,EAAMmC,YAAYhE,GAAI,WAAiE,IAArD6B,EAAMkC,SAASoB,iBAAiByC,iBAA2B,CAErH,IAAIC,EAAgB,UAChBC,EAAc,UACgB,aAA9BjG,EAAMkC,SAASgE,WACfF,EAAgB,0BACqB,WAA9BhG,EAAMkC,SAASgE,aACtBD,EAAc,2BAIlBvB,EAAiB,yBAAKzE,UAAU,cAC5B,yBAAKA,UAAU,iBAAiBK,QAAS,WACrCN,EAAMlC,cAAc,SACpBkC,EAAMhC,8BAA6B,KAEnC,yBAAKiG,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BAC9D,0BAAMC,EAAE,wTAAwTF,KAAK,QAAQG,YAAY,UAGjW,yBAAKtE,UAAW+F,EAAe1F,QAAS,WAChCN,EAAMlC,cAAc,cAD5B,YAKA,yBAAKmC,UAAWgG,EAAa3F,QAAS,WAC9BN,EAAMlC,cAAc,YAD5B,gBAOJ4G,EAAiB,yBAAKzE,UAAU,cAAcwE,EAA7B,IAAoCzE,EAAM2E,eAAiBA,EAAiB,KAC1D,aAAlC3E,EAAMkC,SAASQ,gBAAiC1C,EAAM8F,iBAAmBb,EAAS,KAC9EjF,EAAMqF,QAAUA,EAAU,MAKnC,OACI,yBAAKlH,GAAG,eAEH4G,EAEAL,M,wECKEjF,eAdS,SAACC,GAAD,MAAY,CAChCyG,SAAUzG,EAAM0G,WAAWD,SAC3BxG,aAAcD,EAAME,sBAAsBC,aAGnB,SAACC,GACxB,MAAO,CACHuG,qBAAsB,SAAC7I,GAAD,OAAUsC,EAASuG,YAAqB7I,KAC9D8I,0BAA2B,SAAC9I,GAAD,OAAUsC,EAASwG,YAA0B9I,KACxE2B,YAAa,SAACJ,GAAD,OAASe,EAASX,YAAYJ,KAC3CgB,4BAA6B,SAAChB,GAAD,OAASe,EAASC,YAA4BhB,QAIpEU,EA7GM,SAACO,GAAW,IAAD,EACUuG,IAAMC,SAAS,0BADzB,mBACrBC,EADqB,KACRC,EADQ,OAEEH,IAAMC,UAAS,GAFjB,gCAGED,IAAMC,SAAS,IAHjB,mBAQxBG,GARwB,UAQZ,IACZC,EAAoB,GAExB5G,EAAML,aAAa6F,KAAI,SAACE,EAAGE,GACnBF,EAAEvF,YAAY0G,YACdD,EAAkBjD,KAAK+B,MAK/B,IAoCMoB,EAAgB,yBAAK7G,UAAU,8CACjC,6BACI,kBAAC8G,EAAA,EAAD,CAAQC,QAAQ,YAAY/G,UAAU,mCAAmCK,QAAS,YAbpE,WAClB,IAAIC,EAAOP,EAAML,aAAa6F,KAAI,SAACE,EAAGE,GAElC,OADAF,EAAEvF,YAAY0G,YAAa,EACpBnB,KAGX1F,EAAMb,YAAYoB,GAQV0G,KADJ,UAKA,uBAAGhH,UAAU,0BAA0B2G,EAAkBM,OAAzD,oBAEJ,6BAEI,kBAACC,EAAA,EAAD,CAAalH,UAAU,QACnB,kBAAC,IAAD,CACImH,MAAOX,EACPY,SAAU,SAACC,GACPZ,EAAeY,EAAEC,OAAOH,QAE5BI,WAAS,EACTC,QAAM,EACNT,QAAQ,UAER,kBAACU,EAAA,EAAD,CAAU9B,IAAK,EAAGwB,MAAO,0BAAzB,0BACA,kBAACM,EAAA,EAAD,CAAU9B,IAAK,EAAGwB,MAAO,qBAAzB,qBACA,kBAACM,EAAA,EAAD,CAAU9B,IAAK,EAAGwB,MAAO,wBAAzB,0BAIR,kBAACL,EAAA,EAAD,CAAQC,QAAQ,YAAY/G,UAAU,gBAAgBK,QAAS,YA/DlD,WAEjB,OAAQmG,GACJ,IAAK,yBACDzG,EAAMsG,2BAA0B,GAChC,MAEJ,IAAK,oBACDtG,EAAMqG,sBAAqB,GAC3B,MACJ,IAAK,uBACDrG,EAAML,aAAa6F,KAAI,SAACE,EAAGE,GAClBF,EAAEvF,YAAY0G,YACfF,EAAUhD,KAAK+B,MAIvB1F,EAAMb,YAAYwH,IA+ClBgB,KADJ,WASR,OAAOf,EAAkBM,OAAS,EAAIJ,EAAe,Q,QCvG5Cc,EAAkB,SAAAzK,GAAI,MAAK,CACtCA,KAAM0K,IAAYC,kBAClBxK,QAASH,IAGE4K,EAAc,SAAA5K,GAAI,MAAK,CAClCA,KAAM0K,IAAYG,cAClB1K,QAASH,IAGE8K,EAAqB,SAACC,GAAD,MAAc,CAC9C/K,KAAM0K,IAAYM,sBAClB7K,QAAS4K,IAGEE,EAAmB,SAAAjL,GAAI,MAAK,CACvCA,KAAM0K,IAAYQ,mBAClB/K,QAASH,IAGEmL,EAA0B,SAAAnL,GAAI,MAAK,CAC9CA,KAAM0K,IAAYU,2BAClBjL,QAASH,IAIEqL,EAAa,iBAAO,CAC/BrL,KAAM0K,IAAYY,cAGPC,EAAa,SAAAtB,GAAK,MAAK,CAClCjK,KAAM0K,IAAYc,YAClBrL,QAAS8J,IAGEwB,EAAa,SAAAxB,GAAK,MAAK,CAClCjK,KAAM0K,IAAYgB,YAClBvL,QAAS8J,I,SCOI3H,eAVS,SAACC,GAAD,MAAY,CAChCoJ,aAAcpJ,EAAMqJ,yBAAyBC,aAGtB,SAAClJ,GACxB,MAAO,CACHa,wBAAyB,SAACC,EAAMC,EAAW1C,GAAlB,OAAyB2B,EAASa,YAAwBC,EAAMC,EAAW1C,KACpG6C,WAAY,SAACC,GAAD,OAAYnB,EAASkB,YAAWC,QAGrCxB,EArCO,SAACO,GAMnB,OAAQ,yBAAKC,UAAU,8CACnB,6BACI,kBAAC8G,EAAA,EAAD,CAAQC,QAAQ,YAAY/G,UAAU,oCAAtC,UAGA,uBAAGA,UAAU,0BAA0BD,EAAM8I,aAAaG,MAAM/B,OAAhE,+BAEJ,6BACI,kBAACH,EAAA,EAAD,CAAQC,QAAQ,YAAY/G,UAAU,gBAAgBK,QAAS,cAA/D,UAGYN,EAAM8I,aAAaG,MAAM/B,OAHrC,eCgBGzH,eAJS,SAACC,GAAD,MAAY,CAChCwJ,WAAYxJ,EAAMyJ,uBAAuBlE,UAG9BxF,EA/BK,SAACO,GAMjB,OAAQ,yBAAKC,UAAU,8CACnB,6BACI,kBAAC8G,EAAA,EAAD,CAAQC,QAAQ,YAAY/G,UAAU,oCAAtC,UAGA,uBAAGA,UAAU,0BAA0BD,EAAMkJ,WAAWD,MAAM/B,OAA9D,+BAEJ,6BACI,kBAACH,EAAA,EAAD,CAAQC,QAAQ,YAAY/G,UAAU,gBAAgBK,QAAS,cAA/D,UAGYN,EAAMkJ,WAAWD,MAAM/B,OAHnC,e,QCbNkC,EAAmB7C,IAAM8C,MAAK,kBAAM,kCACpCC,EAAe/C,IAAM8C,MAAK,kBAAM,kCAChCE,EAAgBhD,IAAM8C,MAAK,kBAAM,kCACjCG,EAAiBjD,IAAM8C,MAAK,kBAAM,iCAClCI,EAAoBlD,IAAM8C,MAAK,kBAAM,kCACrCK,EAAkBnD,IAAM8C,MAAK,kBAAM,kCACnCM,EAAoBpD,IAAM8C,MAAK,kBAAM,kCA4D5B5J,eAZS,SAACC,GAAD,MAAY,CAChCwC,SAAUxC,EAAMwC,SAASA,SACzBC,YAAazC,EAAM+B,KAAKU,gBAGD,SAACrC,GACxB,MAAO,CACH7C,kBAAmB,SAAC2M,GAAD,OAAa9J,EAAS7C,YAAkB2M,KAC3D9L,cAAgB,SAACsE,GAAD,OAAUtC,EAAShC,YAAcsE,QAI1C3C,EAzDG,SAACO,GAEf,IAAI6J,EACAC,EAAe,KAgCnB,MA9BoC,YAAjC9J,EAAMkC,SAASQ,eACG,aAAd1C,EAAMyF,IACLoE,EAAmB,kBAACT,EAAD,MACA,UAAdpJ,EAAMyF,MACXoE,EAAmB,kBAACP,EAAD,OAGe,aAAjCtJ,EAAMkC,SAASQ,iBAEH,aAAd1C,EAAMyF,IACLoE,EAAmB,kBAACJ,EAAD,MACA,UAAdzJ,EAAMyF,IACXoE,EAAmB,kBAACN,EAAD,MAEA,UAAdvJ,EAAMyF,MACXqE,EAAe,kBAAC,EAAD,MACfD,EAAmB,kBAACL,EAAD,MAEc,WAA9BxJ,EAAMkC,SAASgE,YACd4D,EAAe,kBAAC,EAAD,MACfD,EAAmB,kBAACH,EAAD,OACiB,aAA9B1J,EAAMkC,SAASgE,aACrB4D,EAAe,kBAAC,EAAD,MACfD,EAAmB,kBAACF,EAAD,SAOvB,oCACJ,yBAAKxL,GAAG,oBAEJ,kBAAC,WAAD,CAAU4L,SAAU,kBAACC,EAAA,EAAD,OAApB,IAAqCH,EAArC,OAECC,MCXErK,eAXS,SAACC,GAAD,MAAY,CAChCwC,SAAUxC,EAAMwC,SAASA,SACzBC,YAAazC,EAAM+B,KAAKU,gBAGD,SAACrC,GACxB,MAAO,CACH7C,kBAAmB,SAAC2M,GAAD,OAAa9J,EAAS7C,YAAkB2M,QAIpDnK,EAzCE,SAACO,GAEd,IAAIyE,EAEJ,OAAOzE,EAAMkC,SAASQ,gBAClB,IAAK,WACD+B,EAAO,CACH,CAACV,KAAO,WAAY4B,KAAM,aAAe3F,EAAMmC,YAAYhE,GAAK,aAChE,CAAC4F,KAAO,QAAS4B,KAAM,aAAe3F,EAAMmC,YAAYhE,GAAK,WAEjE,MACJ,IAAK,YACDsG,EAAO,CACH,CAACV,KAAO,WAAY4B,KAAM,aAAe3F,EAAMmC,YAAYhE,GAAK,aAChE,CAAC4F,KAAO,QAAS4B,KAAM,aAAe3F,EAAMmC,YAAYhE,GAAK,UAC7D,CAAC4F,KAAO,QAAS4B,KAAM,aAAe3F,EAAMmC,YAAYhE,GAAK,WAKzE,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAaoC,KAAMkE,EAAMmF,QAAS5J,EAAMkC,SAAUT,KAAMzB,EAAMmC,YAAa2D,kBAAkB,IAE7F,kBAAC,EAAD,CAAkBL,IAAKzF,EAAMiK,gB,kBCkL1BxK,eAXS,SAACC,GAAD,MAAY,CAChCyG,SAAUzG,EAAM0G,WAAWD,aAGJ,SAACrG,GACxB,MAAO,CACHoK,oBAAqB,SAACnL,GAAD,OAASe,EAASoK,YAAoBnL,KAC3DoL,oBAAqB,SAACpL,GAAD,OAASe,EAASqK,YAAoBpL,QAIpDU,EAvMK,SAACO,GAAW,IAAD,EAECuG,IAAMC,SAAS,KAFhB,mBAEpB4D,EAFoB,KAEZC,EAFY,OAGiB9D,IAAMC,UAAS,GAHhC,mBAGpB8D,EAHoB,KAGJC,EAHI,OAIChE,IAAMC,SAAS,KAJhB,mBAIpBgE,EAJoB,KAIZC,EAJY,OAKiBlE,IAAMC,UAAS,GALhC,mBAKpBkE,EALoB,KAKJC,EALI,KAQvBC,EAAsB,CACtBC,SAAU,EAAIT,EAAO,IAAI,OAAQU,QAAQ,GACzCC,WAAYX,GAAU,EAAIA,EAAO,IAAI,OAAQU,QAAQ,IAAKA,QAAQ,GAClEE,YAAa,EAAIZ,EAAO,IAAI,OAAQU,QAAQ,GAC5CG,aAAcb,GAAU,GAAKA,EAAO,IAAI,OAAQU,QAAQ,IAAIA,QAAQ,IAGpEI,EAAuB,CACvBL,SAAU,EAAIL,EAAO,IAAK,OAAQM,QAAQ,GAC1CC,WAAYP,GAAU,EAAIA,EAAO,IAAK,OAAQM,QAAQ,IAAKA,QAAQ,GACnEE,YAAa,EAAIR,EAAO,IAAK,OAAQM,QAAQ,GAC7CG,aAAcT,GAAU,GAAKA,EAAO,IAAK,OAAQM,QAAQ,IAAIA,QAAQ,IAiBrEK,EAAyB,yBAAKlL,UAAU,UAAS,0BAAMA,UAAU,QAAhB,KAAgCmK,EAAO,yBAAKnK,UAAU,SAASK,QAAS,WAAKiK,GAAkB,KAASrF,IAASkG,QAAQC,SAC3Kf,IACCa,EAAyB,yBAAKlL,UAAU,UACpC,kBAAC,IAAD,CACIqL,MAAM,sBACN9D,WAAS,EACT+D,KAAM,EACNnE,MAAOgD,EACP/C,SAAU,SAACC,GAjBlB+C,EAiBsC/C,EAjBtBC,OAAOH,QAkBhBJ,QAAQ,SACR/G,UAAU,gBAEd,yBAAKA,UAAU,SAASK,QAAS,WAAKiK,GAAkB,KAAUrF,IAASkG,QAAQC,UAK3F,IAAIG,EAA0B,yBAAKvL,UAAU,UAAS,0BAAMA,UAAU,QAAhB,KAAgCuK,EAAO,yBAAKvK,UAAU,SAASK,QAAS,WAAKqK,GAAkB,KAASzF,IAASkG,QAAQC,SAiB/K,OAhBGX,IACCc,EAA0B,yBAAKvL,UAAU,UACrC,kBAAC,IAAD,CACIqL,MAAM,sBACN9D,WAAS,EACT+D,KAAM,EACNnE,MAAOoD,EACPnD,SAAU,SAACC,GA5BnBmD,EA4BuCnD,EA5BvBC,OAAOH,QA6BfJ,QAAQ,SACR/G,UAAU,gBAEd,yBAAKA,UAAU,SAASK,QAAS,WAAKqK,GAAkB,KAAUzF,IAASkG,QAAQC,UAMvF,yBAAKpL,UAAU,0BACX,yBAAKA,UAAU,WACX,gCACI,wBAAIA,UAAU,UAAd,oBACA,wBAAIA,UAAU,UAAd,gEACA,uBAAGA,UAAU,UAAb,oNAGJ,8BACI,yBAAKA,UAAU,OACX,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,cACf,wBAAIA,UAAU,UAAd,YACA,wBAAIA,UAAU,UAAd,sBAEA,yBAAKA,UAAU,UAEVkL,EAED,yBAAKlL,UAAU,SACX,kBAACwL,EAAA,EAAD,CACIC,KAAM,IACNC,IAAK,IACLnK,IAAK,IACL4F,MAAOgD,EAAQ/C,SAzEjC,SAACuE,EAAOC,GAC1BxB,EAAUwB,QA4Ec,yBAAK5L,UAAU,gBACX,6BAEI,6BAAK,0BAAMA,UAAU,SAAhB,IAA0B2K,EAAoBC,SAAnD,SACA,6BAAK,0BAAM5K,UAAU,SAAhB,IAA0B2K,EAAoBI,YAAnD,aAGJ,yBAAK/K,UAAU,UAAU2K,EAAoBG,UAA7C,YAAiEH,EAAoBK,YAArF,cAGR,yBAAKhL,UAAU,UACX,kBAAC8G,EAAA,EAAD,CAAQC,QAAQ,YAAY/G,UAAU,gBAAgBK,QAAS,WAAKN,EAAMmK,oBAAoB,CAAC3M,MAAM,EAAM+C,KAAM6J,MAAjH,iBASR,yBAAKnK,UAAU,MAAf,MAGA,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,cACf,wBAAIA,UAAU,UAAd,aACA,wBAAIA,UAAU,UAAd,iBACA,yBAAKA,UAAU,UACVuL,EACD,yBAAKvL,UAAU,SACX,kBAACwL,EAAA,EAAD,CACIC,KAAM,IACNC,IAAK,IACLnK,IAAK,IACL4F,MAAOoD,EAAQnD,SA1GjC,SAACuE,EAAOC,GAC1BpB,EAAUoB,IAyGkEC,kBAAgB,wBAIpE,yBAAK7L,UAAU,gBACX,6BAEI,6BAAK,0BAAMA,UAAU,SAAhB,IAA0BiL,EAAqBL,QAA/C,KAAL,UACA,6BAAK,0BAAM5K,UAAU,SAAhB,IAA0BiL,EAAqBF,WAA/C,KAAL,cAGJ,yBAAK/K,UAAU,UAAUiL,EAAqBH,UAA9C,YAAkEG,EAAqBD,YAAvF,cAGR,yBAAKhL,UAAU,UACX,kBAAC8G,EAAA,EAAD,CAAQC,QAAQ,YAAY/G,UAAU,gBAAgBK,QAAS,WAAKN,EAAMkK,oBAAoB,CAAC1M,MAAM,EAAM+C,KAAMiK,MAAjH,kBAMZ,yBAAKvK,UAAU,OACX,yBAAKA,UAAU,uBAAf,iEAGA,8BAGA,yBAAKA,UAAU,uBAAf,qEAKJ,yBAAKA,UAAU,eAGnB,gCAEI,6BACI,4BACI,6CACA,4CACA,6CACA,mD,kBCpLf8L,GAAe,SAAAhN,GAAG,MAAK,CAChC5B,KAAM6O,KAAaC,cACnB3O,QAASyB,IC8FEU,gBANS,SAACC,GAAD,MAAY,CAChCwM,SAAUxM,EAAMwM,SAASA,YAKdzM,EAhGG,SAACO,GAAW,IAAD,EAESuG,IAAMC,SAAS,GAFxB,mBAEpB2F,EAFoB,KAERC,EAFQ,KAIrBC,EAAgBrM,EAAMkM,SAAS1G,KAAI,SAAC5E,EAAMgF,GAE1C,GAAGuG,GAAcvG,EAAK,CAElB,IAAI0G,EAAY1L,EAAK0L,UAAU9G,KAAI,SAAC5E,EAAMgF,GACtC,OAAQ,wBAAIA,IAAKA,GAAMV,IAASqH,eAAeC,SAAU5L,MAEzD6L,EAAkB7L,EAAK6L,gBAAgBjH,KAAI,SAAC5E,EAAMgF,GAClD,OAAQ,wBAAIA,IAAKA,GAAMV,IAASqH,eAAeG,QAAS9L,MAU5D,OACI,yBAAKX,UAAU,4BAA4B2F,IAAKA,GAC5C,gCACI,4BAAKhF,EAAK4C,MAAM,8BAAO5C,EAAK+L,cAC5B,gDAAqB,0BAAM1M,UAAU,SAASW,EAAKgM,UAEnD,yBAAK3M,UAAU,YACX,yBAAKA,UAAU,gBAAgBK,QAAS,cAAxC,eACA,yBAAKL,UAAU,MAAMK,QAAS,cAA9B,aACA,yBAAKL,UAAU,MAAMK,QAAS,cAA9B,eAKR,8BACI,yBAAKL,UAAU,UACX,oDACA,yBAAKA,UAAU,cACf,4BAAKwM,IAGT,yBAAKxM,UAAU,UACX,0EACA,yBAAKA,UAAU,cACf,4BACI,4BAAKiF,IAASqH,eAAeC,SAA7B,YAA+C,8BAAO5L,EAAKiM,kBAAkBC,UAC7E,4BAAK5H,IAASqH,eAAeC,SAA7B,UAA6C,8BAAO5L,EAAKiM,kBAAkBE,QAC3E,4BAAK7H,IAASqH,eAAeC,SAA7B,UAA6C,8BAAO5L,EAAKiM,kBAAkBG,UAInF,yBAAK/M,UAAU,UACX,yCACA,yBAAKA,UAAU,cACf,4BAAKqM,UAU7BW,OAAOC,uBAAsB,WACzB,IAAIC,EAAcC,SAASC,cAAc,yBACrBC,IAAhBH,IACAA,EAAYI,UAAYJ,EAAYK,iBAU5C,OACI,yBAAKvN,UAAU,uBACX,yBAAKA,UAAU,mBACVoM,EACD,yBAAKpM,UAAU,WAAWK,QAAS,WAT3C8L,EAAcD,EAAW,KASjB,qB,sEC4GD1M,gBANS,SAACC,GAAD,MAAY,CAChC+N,YAAa/N,EAAM6D,QAAQkK,YAAYC,cAK5BjO,EAxLS,SAACO,GAAW,IAAD,EACOuG,IAAMC,SAAS,IADtB,mBACxBmH,EADwB,KACXC,EADW,OAEOrH,IAAMC,UAAS,GAFtB,mBAExBqH,EAFwB,KAEXC,EAFW,KAMzBC,EAAY,SAAC5Q,GACf,IAGI6Q,EAHAC,EAAO,IAAIC,KACXC,EAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAC5C,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOF,EAAKG,YAEnD,OAAQjR,GACJ,IAAK,QACD6Q,EAAMC,EAAKI,SACX,MACJ,IAAK,YACDL,EAAMC,EAAKI,SAAW,EAM9B,OAAQ,kBAACC,GAAA,EAAD,CAAUrO,UAAU,YACxB,kBAAC,KAAD,CAAWA,UAAU,+BAA+BsO,QAAQ,KACxD,uBAAGtO,UAAU,eAAe9C,GAC5B,0BAAM8C,UAAU,qBAAqB+N,EAArC,IAA2CG,MA2EjDK,EAAW,SAAC9I,EAAGE,GACjB,OACI,kBAAC0I,GAAA,EAAD,CAAU1I,IAAKA,GACX,kBAAC,KAAD,CAAW3F,UAAU,2CAA2CyF,EAAE+I,QAClE,kBAAC,KAAD,CAAWxO,UAAU,qBACjB,0BAAMA,UAAU,gDAAgDiF,IAASwI,WAAWgB,WAApF,IAAiGhJ,EAAEiJ,UAEvG,kBAAC,KAAD,CAAW1O,UAAU,gCAAgCyF,EAAEkJ,aACvD,kBAAC,KAAD,CAAW3O,UAAU,iDAAiDyF,EAAEnC,SACxE,kBAAC,KAAD,CAAWtD,UAAU,oBAAmB,0BAAMA,UAAU,oEAAoEyF,EAAEmJ,YAAa3J,IAASwI,WAAWvP,KAC/J,kBAAC,KAAD,CAAW8B,UAAU,qBAxBX,SAAC6O,GACnB,IAAIC,EAAI,IAAIb,KAAsB,IAAjBY,GAGbX,GADOY,EAAEC,cADA,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAE7DD,EAAEX,aAMrB,OALWW,EAAEE,UAIK,IAAMd,EAAbF,KAHAc,EAAEG,WAGuC,IAF1CH,EAAEI,aAEoD,IADtDJ,EAAEK,aAgBsCC,CAAc3J,EAAEuI,SASlEqB,EAAetP,EAAMyN,YAAY8B,QAAO,SAAA7J,GAExC,GACIA,EAAEkJ,YAAYY,cAAcC,SAAS9B,EAAY6B,gBACjD9J,EAAEmJ,YAAYW,cAAcC,SAAS9B,EAAY6B,eAEjD,OAAO9J,KAYf,OAPA4J,EAAeA,EAAa9J,KAAI,SAACE,EAAGE,GAEhC,OAAO4I,EAAS9I,EAAGE,MAMnB,yBAAK3F,UAAU,oBACX,yBAAKA,UAAU,eAEX,kBAAC,IAAD,CACI+G,QAAQ,SACRQ,WAAS,EACTvH,UAAU,cACVyP,YAAY,SACZtI,MAAOuG,EACPtG,SAAU,SAACC,GAAKsG,EAAetG,EAAEC,OAAOH,UAK5C,yBAAKnH,UAAU,gCACX,yBAAKA,UAAU,YAAYiF,IAASyK,iBAAiBC,UACrD,6BAAM1K,IAASyK,iBAAiBJ,UAGxC,kBAACM,GAAA,EAAD,CAAO5P,UAAU,eAEb,kBAAC6P,GAAA,EAAD,KACI,kBAACxB,GAAA,EAAD,KACQ,kBAAC,KAAD,CAAWrO,UAAU,0CAArB,OACA,kBAAC,KAAD,CAAWA,UAAU,yBAArB,yBACA,kBAAC,KAAD,CAAWA,UAAU,qBAArB,eACA,kBAAC,KAAD,CAAWA,UAAU,0CAArB,cACA,kBAAC,KAAD,CAAWA,UAAU,0BAArB,gBACA,kBAAC,KAAD,CAAWA,UAAW4N,EAAc,gCAAkC,kDAAmDvN,QAAS,WAAKwN,GAAgBD,KAAgB3I,IAAS6K,WAAW9B,KAA3L,WAIZ,kBAAC+B,GAAA,EAAD,CAAY/P,UAAU,YACjB0N,EAAYzG,OAASoI,EAA4BzB,EA1HlD,oCAEHE,EAAU,aAEV/N,EAAMyN,YAAYjI,KAAI,SAACE,EAAGE,GACvB,OAAO4I,EAAS9I,EAAGE,MACpBqK,UAGFlC,EAAU,SAEV/N,EAAMyN,YAAYjI,KAAI,SAACE,EAAGE,GACvB,OAAO4I,EAAS9I,EAAGE,MACpBqK,WA5BC,oCACHlC,EAAU,SAEV/N,EAAMyN,YAAYjI,KAAI,SAACE,EAAGE,GACvB,OAAO4I,EAAS9I,EAAGE,MAGtBmI,EAAU,aAEV/N,EAAMyN,YAAYjI,KAAI,SAACE,EAAGE,GACvB,OAAO4I,EAAS9I,EAAGE,aCpCxBsK,GAlBI,WAQf,OACI,kBAAC,WAAD,KACQ,kBAAC,EAAD,CAAa3P,KARd,CACP,CAACwD,KAAO,aAAc4B,KAAM,eAC5B,CAAC5B,KAAO,eAAgB4B,KAAM,oBAOtB,yBAAK1F,UAAU,qBACX,kBAAC,GAAD,SCuLLR,gBANS,SAACC,GAAD,MAAY,CAChC+N,YAAa/N,EAAM6D,QAAQkK,YAAY0C,gBAK5B1Q,EAzLW,SAACO,GAAW,IAAD,EACKuG,IAAMC,SAAS,IADpB,mBAC1BmH,EAD0B,KACbC,EADa,OAEKrH,IAAMC,UAAS,GAFpB,mBAE1BqH,EAF0B,KAEbC,EAFa,KAM3BC,EAAY,SAAC5Q,GACf,IAGI6Q,EAHAC,EAAO,IAAIC,KACXC,EAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAC5C,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOF,EAAKG,YAEnD,OAAQjR,GACJ,IAAK,QACD6Q,EAAMC,EAAKI,SACX,MACJ,IAAK,YACDL,EAAMC,EAAKI,SAAW,EAM9B,OAAQ,kBAACC,GAAA,EAAD,CAAUrO,UAAU,YACxB,kBAAC,KAAD,CAAWA,UAAU,+BAA+BsO,QAAQ,KACxD,uBAAGtO,UAAU,eAAe9C,GAC5B,0BAAM8C,UAAU,qBAAqB+N,EAArC,IAA2CG,MA0EjDK,EAAW,SAAC9I,EAAGE,GACjB,OACE,kBAAC0I,GAAA,EAAD,CAAU1I,IAAKA,GACZ,kBAAC,KAAD,CAAW3F,UAAU,2CAA2CyF,EAAE+I,QAClE,kBAAC,KAAD,CAAWxO,UAAU,qBACjB,0BAAMA,UAAU,gDAAgDiF,IAASwI,WAAWgB,WAApF,IAAiGhJ,EAAE0K,SAEvG,kBAAC,KAAD,CAAWnQ,UAAU,gCAArB,WACA,kBAAC,KAAD,CAAWA,UAAU,iCAArB,kBACA,kBAAC,KAAD,CAAWA,UAAU,oBAAmB,0BAAMA,UAAU,oEAAhB,eAAgGiF,IAASwI,WAAWvP,KAC5J,kBAAC,KAAD,CAAW8B,UAAU,qBAvBR,SAAC6O,GACnB,IAAIC,EAAI,IAAIb,KAAsB,IAAjBY,GAGbX,GADOY,EAAEC,cADA,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAE7DD,EAAEX,aAMrB,OALWW,EAAEE,UAIK,IAAMd,EAAbF,KAHAc,EAAEG,WAGuC,IAF1CH,EAAEI,aAEoD,IADtDJ,EAAEK,aAemCC,CAAc3J,EAAEuI,SAQ/DqB,EAAetP,EAAMyN,YAAY8B,QAAO,SAAA7J,GAExC,GACIA,EAAE0K,OAAOZ,cAAcC,SAAS9B,EAAY6B,gBAC5C9J,EAAE2K,cAAcb,cAAcC,SAAS9B,EAAY6B,gBACnD9J,EAAEkJ,YAAYY,cAAcC,SAAS9B,EAAY6B,gBACjD9J,EAAE4K,cAAcd,cAAcC,SAAS9B,EAAY6B,eAEnD,OAAO9J,KAYf,OAPA4J,EAAeA,EAAa9J,KAAI,SAACE,EAAGE,GAEhC,OAAO4I,EAAS9I,EAAGE,MAMnB,yBAAK3F,UAAU,oBACX,yBAAKA,UAAU,eAEX,kBAAC,IAAD,CACI+G,QAAQ,SACRQ,WAAS,EACTvH,UAAU,cACVyP,YAAY,SACZtI,MAAOuG,EACPtG,SAAU,SAACC,GAAKsG,EAAetG,EAAEC,OAAOH,UAK5C,yBAAKnH,UAAU,gCACX,yBAAKA,UAAU,YAAYiF,IAASyK,iBAAiBC,UACrD,6BAAM1K,IAASyK,iBAAiBJ,UAGxC,kBAACM,GAAA,EAAD,CAAO5P,UAAU,eAEb,kBAAC6P,GAAA,EAAD,KACI,kBAACxB,GAAA,EAAD,KACI,kBAAC,KAAD,CAAWrO,UAAU,0CAArB,OACA,kBAAC,KAAD,CAAWA,UAAU,yBAArB,UACA,kBAAC,KAAD,CAAWA,UAAU,yBAArB,kBACA,kBAAC,KAAD,CAAWA,UAAU,sBAArB,eACA,kBAAC,KAAD,CAAWA,UAAU,0BAArB,kBACA,kBAAC,KAAD,CAAWA,UAAW4N,EAAc,gCAAkC,kDAAmDvN,QAAS,WAAKwN,GAAgBD,KAAgB3I,IAAS6K,WAAW9B,KAA3L,WAKR,kBAAC+B,GAAA,EAAD,CAAY/P,UAAU,YACjB0N,EAAYzG,OAASoI,EAA4BzB,EA3HlD,oCAEHE,EAAU,aAEV/N,EAAMyN,YAAYjI,KAAI,SAACE,EAAGE,GACvB,OAAO4I,EAAS9I,EAAGE,MACpBqK,UAGFlC,EAAU,SAEV/N,EAAMyN,YAAYjI,KAAI,SAACE,EAAGE,GACvB,OAAO4I,EAAS9I,EAAGE,MACpBqK,WA5BC,oCACHlC,EAAU,SAEV/N,EAAMyN,YAAYjI,KAAI,SAACE,EAAGE,GACvB,OAAO4I,EAAS9I,EAAGE,MAGtBmI,EAAU,aAEV/N,EAAMyN,YAAYjI,KAAI,SAACE,EAAGE,GACvB,OAAO4I,EAAS9I,EAAGE,aCpCxB2K,GAlBM,WAQjB,OACI,kBAAC,WAAD,KACQ,kBAAC,EAAD,CAAahQ,KARd,CACP,CAACwD,KAAO,aAAc4B,KAAM,eAC5B,CAAC5B,KAAO,eAAgB4B,KAAM,oBAOtB,yBAAK1F,UAAU,qBACX,kBAAC,GAAD,S,mDCiELR,gBAbS,SAACC,GAAD,MAAY,CAChCyG,SAAUzG,EAAM0G,WAAWD,aAGJ,SAACrG,GACxB,MAAO,CACH0Q,oBAAqB,SAAChT,GAAD,OAAUsC,EAAS0Q,YAAoBhT,KAC5DiT,wBAAyB,SAACjT,GAAD,OAAUsC,EAAS2Q,YAAwBjT,KACpEkT,uBAAwB,SAAClT,GAAD,OAAUsC,EAAS4Q,YAAuBlT,QAK3DiC,EAtEC,SAACO,GAEb,IAAI+D,EAAO,eAFY,EAKKwC,IAAMC,WALX,mBAKhB4D,EALgB,KAKRC,EALQ,KAOvB,OACI,yBAAKlM,GAAG,qBACJ,gCACI,yBAAKqC,IAAKmQ,KAAYjQ,IAAI,KAC1B,6BACI,wBAAIT,UAAU,cAAc8D,GAC5B,0CAVG,qBAaX,8BACI,yBAAK9D,UAAU,gBACX,qCACA,2BAAI8D,GACJ,yBAAK9D,UAAU,2BAAf,sBAEJ,yBAAKA,UAAU,gBACX,qCACA,2BAAI8D,EAAJ,cACA,yBAAK9D,UAAU,SACfK,QAAS,WAAMN,EAAMwQ,qBAAoB,KADzC,WAIJ,yBAAKvQ,UAAU,gBACX,wCACA,+BAAK8D,GACL,yBAAK9D,UAAU,SAASK,QAAS,WAAMN,EAAM0Q,wBAAuB,KAApE,WAEJ,yBAAKzQ,UAAU,gBACX,wCACA,iDACA,yBAAKA,UAAU,SAASK,QAAS,WAAMN,EAAMyQ,yBAAwB,KAArE,WAEJ,yBAAKxQ,UAAU,gBACX,wDACA,yBAAKA,UAAU,kBACf,kBAAC,KAAD,CAAQ6D,QAAUsG,EACVrG,KAAK,YACLsD,SAAU,SAACC,GAAM+C,GAAWD,MACpC,uBAAGnK,UAAU,WAAU,0BAAMA,UAAU,gBAAhB,aAEvB,yBAAKA,UAAU,UAAf,gB,8BCrBL2Q,GAlCC,SAAC5Q,GAEb,IAAI6Q,EACAC,EAAuB,iBAgB3B,OAdG9Q,EAAMO,KAAKwQ,QAAQ7J,OAAS,GAC3B2J,EAAO,yBACF7Q,EAAMO,KAAKwQ,QAAQ7J,OAAS,IACjC2J,EAAO,0BACF7Q,EAAMO,KAAKwQ,QAAQ7J,OAAS,MACjC2J,EAAO,0BAGXC,GAA8CD,EAE3C7Q,EAAMO,KAAKyQ,QACVF,GAA8C,0BAI9C,yBAAK7Q,UAAW6Q,GACZ,gCACI,yBAAK7Q,UAAU,WACX,yBAAKO,IAAKyQ,KAAMvQ,IAAI,SACnBV,EAAMO,KAAK2Q,QAChB,yBAAKjR,UAAU,QAAQD,EAAMO,KAAK0N,OAEtC,8BACKjO,EAAMO,KAAKwQ,WC4CbtR,gBAZS,SAACC,GAAD,MAAY,CAChCyR,QAASzR,EAAMyR,QAAQA,QACvBhL,SAAUzG,EAAM0G,WAAWD,aAGJ,SAACrG,GACxB,MAAO,CACHsR,aAAc,SAAC5T,GAAD,OAAUsC,EAASsR,YAAa5T,KAC9C6T,UAAW,SAACC,GAAD,OAAUxR,EAASuR,YAAUC,QAIjC7R,EAhEM,SAACO,GAElB,IAkBIuL,EAAQvL,EAAMmR,QAAQ3L,KAAI,SAAC5E,GAC3B,OAAQ,kBAAC0N,GAAA,EAAD,CAAUhO,QAAS,WAnBZ,IAACC,IAmB4BK,EAlB5CZ,EAAMqR,UAAU9Q,EAAKgR,QACrBvR,EAAMoR,cAAa,KAkBf,kBAAC,KAAD,CAAWnR,UAAU,gCAAgCW,EAAK4C,OAC1D,kBAAC,KAAD,CAAWvD,UAAU,iCAhBHC,EAgBoDU,EAflE,kBAAC,WAAD,KAAU,0BAAMX,UAAU,kBAAkBC,EAAQK,KAAKL,EAAQK,KAAK2G,OAAO,GAAGgK,OAAtE,KAAsFhR,EAAQK,KAAKL,EAAQK,KAAK2G,OAAO,GAAG6J,WAgBxI,kBAAC,KAAD,CAAW9Q,UAAU,qCAAqCW,EAAK4Q,cAC/D,kBAAC,KAAD,CAAWvR,UAAU,qCAfL,SAACC,GACrB,OAAQ,kBAAC,WAAD,KAAWA,EAAQK,KAAKL,EAAQK,KAAK2G,OAAO,GAAG+G,MAcOwD,CAAgB7Q,KAlBzD,IAACV,KA0B1B,OACI,yBAAKD,UAAU,oBACX,kBAAC4P,GAAA,EAAD,CAAO5P,UAAU,cACb,kBAAC6P,GAAA,EAAD,KACI,kBAACxB,GAAA,EAAD,KACI,kBAAC,KAAD,CAAWrO,UAAU,yBAArB,SACA,kBAAC,KAAD,CAAWA,UAAU,oBAArB,gBACA,kBAAC,KAAD,CAAWA,UAAU,0CAArB,iBACA,kBAAC,KAAD,CAAWA,UAAU,0BAArB,kBAIR,kBAAC+P,GAAA,EAAD,KACKzE,Q,mBCyEN9L,gBAbS,SAACC,GAAD,MAAY,CAChCyR,QAASzR,EAAMyR,QAAQA,QACvBhL,SAAUzG,EAAM0G,WAAWD,SAC3BhE,YAAazC,EAAM+B,KAAKU,gBAGD,SAACrC,GACxB,MAAO,CACHsR,aAAc,SAAC5T,GAAD,OAAUsC,EAASsR,YAAa5T,KAC9CkU,WAAY,SAAC3S,GAAD,OAASe,ET5HH,SAAAf,GAAG,MAAK,CAC9B5B,KAAM6O,KAAa2F,YACnBrU,QAASyB,GS0HyB2S,CAAW3S,QAIlCU,EAxHF,SAACO,GAEV,IAAoB4R,EAFA,EAGIrL,IAAMC,SAAS,IAHnB,mBAGbqL,EAHa,KAGPC,EAHO,KAsChBC,EAAgB/R,EAAMmR,QAAQ3L,KAAI,SAAC5E,GAEnC,GAAGA,EAAK2Q,SAAWvR,EAAMmG,SAAS6L,UAAUC,cAOxC,OANAL,EAAiBhR,EAEGA,EAAKL,KAAKiF,KAAI,SAAC0M,EAAYC,GAC3C,OAAQ,kBAAC,GAAD,CAAkB5R,KAAM2R,EAAYtM,IAAKuM,EAAEtM,mBAO3DuM,EAAW,CACXC,KAAO,yBAAKpO,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACrE,0BAAMC,EAAE,uUAAuUF,KAAK,aAExVkO,SAAW,yBAAKrO,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACzE,0BAAMC,EAAE,+iCAA+iCF,KAAK,QAAQG,YAAY,SAEplC0J,KAAO,yBAAKhK,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,8BACjE,0BAAMC,EAAE,qzDAAqzDF,KAAK,QAAQG,YAAY,UAYl2D,OAPA0I,OAAOC,uBAAsB,WACzB,IAAIC,EAAcC,SAASC,cAAc,qBACrBC,IAAhBH,IACAA,EAAYI,UAAYJ,EAAYK,iBAKxC,kBAAC,WAAD,KACI,yBAAKvN,UAAU,eACX,yBAAKA,UAAU,OAAOK,QAAS,WA7DvCN,EAAMoR,cAAa,MA+DX,0BAAMnR,UAAU,sBAAsB2R,EAAepO,OACrD,0BAAMvD,UAAU,0BAA0BmS,EAASE,SAAUV,EAAeW,SAC5E,0BAAMtS,UAAU,qBAAqBmS,EAASnE,KAAM2D,EAAeJ,eAIvE,yBAAKvR,UAAU,eACV8R,EACD,yBAAK9R,UAAU,YAGnB,yBAAKA,UAAU,gBAEX,kBAAC,KAAD,CACIqL,MAAM,UACNlE,MAAOyK,EACPxK,SAAU,SAACC,GA1DL,IAACC,IA2DWD,EAAEC,OA1DhCuK,EAAQvK,EAAOH,QA4DHoL,WAAS,EACTjH,KAAM,EACNvE,QAAQ,WAGZ,yBAAK/G,UAAU,iCAAiCK,QAAS,YArFjD,WAEhB,GAAmB,IAAhBuR,EAAK3K,OAAc,CAClB,IAAIuL,EAAU,CACNlB,OAAQK,EAAeL,OACvBR,QAAS,CACLG,OAAQlR,EAAMmC,YAAY4B,KAC1BiN,OAAO,EACPD,QAASc,EACT5D,KAAM,mBACNyE,UAAWxE,KAAKyE,QAI5B3S,EAAM0R,WAAWe,GACjBX,EAAQ,IACRW,EAAU,MAqEwDG,KAAiBR,EAASC,WCvEzF5S,gBALS,SAACC,GAAD,MAAY,CAChCyR,QAASzR,EAAMyR,QAAQA,QACvBhL,SAAUzG,EAAM0G,WAAWD,YAGhB1G,EAhCC,SAACO,GAEb,IAOI6S,EACA,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAatS,KAPV,CACP,CAAEwD,KAAO,UAAW4B,KAAM,YAC1B,CAAE5B,KAAO,aAAc4B,KAAM,gBAKAN,SAAS,IAClC,yBAAKpF,UAAU,qBACX,kBAAC,GAAD,QAMZ,OAAGD,EAAMmG,SAAS6L,UAAUc,WAChB,kBAAC,WAAD,KAAU,kBAAC,GAAD,OAEXD,KCyGApT,I,OAAAA,aAdS,SAACC,GAAD,MAAY,CAChCyR,QAASzR,EAAMyR,QAAQA,QACvBhL,SAAUzG,EAAM0G,WAAWD,SAC3BhE,YAAazC,EAAM+B,KAAKU,gBAGD,SAACrC,GACxB,MAAO,CACHsR,aAAc,SAAC5T,GAAD,OAAUsC,EAASsR,YAAa5T,KAC9CuO,aAAc,SAAChN,GAAD,OAASe,EAASiM,GAAahN,KAC7CsS,UAAW,SAACC,GAAD,OAAUxR,EAASuR,YAAUC,QAIjC7R,EAxHG,SAACO,GACf,IADyB,EAMKuG,IAAMC,SAAS,oCANpB,mBAMlB+L,EANkB,KAMTQ,EANS,OAOCxM,IAAMC,SAAS,kCAPhB,mBAOlBhD,EAPkB,KAOXwP,EAPW,OAQEzM,IAAMC,SAAS,IARjB,mBAQlBqL,EARkB,KAQZoB,EARY,KAoBrB9P,EAAUC,cA0BV,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAa7C,KA/Cd,CACP,CAACwD,KAAM,UAAW4B,KAAM,YACxB,CAAC5B,KAAM,aAAc4B,KAAM,gBA6CMN,SAAS,IAClC,yBAAKpF,UAAU,wBACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CACI+G,QAAQ,SACRQ,WAAS,EACTC,QAAM,EACN6D,MAAM,UACNlE,MAAOmL,EACPlL,SA/CF,SAACuE,GACnBmH,EAAWnH,EAAMrE,OAAOH,SAgDJ,kBAACM,EAAA,EAAD,CAAUN,MAAM,eAAhB,eACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,oCAAhB,oCACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,qCAAhB,qCACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,qCAAhB,qCACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,qCAAhB,sCAEJ,kBAAC,IAAD,CACIJ,QAAQ,SACRQ,WAAS,EACTC,QAAM,EACN6D,MAAM,QACNlE,MAAO5D,EACP6D,SAzDF,SAACuE,GACnBoH,EAASpH,EAAMrE,OAAOH,SA0DF,kBAACM,EAAA,EAAD,CAAUN,MAAO,aAAjB,aACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,kCAAjB,kCACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,mCAAjB,mCACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,mCAAjB,mCACA,kBAACM,EAAA,EAAD,CAAUN,MAAO,mCAAjB,oCAEJ,kBAAC,IAAD,CACIkE,MAAM,UACN9D,WAAS,EACTgL,WAAS,EACTjH,KAAM,GACNnE,MAAOyK,EACPxK,SApEF,SAACuE,GACnBqH,EAAWrH,EAAMrE,OAAOH,QAoEJJ,QAAQ,SACR/G,UAAU,oBAGd,yBAAKA,UAAU,gBAAgBK,QAAS,YApEvC,WACjB,IAAI4S,EAAehF,KAAKyE,MACxB,GAAmB,IAAhBd,EAAK3K,OAAc,CAClB,IAAIiM,EAAY,CACZ3P,MAAOA,EACP+O,QAASA,EACTf,aAAc0B,EACd3S,KAAM,CAAC,CACH2Q,OAAQlR,EAAMmC,YAAY4B,KAC1BiN,OAAO,EACPD,QAASc,EACT5D,KAAMiF,EACNR,UAAWQ,IAEf3B,OAAQ2B,GAGZlT,EAAM+L,aAAaoH,GACnBnT,EAAMqR,UAAU6B,GAChBlT,EAAMoR,cAAa,GACnBjO,EAAQQ,KAAK,aAiDGoI,KADJ,8BCZTtM,gBAZS,SAACC,GAAD,MAAY,CAChC0T,MAAO1T,EAAM0T,MAAMA,MACnBjN,SAAUzG,EAAM0G,WAAWD,aAGJ,SAACrG,GACxB,MAAO,CACHC,4BAA6B,SAAC5C,GAAD,OAAU2C,EAASC,YAA4B5C,KAC5EkW,mBAAoB,SAAClW,GAAD,OAAU2C,EAASuT,YAAmBlW,QAInDsC,EA/EI,SAACO,GAEhB,IAMMsT,EAAqB,SAAC/S,GACxBP,EAAMqT,mBAAmB,CAAC7V,MAAK,EAAM+C,KAAK,QATpB,EAYYgG,IAAMC,SAAS,IAZ3B,gCAaYD,IAAMC,UAAS,IAb3B,mBAanBqH,EAbmB,KAaNC,EAbM,KA6BtByF,EAAa,SAAC3S,GACd,OAAQ,kBAAC0N,GAAA,EAAD,CAAUhO,QAAS,WAAMgT,EAAmB1S,KAChD,kBAAC,KAAD,CAAWX,UAAU,iCAAiCW,EAAK4C,OAC3D,kBAAC,KAAD,CAAWvD,UAAU,+BAA+BW,EAAKwP,QACzD,kBAAC,KAAD,CAAWnQ,UAAU,oBAAmB,0BAAMA,UAAU,2CAA2CiF,IAASsO,UAAUC,SAAU7S,EAAK8S,SACrI,kBAAC,KAAD,CAAWzT,UAAU,oBAAmB,0BAAMA,UAAU,2CAA2CiF,IAASsO,UAAUC,SAAU7S,EAAK+S,QACrI,kBAAC,KAAD,CAAW1T,UAAU,iDAAiDW,EAAK6N,QAC3E,kBAAC,KAAD,CAAWxO,UAAU,gCAAgCW,EAAKgT,QAC1D,kBAAC,KAAD,CAAW3T,UAAU,oBAAoBW,EAAKiT,YAA9C,KAnCa3T,EAmC2DU,EAlCpE,yBAAKX,UAAU,cAAcK,QAAS,WAAKgT,EAAmBpT,KAAW,yBAAK+D,MAAM,IAAIC,OAAO,KAAKC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,8BAC7I,0BAAMC,EAAE,omBAAomBF,KAAK,QAAQG,YAAY,aAFznB,IAACrE,GA4CrB,OACI,yBAAKD,UAAU,oBACX,kBAAC4P,GAAA,EAAD,CAAO5P,UAAU,cACb,kBAAC6P,GAAA,EAAD,KACI,kBAACxB,GAAA,EAAD,KACI,kBAAC,KAAD,CAAWrO,UAAU,qBAArB,cACA,kBAAC,KAAD,CAAWA,UAAU,oBAArB,UACA,kBAAC,KAAD,CAAWA,UAAU,yBAArB,UACA,kBAAC,KAAD,CAAWA,UAAU,yBAArB,SACA,kBAAC,KAAD,CAAWA,UAAU,yCAArB,UACA,kBAAC,KAAD,CAAWA,UAAU,yBAArB,WACA,kBAAC,KAAD,CAAWA,UAAW4N,EAAc,+BAAiC,iDAAkDvN,QAAS,WAAKwN,GAAgBD,KAAgB3I,IAAS6K,WAAW9B,KAAzL,mBAGR,kBAAC+B,GAAA,EAAD,KACkBnC,EAtCf7N,EAAMoT,MAAM5N,KAAI,SAACE,EAAGE,GACnB,OAAQ2N,EAAW7N,MACpBuK,UANAjQ,EAAMoT,MAAM5N,KAAI,SAACE,EAAGE,GACnB,OAAQ2N,EAAW7N,YCXxBoO,GAlBD,WAQV,OACI,kBAAC,WAAD,KACQ,kBAAC,EAAD,CAAavT,KARd,CACP,CAACwD,KAAO,WAAY4B,KAAM,UAC1B,CAAC5B,KAAO,WAAY4B,KAAM,gBAOlB,yBAAK1F,UAAU,qBACX,kBAAC,GAAD,S,uCC+FL8T,GArGH,WACR,IADc,EAOkBxN,IAAMC,SAAS,UAPjC,mBAOPwN,EAPO,KAOGC,EAPH,KASRC,EAAe,SAACC,GAAD,OAAW,SAACvI,EAAOwI,GACpCH,IAAYG,GAAcD,KAG9B,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAa5T,KAdV,CACP,CAACwD,KAAO,UAAW4B,KAAM,YACzB,CAAC5B,KAAO,UAAW4B,KAAM,YACzB,CAAC5B,KAAO,WAAY4B,KAAM,aAC1B,CAAC5B,KAAO,WAAY4B,KAAM,gBAWtB,yBAAK1F,UAAU,iBACX,yBAAKA,UAAU,aACX,6BACI,kBAACoU,GAAA,EAAD,CAAgBC,QAAM,EAACN,SAAuB,WAAbA,EAAuB3M,SAAU6M,EAAa,WAC3E,kBAACK,GAAA,EAAD,CAAuBC,gBAAc,kBAAkBrW,GAAG,kBACtD,yBAAK8B,UAAU,cACG,WAAb+T,EAAwB9O,IAASuP,UAAUC,eAAiBxP,IAASuP,UAAUnC,SADpF,oEAGA,yBAAKrS,UAAU,YACG,WAAb+T,EAAwB9O,IAASuP,UAAUE,cAAgBzP,IAASuP,UAAUG,UAGvF,kBAACC,GAAA,EAAD,KACI,yBAAK5U,UAAU,gBACX,yBAAKA,UAAU,aACf,uVAAuT,uBAAGsF,KAAK,KAAR,SAAvT,KAA8U,uBAAGA,KAAK,IAAR,SAA9U,KAAoW,uBAAGA,KAAK,IAAR,WAApW,gCAEA,gHAEA,4BACI,6DACA,qRACA,6GAOhB,kBAAC8O,GAAA,EAAD,CAAgBC,QAAM,EAACN,SAAuB,WAAbA,EAAuB3M,SAAU6M,EAAa,WAC3E,kBAACK,GAAA,EAAD,CAAuBC,gBAAc,kBAAkBrW,GAAG,kBACtD,yBAAK8B,UAAU,cACG,WAAb+T,EAAwB9O,IAASuP,UAAUC,eAAiBxP,IAASuP,UAAUnC,SADpF,oFAGA,yBAAKrS,UAAU,YACG,WAAb+T,EAAwB9O,IAASuP,UAAUE,cAAgBzP,IAASuP,UAAUG,UAGvF,kBAACC,GAAA,EAAD,KACI,yBAAK5U,UAAU,gBACX,yBAAKA,UAAU,aADnB,gXAOR,kBAACoU,GAAA,EAAD,CAAgBC,QAAM,EAACN,SAAuB,WAAbA,EAAuB3M,SAAU6M,EAAa,WAC3E,kBAACK,GAAA,EAAD,CAAuBC,gBAAc,kBAAkBrW,GAAG,kBACtD,yBAAK8B,UAAU,cACG,WAAb+T,EAAwB9O,IAASuP,UAAUC,eAAiBxP,IAASuP,UAAUnC,SADpF,8CAGA,yBAAKrS,UAAU,YACG,WAAb+T,EAAwB9O,IAASuP,UAAUE,cAAgBzP,IAASuP,UAAUG,UAGvF,kBAACC,GAAA,EAAD,KACI,yBAAK5U,UAAU,gBAAf,gXAMR,kBAACoU,GAAA,EAAD,CAAgBC,QAAM,EAACN,SAAuB,WAAbA,EAAuB3M,SAAU6M,EAAa,WAC3E,kBAACK,GAAA,EAAD,CAAuBC,gBAAc,kBAAkBrW,GAAG,kBACtD,yBAAK8B,UAAU,cACG,WAAb+T,EAAwB9O,IAASuP,UAAUC,eAAiBxP,IAASuP,UAAUnC,SADpF,2CAGA,yBAAKrS,UAAU,YACG,WAAb+T,EAAwB9O,IAASuP,UAAUE,cAAgBzP,IAASuP,UAAUG,UAGvF,kBAACC,GAAA,EAAD,KACI,yBAAK5U,UAAU,gBAAf,qXCiGjBR,I,OAAAA,aAbS,SAACC,GAAD,MAAY,CAChC0T,MAAO1T,EAAM0T,MAAMA,MACnBjR,YAAazC,EAAM+B,KAAKU,gBAGD,SAACrC,GACxB,MAAO,CACHsR,aAAc,SAAC5T,GAAD,OAAUsC,EAASsR,YAAa5T,KAC9CuO,aAAc,SAAChN,GAAD,OAASe,EAASiM,GAAahN,KAC7CsS,UAAW,SAACC,GAAD,OAAUxR,EAASuR,YAAUC,QAIjC7R,EAlLC,SAACO,GACb,IAgDI8U,EAAUC,EAjDS,EAMGxO,IAAMC,SAAS,oCANlB,mBAMhBhD,EANgB,KAMTwP,EANS,OAOKzM,IAAMC,SAAS,kCAPpB,gCAQiBD,IAAMC,SAAS,KARhC,gCASKD,IAAMC,SAAS,KATpB,mBAShBkN,EATgB,KASRsB,EATQ,OAUGzO,IAAMC,SAASxG,EAAMmC,YAAY4B,MAVpC,mBAUhB4P,EAVgB,KAUTsB,EAVS,OAWiB1O,IAAMC,SAAS,KAXhC,mBAWhB0O,EAXgB,aAY6B3O,IAAMC,SAAS,MAZ5C,mBAYhB2O,EAZgB,aAaqB5O,IAAMC,SAAS,OAbpC,mBAahB4O,EAbgB,aAcK7O,IAAMC,SAAS,KAdpB,gCAeeD,IAAMC,SAAS,KAf9B,gCAgBOD,IAAMC,UAAS,IAhBtB,mBAgBhB6O,EAhBgB,KAgBPC,EAhBO,OAiBe/O,IAAMC,SAAS,IAjB9B,mBAiBhBoI,EAjBgB,KAiBH2G,EAjBG,KA2BnBpS,EAAUC,cAwBViS,GACAP,EAAY,yBAAK7U,UAAU,eAAeK,QAAS,WAAKkV,GAAkB,KAAStQ,IAASuQ,UAAhF,gBACZV,EAAa,yBAAK9U,UAAU,SAASK,QAAS,WAAKkV,GAAkB,KAAUtQ,IAASwQ,WAA3E,mBAGbZ,EAAY,yBAAK7U,UAAU,QAAQK,QAAS,WAAKkV,GAAkB,KAAStQ,IAASwQ,WAAzE,gBACZX,EAAa,yBAAK9U,UAAU,gBAAgBK,QAAS,WAAKkV,GAAkB,KAAUtQ,IAASuQ,UAAlF,kBAIjB,IAAMD,EAAoB,SAAChY,GACvB8X,EAAW9X,GACPA,GACAyX,EAASjV,EAAMmC,YAAY4B,MAC3BiR,EAAU,MAEVC,EAAS,IACTD,EAAUhV,EAAMmC,YAAY4B,QAQhC,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAaxD,KA7Ed,CACP,CAACwD,KAAM,WAAY4B,KAAM,UACzB,CAAC5B,KAAM,WAAY4B,KAAM,gBA4EjB,yBAAK1F,UAAU,sBACX,yBAAKA,UAAU,aACV6U,EACAC,GAGL,yBAAK9U,UAAU,cACf,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CACI+G,QAAQ,SACRsE,MAAM,cACNlE,MAAOuM,IAGX,kBAAC,IAAD,CACI3M,QAAQ,SACRsE,MAAM,eACNlE,MAAOsM,KAIf,yBAAKzT,UAAU,QACX,kBAAC,IAAD,CACI+G,QAAQ,SACRsE,MAAM,iBACNlE,MAAO8N,IAGX,kBAAC,IAAD,CACIlO,QAAQ,SACR2O,UAAQ,EACRrK,MAAM,gBACNlE,MAAO+N,IAGX,kBAAC,IAAD,CACInO,QAAQ,SACRsE,MAAM,mBACNlE,MAAOgO,KAIf,yBAAKnV,UAAU,QACf,kBAAC,IAAD,CACIqL,MAAM,aACN9D,WAAS,EACT+D,KAAM,EACNnE,MAAO5D,EACP6D,SA7GH,SAACuE,GAClBoH,EAASpH,EAAMrE,OAAOH,QA6GFJ,QAAQ,WAEZ,kBAAC,IAAD,CACIsE,MAAM,uBACN9D,WAAS,EACTgL,WAAS,EACTjH,KAAM,GACNnE,MAAOwH,EACPvH,SAlHJ,SAACuE,GACjB2J,EAAe3J,EAAMrE,OAAOH,QAkHRJ,QAAQ,YAKZ,yBAAK/G,UAAU,SACX,kBAAC4D,EAAA,EAAD,CAAQC,SAAU,EACVC,KAAK,6BAFjB,oDAGqD,0BAAM9D,UAAU,cAAhB,mBAGrD,yBAAKA,UAAU,gBAAgBK,QAAS,YAxHvC,WACE4N,KAAKyE,MAexBxP,EAAQQ,KAAK,UAyGOoI,KADJ,4BC3HTtM,gBAVS,SAACC,GAAD,MAAY,CAChCkW,WAAYlW,EAAMkW,WAAWA,eAGN,SAAC9V,GACxB,MAAO,CACH4I,WAAY,SAACtG,GAAD,OAAUtC,EAAS4I,EAAWtG,QAInC3C,EAvCK,SAACO,GAGb,IAAI6V,EAAO,KACPC,EAAU,EAUd,OARC9V,EAAM4V,WAAWG,aAAavQ,KAAI,SAACE,EAAGE,GAChCF,IACCoQ,IACAD,GAAcnQ,EAAEsQ,UAKrBH,EACS,yBAAK5V,UAAU,oBACnB,yBAAKA,UAAU,oCAAf,UACA,6BACA,yBAAKA,UAAU,0BAA0B6V,EAAzC,iBAA+D,+BAAKD,IACpE,yBAAK5V,UAAU,iBAAf,kBAIG,Q,wDC8PJR,gBAjBS,SAACC,GAAD,MAAY,CAChCkW,WAAYlW,EAAMkW,WAAWA,eAGN,SAAC9V,GACxB,MAAO,CACH8H,gBAAiB,SAACxF,GAAD,OAAUtC,EAAS8H,EAAgBxF,KACpDoG,WAAY,kBAAM1I,EAAS0I,MAC3BT,YAAa,SAAC3F,GAAD,OAAUtC,EAASiI,EAAY3F,KAC5C6F,mBAAoB,SAAC7F,GAAD,OAAUtC,EAASmI,EAAmB7F,KAC1DgG,iBAAkB,SAAChG,GAAD,OAAUtC,EAASsI,EAAiBhG,KACtDkG,wBAAyB,SAAClG,GAAD,OAAUtC,EAASwI,EAAwBlG,KACpEsG,WAAY,SAACtG,GAAD,OAAUtC,EAAS4I,EAAWtG,KAC1CwG,WAAY,SAACxG,GAAD,OAAUtC,EAAS8I,EAAWxG,QAInC3C,EAlQF,SAACO,GAEViW,qBAAU,WACNjW,EAAM4H,gBAAgB,WACtB5H,EAAM+H,YAAY,WAClB/H,EAAMwI,eACP,IANiB,MAOajC,IAAMC,SAAS,IAP5B,mBAObmH,EAPa,KAOAuI,EAPA,OASsB3P,IAAMC,UAAS,GATrC,mBASb2P,EATa,KASGC,EATH,OAU8B7P,IAAMC,UAAS,GAV7C,mBAUb6P,EAVa,KAUOC,EAVP,KA+DdC,EAAkB,SAACC,GAErBF,GAAoB,IAElBG,EAAkB,SAAClW,EAAM6G,GAE3BpH,EAAM4I,WAAWrI,IAMfmW,EAAgB,SAACC,GACnB,OAAQ,kBAAC,KAAD,CAAWC,MAAM,MAAM3W,UAAU,kBACrC,kBAAC4W,GAAA,EAAD,CAAUC,MAAM,UAAWhT,QAAS6S,EAAI9P,eAI5CkQ,EAAuB/W,EAAM4V,WAAWlN,WAAWlD,KAAI,SAACmR,EAAK/Q,GAC7D,OAAQ,kBAAC0I,GAAA,EAAD,CAAUrO,UAAW0W,EAAI9P,WAAa,SAAW,KACvCvG,QAAS,WAAKiW,IAAuBE,EAAgBE,IACrD/Q,IAAKA,GAClByQ,EAAqBK,EAAcC,GAAO,KAC3C,kBAAC,KAAD,CAAWC,MAAM,OACb,yBAAK3W,UAAU,0BACX,yBAAKA,UAAU,eAAe0W,EAAIK,aAAaC,KAAMN,EAAIK,aAAaxT,OACtE,yBAAKvD,UAAU,eAAe0W,EAAIO,SAASD,KAAMN,EAAIO,SAAShP,SAC9D,yBAAKjI,UAAU,eAAe0W,EAAIQ,cAAcF,KAAMN,EAAIQ,cAAcjP,WAGhF,kBAAC,KAAD,CAAWjI,UAAU,gCAAgC0W,EAAIS,QACzD,kBAAC,KAAD,CAAWnX,UAAU,gCAAgC0W,EAAIU,WACzD,kBAAC,KAAD,CAAWpX,UAAU,gCAAgC0W,EAAIW,WACzD,kBAAC,KAAD,CAAWrX,UAAU,qBAAqB0W,EAAIY,SAC9C,kBAAC,KAAD,CAAWtX,UAAU,qBAArB,IAA0C,uBAAGA,UAAU,eAAe0W,EAAIX,QAC1E,kBAAC,KAAD,KAAW,yBAAK/V,UAAU,WAAf,YAGfuX,EAAiBxX,EAAM4V,WAAW6B,UAAUjS,KAAI,SAACmR,EAAK/Q,GACtD,OAAQ,kBAAC0I,GAAA,EAAD,CAAUrO,UAAW0W,EAAI9P,WAAa,SAAW,KACvCvG,QAAS,WAAKiW,IAAuBE,EAAgBE,IACrD/Q,IAAKA,GAClByQ,EAAqBK,EAAcC,GAAO,KAC3C,kBAAC,KAAD,CAAWC,MAAM,OACb,yBAAK3W,UAAU,0BACX,yBAAKA,UAAU,eAAe0W,EAAIK,aAAaC,KAAMN,EAAIK,aAAaxT,OACtE,yBAAKvD,UAAU,eAAe0W,EAAIO,SAASD,KAAMN,EAAIO,SAAShP,SAC9D,yBAAKjI,UAAU,eAAe0W,EAAIQ,cAAcF,KAAMN,EAAIQ,cAAcjP,WAGhF,kBAAC,KAAD,CAAWjI,UAAU,gCAAgC0W,EAAIS,QACzD,kBAAC,KAAD,CAAWnX,UAAU,+BAA+B0W,EAAIU,WACxD,kBAAC,KAAD,CAAWpX,UAAU,gCAAgC0W,EAAIW,WACzD,kBAAC,KAAD,CAAWrX,UAAU,oBAAoB0W,EAAIY,SAC7C,kBAAC,KAAD,CAAWtX,UAAU,qBAArB,IAA0C,uBAAGA,UAAU,eAAe0W,EAAIX,QAC1E,kBAAC,KAAD,KAAW,yBAAK/V,UAAU,WAAf,YAMnB,OAAQ,yBAAKA,UAAU,oBACnB,yBAAKA,UAAU,eACX,6BACI,kBAACkH,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,qBACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,UACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM4V,WAAWiC,YAAYC,OACpCzQ,SAAU,SAACC,IAxGJ,SAACA,GACxBtH,EAAM4H,gBAAgBN,EAAEC,OAAOH,OAC/BpH,EAAMwI,aAsG0BuP,CAAmBzQ,KAClCtH,EAAM4V,WAAWoC,KAAKF,OAAOtS,KAAI,SAACE,EAAGE,GAClC,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAO1B,EAAElC,OAAQkC,EAAEuR,KAAMvR,EAAElC,aAKvE,yBAAKvD,UAAU,wBACX,kBAACkH,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,qBACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,MACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM4V,WAAWiC,YAAYI,GACpC5Q,SAAU,SAACC,IAjHR,SAACA,GACpBtH,EAAM+H,YAAYT,EAAEC,OAAOH,OAE3B,IAAI8L,EAAelT,EAAM4V,WAAWoC,KAAKC,GAAGC,MAAK,SAACnZ,GAC1C,OAAOA,EAAIyE,QAAU8D,EAAEC,OAAOH,SAEtCpH,EAAMiI,mBAAmBiL,EAAahL,QAAQ,GAAGrC,YACjD7F,EAAMwI,aA0G0B2P,CAAe7Q,KAG9BtH,EAAM4V,WAAWoC,KAAKC,GAAGzS,KAAI,SAACE,EAAGE,GAE9B,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAO1B,EAAElC,OAAQkC,EAAEuR,KAAMvR,EAAElC,YAMnE,kBAAC2D,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,QACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,WACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM4V,WAAWiC,YAAYO,UACpC/Q,SAAU,SAACC,IAxHA,SAACA,GAC5BtH,EAAMiI,mBAAmBX,EAAEC,OAAOH,OAClCpH,EAAMwI,aAsH0B6P,CAAuB/Q,KAEtCtH,EAAM4V,WAAWoC,KAAKC,GAAGzS,KAAI,SAACE,GAC3B,GAAGA,EAAElC,QAAUxD,EAAM4V,WAAWiC,YAAYI,GACxC,OAAOvS,EAAEwC,QAAQ1C,KAAI,SAAC0C,EAAStC,GAC3B,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAOc,GAAUA,YASrE,yBAAKjI,UAAU,wBACX,kBAACkH,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,qBACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,WACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM4V,WAAWiC,YAAYS,QACpCjR,SAAU,SAACC,IAvIH,SAACA,GACzBtH,EAAMoI,iBAAiBd,EAAEC,OAAOH,OAEhC,IAAI8L,EAAelT,EAAM4V,WAAWoC,KAAKM,QAAQJ,MAAK,SAACnZ,GACnD,OAAOA,EAAIyE,QAAU8D,EAAEC,OAAOH,SAGlCpH,EAAMsI,wBAAwB4K,EAAahL,QAAQ,GAAGrC,YACtD7F,EAAMwI,aA+H0B+P,CAAoBjR,KAEnCtH,EAAM4V,WAAWoC,KAAKM,QAAQ9S,KAAI,SAACE,EAAGE,GAEnC,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAO1B,EAAElC,OAAQkC,EAAEuR,KAAMvR,EAAElC,YAMnE,kBAAC2D,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,QACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,WACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM4V,WAAWiC,YAAYW,eACpCnR,SAAU,SAACC,IA5IK,SAACA,GACjCtH,EAAMsI,wBAAwBhB,EAAEC,OAAOH,OACvCpH,EAAMwI,aA0I0BiQ,CAA4BnR,KAE3CtH,EAAM4V,WAAWoC,KAAKM,QAAQ9S,KAAI,SAACE,GAChC,GAAGA,EAAElC,QAAUxD,EAAM4V,WAAWiC,YAAYS,QACxC,OAAO5S,EAAEwC,QAAQ1C,KAAI,SAAC0C,EAAStC,GAC3B,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAOc,GAAUA,YAQrE,kBAAC,IAAD,CACIlB,QAAQ,SACRQ,WAAS,EACTvH,UAAU,cACVyP,YAAY,SACZtI,MAAOuG,EACPtG,SAAU,SAACC,IA3MI,SAACA,GAEH,GAAlBA,EAAEC,OAAOH,OACR8O,EAAU5O,EAAEC,OAAOH,OACnBpH,EAAM0I,WAAWpB,EAAEC,OAAOH,OAC1BgP,GAAgB,KAEhBF,EAAU5O,EAAEC,OAAOH,OACnBgP,GAAgB,IAmMIsC,CAAmBpR,MAIvC,yBAAKrH,UAAU,gCACX,yBAAKA,UAAU,YAAYiF,IAASyK,iBAAiBC,UACrD,6BAAM1K,IAASyK,iBAAiBJ,UAGpC,kBAACM,GAAA,EAAD,CAAO5P,UAAU,yBACb,kBAAC6P,GAAA,EAAD,KACI,kBAACxB,GAAA,EAAD,KAAW+H,EAAqBK,EAAc,OAAe,KACzD,kBAAC,KAAD,CAAWzW,UAAU,QAArB,uBACA,kBAAC,KAAD,CAAWA,UAAU,yBAArB,UACA,kBAAC,KAAD,CAAWA,UAAU,mBAArB,aACA,kBAAC,KAAD,CAAWA,UAAU,oBAArB,aACA,kBAAC,KAAD,CAAWA,UAAU,kDAArB,IAAwEiF,IAAS6K,WAAW9B,KAA5F,YACA,kBAAC,KAAD,CAAWhO,UAAU,wBAArB,SACA,kBAAC,KAAD,CAAWA,UAAU,UAG7B,kBAAC+P,GAAA,EAAD,KAAamG,EAAiBY,EAAqBS,QC5NpD/X,gBANS,SAACC,GAAD,MAAY,CAChCwC,SAAUxC,EAAMwC,SAASA,SACzBC,YAAazC,EAAM+B,KAAKU,eAIb1C,EA/BI,SAACO,GAQhB,OACI,kBAAC,WAAD,KAEI,kBAAC,EAAD,CAAaO,KATV,CACP,CAACwD,KAAO,OAAQ4B,KAAM,gBACtB,CAAC5B,KAAO,YAAa4B,KAAM,eAOEiE,QAAS5J,EAAMkC,SAAUT,KAAMzB,EAAMmC,YAAawC,gBAAgB,IAE3F,yBAAK1E,UAAU,qBAEX,kBAAC,GAAD,OAIJ,kBAAC,GAAD,U,SCgBGR,gBAVS,SAACC,GAAD,MAAY,CAChCiZ,gBAAiBjZ,EAAMiZ,gBAAgB/C,eAGhB,SAAC9V,GACxB,MAAO,CACH4I,WAAY,SAACtG,GAAD,OAAUtC,GCPJsH,EDOwBhF,ECPd,CAClCjF,KAAM0K,KAAYc,YAClBrL,QAAS8J,KAFe,IAAAA,MDWX3H,EAvCK,SAACO,GAGb,IAAI6V,EAAO,KACPC,EAAU,EAUd,OARC9V,EAAM2Y,gBAAgB5C,aAAavQ,KAAI,SAACE,EAAGE,GACrCF,IACCoQ,IACAD,GAAcnQ,EAAEsQ,UAKrBH,EACS,yBAAK5V,UAAU,oBACnB,yBAAKA,UAAU,oCAAf,UACA,6BACA,yBAAKA,UAAU,0BAA0B6V,EAAzC,iBAA+D,+BAAKD,IACpE,yBAAK5V,UAAU,iBAAf,kBAIG,QE+PJR,I,OAAAA,aAjBS,SAACC,GAAD,MAAY,CAChCiZ,gBAAiBjZ,EAAMiZ,gBAAgB/C,eAGhB,SAAC9V,GACxB,MAAO,CACH8H,gBAAiB,SAACxF,GAAD,OAAUtC,EAAS8H,EAAgBxF,KACpDoG,WAAY,kBAAM1I,EAAS0I,MAC3BT,YAAa,SAAC3F,GAAD,OAAUtC,EAASiI,EAAY3F,KAC5C6F,mBAAoB,SAAC7F,GAAD,OAAUtC,EAASmI,EAAmB7F,KAC1DgG,iBAAkB,SAAChG,GAAD,OAAUtC,EAASsI,EAAiBhG,KACtDkG,wBAAyB,SAAClG,GAAD,OAAUtC,EAASwI,EAAwBlG,KACpEsG,WAAY,SAACtG,GAAD,OAAUtC,EAAS4I,EAAWtG,KAC1CwG,WAAY,SAACxG,GAAD,OAAUtC,EAAS8I,EAAWxG,QAInC3C,EAlQG,SAACO,GAEfiW,qBAAU,WACNjW,EAAM4H,gBAAgB,WACtB5H,EAAM+H,YAAY,WAClB/H,EAAMwI,eACP,IANsB,MAOQjC,IAAMC,SAAS,IAPvB,mBAOlBmH,EAPkB,KAOLuI,EAPK,OASiB3P,IAAMC,UAAS,GAThC,mBASlB2P,EATkB,KASFC,EATE,OAUyB7P,IAAMC,UAAS,GAVxC,mBAUlB6P,EAVkB,KAUEC,EAVF,KA2DnBC,EAAkB,SAACC,GAErBF,GAAoB,IAElBG,EAAkB,SAAClW,EAAM6G,GAE3BpH,EAAM4I,WAAWrI,IAKfmW,EAAgB,SAACC,GACnB,OAAQ,kBAAC,KAAD,CAAWC,MAAM,MAAM3W,UAAU,kBACjC,kBAAC4W,GAAA,EAAD,CAAWC,MAAM,UAAWhT,QAAS6S,EAAI9P,eAIjDkQ,EAAuB/W,EAAM2Y,gBAAgBjQ,WAAWlD,KAAI,SAACmR,EAAK/Q,GAClE,OAAQ,kBAAC0I,GAAA,EAAD,CAAUrO,UAAW0W,EAAI9P,WAAa,SAAW,KACvCvG,QAAS,WAAKiW,IAAuBE,EAAgBE,IACrD/Q,IAAKA,GAClByQ,EAAqBK,EAAcC,GAAO,KAC3C,kBAAC,KAAD,CAAWC,MAAM,OACb,yBAAK3W,UAAU,0BACX,yBAAKA,UAAU,eAAe0W,EAAIK,aAAaC,KAAMN,EAAIK,aAAaxT,OACtE,yBAAKvD,UAAU,eAAe0W,EAAIO,SAASD,KAAMN,EAAIO,SAAShP,SAC9D,yBAAKjI,UAAU,eAAe0W,EAAIQ,cAAcF,KAAMN,EAAIQ,cAAcjP,WAGhF,kBAAC,KAAD,CAAWjI,UAAU,gCAAgC0W,EAAIS,QACzD,kBAAC,KAAD,CAAWnX,UAAU,gCAAgC0W,EAAIU,WACzD,kBAAC,KAAD,CAAWpX,UAAU,gCAAgC0W,EAAIW,WACzD,kBAAC,KAAD,CAAWrX,UAAU,oBAAoB0W,EAAIY,SAC7C,kBAAC,KAAD,CAAWtX,UAAU,+BAA8B,yBAAKA,UAAU,wBAAwBiF,IAASsO,UAAUC,SAA1D,kBACnD,kBAAC,KAAD,CAAWxT,UAAU,qBAArB,IAA0C,uBAAGA,UAAU,eAAe0W,EAAIX,QAC1E,kBAAC,KAAD,KAAW,yBAAK/V,UAAU,WAAf,YAGfuX,EAAiBxX,EAAM2Y,gBAAgBlB,UAAUjS,KAAI,SAACmR,EAAK/Q,GACnD,OAAQ,kBAAC0I,GAAA,EAAD,CAAUrO,UAAW0W,EAAI9P,WAAa,SAAW,KACvCvG,QAAS,WAAKiW,IAAuBE,EAAgBE,IACrD/Q,IAAKA,GAClByQ,EAAqBK,EAAcC,GAAO,KACvC,kBAAC,KAAD,CAAWC,MAAM,OACb,yBAAK3W,UAAU,0BACX,yBAAKA,UAAU,eAAe0W,EAAIK,aAAaC,KAAMN,EAAIK,aAAaxT,OACtE,yBAAKvD,UAAU,eAAe0W,EAAIO,SAASD,KAAMN,EAAIO,SAAShP,SAC9D,yBAAKjI,UAAU,eAAe0W,EAAIQ,cAAcF,KAAMN,EAAIQ,cAAcjP,WAGhF,kBAAC,KAAD,CAAWjI,UAAU,gCAAgC0W,EAAIS,QACzD,kBAAC,KAAD,CAAWnX,UAAU,gCAAgC0W,EAAIU,WACzD,kBAAC,KAAD,CAAWpX,UAAU,gCAAgC0W,EAAIW,WACzD,kBAAC,KAAD,CAAWrX,UAAU,qCAAqC0W,EAAIY,SAC9D,kBAAC,KAAD,CAAWtX,UAAU,+BAA8B,yBAAKA,UAAU,wBAAwBiF,IAASsO,UAAUC,SAA1D,kBACnD,kBAAC,KAAD,CAAWxT,UAAU,qBAArB,IAA0C,uBAAGA,UAAU,eAAe0W,EAAIX,QAC1E,kBAAC,KAAD,KAAW,yBAAK/V,UAAU,WAAf,YAM/B,OAAQ,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,eACX,6BACA,kBAACkH,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,qBACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,UACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM2Y,gBAAgBd,YAAYC,OACzCzQ,SAAU,SAACC,IAvGJ,SAACA,GACxBtH,EAAM4H,gBAAgBN,EAAEC,OAAOH,OAC/BpH,EAAMwI,aAqG0BuP,CAAmBzQ,KAClCtH,EAAM2Y,gBAAgBX,KAAKF,OAAOtS,KAAI,SAACE,EAAGE,GACvC,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAO1B,EAAElC,OAAQkC,EAAEuR,KAAMvR,EAAElC,aAKnE,yBAAKvD,UAAU,wBACX,kBAACkH,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,qBACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,MACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM2Y,gBAAgBd,YAAYI,GACzC5Q,SAAU,SAACC,IAhHZ,SAACA,GACpBtH,EAAM+H,YAAYT,EAAEC,OAAOH,OAE3B,IAAI8L,EAAelT,EAAM2Y,gBAAgBX,KAAKC,GAAGC,MAAK,SAACnZ,GAC/C,OAAOA,EAAIyE,QAAU8D,EAAEC,OAAOH,SAEtCpH,EAAMiI,mBAAmBiL,EAAahL,QAAQ,GAAGrC,YACjD7F,EAAMwI,aAyG8B2P,CAAe7Q,KAG9BtH,EAAM2Y,gBAAgBX,KAAKC,GAAGzS,KAAI,SAACE,EAAGE,GAElC,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAO1B,EAAElC,OAAQkC,EAAEuR,KAAMvR,EAAElC,YAMpE,kBAAC2D,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,QACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,WACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM2Y,gBAAgBd,YAAYO,UACzC/Q,SAAU,SAACC,IAvHJ,SAACA,GAC5BtH,EAAMiI,mBAAmBX,EAAEC,OAAOH,OAClCpH,EAAMwI,aAqH8B6P,CAAuB/Q,KAEtCtH,EAAM2Y,gBAAgBX,KAAKC,GAAGzS,KAAI,SAACE,GAChC,GAAGA,EAAElC,QAAUxD,EAAM2Y,gBAAgBd,YAAYI,GAC7C,OAAOvS,EAAEwC,QAAQ1C,KAAI,SAAC0C,EAAStC,GAC3B,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAOc,GAAUA,YASrE,yBAAKjI,UAAU,wBACX,kBAACkH,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,qBACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,WACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM2Y,gBAAgBd,YAAYS,QACzCjR,SAAU,SAACC,IAtIP,SAACA,GACzBtH,EAAMoI,iBAAiBd,EAAEC,OAAOH,OAEhC,IAAI8L,EAAelT,EAAM2Y,gBAAgBX,KAAKM,QAAQJ,MAAK,SAACnZ,GACxD,OAAOA,EAAIyE,QAAU8D,EAAEC,OAAOH,SAGlCpH,EAAMsI,wBAAwB4K,EAAahL,QAAQ,GAAGrC,YACtD7F,EAAMwI,aA8H8B+P,CAAoBjR,KAEnCtH,EAAM2Y,gBAAgBX,KAAKM,QAAQ9S,KAAI,SAACE,EAAGE,GAExC,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAO1B,EAAElC,OAAQkC,EAAEuR,KAAMvR,EAAElC,YAMnE,kBAAC2D,EAAA,EAAD,CAAaH,QAAQ,SAAS/G,UAAU,QACpC,kBAACyX,GAAA,EAAD,CAAYvZ,GAAG,mCAAf,WACA,kBAACwZ,GAAA,EAAD,CACIC,QAAQ,kCACRxQ,MAAOpH,EAAM2Y,gBAAgBd,YAAYW,eACzCnR,SAAU,SAACC,IA3IC,SAACA,GACjCtH,EAAMsI,wBAAwBhB,EAAEC,OAAOH,OACvCpH,EAAMwI,aAyI8BiQ,CAA4BnR,KAE3CtH,EAAM2Y,gBAAgBX,KAAKM,QAAQ9S,KAAI,SAACE,GACrC,GAAGA,EAAElC,QAAUxD,EAAM2Y,gBAAgBd,YAAYS,QAC7C,OAAO5S,EAAEwC,QAAQ1C,KAAI,SAAC0C,EAAStC,GAC3B,OAAQ,kBAAC8B,EAAA,EAAD,CAAU9B,IAAKA,EAAKwB,MAAOc,GAAUA,YAQrE,kBAAC,IAAD,CACIlB,QAAQ,SACRQ,WAAS,EACTvH,UAAU,cACVyP,YAAY,SAEZtI,MAAOuG,EACPtG,SAAU,SAACC,IAzMA,SAACA,GAEH,GAAlBA,EAAEC,OAAOH,OACR8O,EAAU5O,EAAEC,OAAOH,OACnBpH,EAAM0I,WAAWpB,EAAEC,OAAOH,OAC1BgP,GAAgB,KAEhBF,EAAU5O,EAAEC,OAAOH,OACnBgP,GAAgB,IAiMQsC,CAAmBpR,MAIvC,yBAAKrH,UAAU,gCACX,yBAAKA,UAAU,YAAYiF,IAASyK,iBAAiBC,UACrD,6BAAM1K,IAASyK,iBAAiBJ,UAGxC,6BACI,kBAACM,GAAA,EAAD,CAAO5P,UAAU,yBACb,kBAAC6P,GAAA,EAAD,KACI,kBAACxB,GAAA,EAAD,KAAW+H,EAAqBK,EAAc,OAAe,KAAM,kBAAC,KAAD,CAAWzW,UAAU,QAArB,uBAC/D,kBAAC,KAAD,CAAWA,UAAU,yBAArB,UACA,kBAAC,KAAD,CAAWA,UAAU,mBAArB,aACA,kBAAC,KAAD,CAAWA,UAAU,oBAArB,aACA,kBAAC,KAAD,CAAWA,UAAU,0CAArB,WACA,kBAAC,KAAD,CAAWA,UAAU,wBAArB,kBACA,kBAAC,KAAD,CAAWA,UAAU,wBAArB,SACA,kBAAC,KAAD,CAAWA,UAAU,UAG7B,kBAAC+P,GAAA,EAAD,KAAamG,EAAiBY,EAAqBS,UC9NxD/X,gBANS,SAACC,GAAD,MAAY,CAChCwC,SAAUxC,EAAMwC,SAASA,SACzBC,YAAazC,EAAM+B,KAAKU,eAIb1C,EA9BS,SAACO,GAOrB,OACI,kBAAC,WAAD,KAEI,kBAAC,EAAD,CAAaO,KARV,CACP,CAACwD,KAAO,OAAQ4B,KAAM,gBACtB,CAAC5B,KAAO,YAAa4B,KAAM,eAMEiE,QAAS5J,EAAMkC,SAAUT,KAAMzB,EAAMmC,YAAawC,gBAAgB,IAE3F,yBAAK1E,UAAU,qBAEX,kBAAC,GAAD,OAIJ,kBAAC,GAAD,UCSGR,gBAdS,SAACC,GAAD,MAAY,CAChCyG,SAAUzG,EAAM0G,WAAWD,aAGJ,SAACrG,GACxB,MAAO,CACH8Y,qBAAsB,SAACpb,GAAD,OAAUsC,EAAS8Y,YAAqBpb,KAC9Dqb,2BAA4B,SAACrb,GAAD,OAAUsC,EAAS+Y,YAA2Brb,KAC1Esb,sBAAuB,SAACtb,GAAD,OAAUsC,EAASgZ,YAAsBtb,KAChEub,mBAAoB,SAACvb,GAAD,OAAUsC,EAASiZ,YAAmBvb,KAC1Dwb,mBAAoB,SAACxb,GAAD,OAAUsC,EAASkZ,YAAmBxb,QAInDiC,EA5BO,SAACO,GACnB,OACI,kBAAC,WAAD,KACI,yBAAKC,UAAU,qBACX,wBAAIK,QAAS,WAAKN,EAAM8Y,uBAAsB,KAA9C,aACA,wBAAIxY,QAAS,WAAKN,EAAM4Y,sBAAqB,KAA7C,eACA,wBAAItY,QAAS,WAAKN,EAAM6Y,4BAA2B,KAAnD,kBACA,wBAAIvY,QAAS,WAAKN,EAAM+Y,oBAAmB,KAA3C,UACA,wBAAIzY,QAAS,WAAKN,EAAMgZ,oBAAmB,KAA3C,e,OCsDDC,UA1CG,WAMd,OACI,yBAAKhZ,UAAU,aAEX,kBAAC,IAAD,CAAO2E,KAAM1B,gCAAyBgW,OAAQ,kBAAM,kBAAC,EAAD,CAAUjP,UAAU,gBACxE,kBAAC,IAAD,CAAOrF,KAAM1B,6BAAsBgW,OAAQ,kBAAM,kBAAC,EAAD,CAAUjP,UAAU,aACrE,kBAAC,IAAD,CAAOrF,KAAM1B,6BAAsBgW,OAAQ,kBAAM,kBAAC,EAAD,CAAUjP,UAAU,aACrE,kBAAC,IAAD,CAAOrF,KAAM,gBAAiBsU,OAAQ,kBAAM,kBAAC,EAAD,SAE5C,kBAAC,IAAD,CAAOtU,KAAK,OAAOsU,OAAQ,kBAAM,kBAACC,EAAD,CAAkBlX,KAAK,eAExD,kBAAC,IAAD,CAAO2C,KAAK,eAAesU,OAAQ,kBAAM,kBAAC,GAAD,CAAYjP,UAAU,mBAC/D,kBAAC,IAAD,CAAOrF,KAAK,aAAasU,OAAQ,kBAAM,kBAAC,GAAD,CAAiBjP,UAAU,iBAIlE,kBAAC,IAAD,CAAOrF,KAAK,aAAasU,OAAQ,kBAAM,kBAAC,GAAD,SACvC,kBAAC,IAAD,CAAOtU,KAAK,WAAWsU,OAAQ,kBAAM,kBAAC,GAAD,SAErC,kBAAC,IAAD,CAAOtU,KAAK,WAAWsU,OAAQ,kBAAM,kBAAC,GAAD,SACrC,kBAAC,IAAD,CAAOtU,KAAK,cAAcsU,OAAQ,kBAAM,kBAAC,GAAD,SAGxC,kBAAC,IAAD,CAAOtU,KAAK,SAASsU,OAAS,kBAAM,kBAAC,GAAD,SACpC,kBAAC,IAAD,CAAOtU,KAAK,YAAYsU,OAAS,kBAAM,kBAAC,GAAD,SAEvC,kBAAC,IAAD,CAAOtU,KAAK,WAAWsU,OAAQ,kBAAM,kBAAC,GAAD,CAASjX,KAAK,eAEnD,kBAAC,IAAD,CAAO2C,KAAK,cAAcsU,OAAQ,kBAAM,kBAAC,GAAD,SACxC,kBAAC,IAAD,CAAOtU,KAAK,gBAAgBsU,OAAQ,kBAAM,kBAAC,GAAD,SAE1C,kBAAC,IAAD,CAAOtU,KAAK,iBAAiBsU,OAAQ,kBAAM,kBAAC,GAAD","file":"static/js/6.aebd8143.chunk.js","sourcesContent":["import { licensesTypes} from './licenses.types'\r\n\r\nexport const setCurrentLicense = string => ({\r\n  type: licensesTypes.SET_CURRENT_LICENSE,\r\n  payload: string\r\n});\r\n\r\nexport const setAutoRenewPersonal = bool => ({\r\n  type: licensesTypes.SET_AUTO_RENEW_PERSONAL,\r\n  payload: bool\r\n});\r\n\r\nexport const setAutoRenewCorporate = bool => ({\r\n  type: licensesTypes.SET_AUTO_RENEW_CORPORATE,\r\n  payload: bool\r\n});\r\n\r\n\r\nexport const setOptionsLicenseMenu = bool => ({\r\n  type: licensesTypes.SET_OPTIONS__LICENSE_MENU,\r\n  payload: bool\r\n});\r\n\r\n\r\nexport const setCurrentTab = string => ({\r\n  type: licensesTypes.SET_CURRENT_TAB,\r\n  payload: string\r\n});\r\n\r\nexport const setAdditionalScreenCorporate = bool => ({\r\n  type: licensesTypes.SET_ADDITIONAL_SCREEN_CORPORATE,\r\n  payload: bool\r\n});\r\n\r\n","import { usersTypes} from './users.types'\r\n\r\n\r\nexport const setActivity = ( bool, id ) => ({\r\n  type: usersTypes.SET_ACTIVITY,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const setUsers = ( bool, id ) => ({\r\n  type: usersTypes.SET_USERS,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const setCosts = ( bool, id ) => ({\r\n  type: usersTypes.SET_COSTS,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const setSelect = ( bool, id ) => ({\r\n  type: usersTypes.SET_SELECT,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const sortTableByType = ( type ) => ({\r\n  type: usersTypes.SORT_TABLE_BY_TYPE,\r\n  payload: type\r\n})\r\n\r\nexport const setAccessRights = ( obj ) => ({\r\n  type: usersTypes.SET_ACCESS_RIGHTS,\r\n  payload: obj\r\n})\r\n\r\nexport const setSelectForUsers = ( bool ) => ({\r\n  type: usersTypes.SET_SELECT_FOR_USERS,\r\n  payload: bool\r\n})\r\n\r\nexport const updateUsers = ( obj ) => ({\r\n  type: usersTypes.UPDATE_USERS,\r\n  payload: obj\r\n})\r\n\r\nexport const setDaysLeft = ( obj ) => ({\r\n  type: usersTypes.SET_DAYS_LEFT,\r\n  payload: obj\r\n})\r\n\r\n\r\nexport const setConfigLimit = ( obj ) => ({\r\n  type: usersTypes.SET_CONFIG_LIMIT,\r\n  payload: obj\r\n})","import React from 'react';\r\nimport cogIcon from './cog.svg';\r\nimport {setLicenseDaysSettingsModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst DaysLeft = (props) => {\r\n    return (\r\n        <div className=\"tableCell-daysLeft\">\r\n            <div className=\"value\">\r\n            {props.rowData.userOptions.daysLeft}\r\n            </div>\r\n            <div className=\"days\">\r\n                {props.rowData.userOptions.maxDaysLeft}\r\n            </div>\r\n            <div className=\"btn\" onClick={()=>{\r\n                props.setLicenseDaysSettingsModal({bool: true, data: props.rowData});\r\n            }}>\r\n                <img src={cogIcon} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLicenseDaysSettingsModal: (obj) => dispatch(setLicenseDaysSettingsModal(obj)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DaysLeft);","import { generateTypes} from './generate.types'\r\n\r\n\r\nexport const setNewValueForStoreItem = ( item, itemValue, id ) => ({\r\n    type: generateTypes.SET_NEW_VALUE_FOR_STORE_ITEM,\r\n    payload: {item, itemValue, id}\r\n})\r\n\r\nexport const createItem = (object) => ({\r\n    type: generateTypes.CREATE_ITEM,\r\n    payload: object\r\n})\r\n\r\nexport const deleteItem = (id) => ({\r\n    type: generateTypes.DELETE_ITEM,\r\n    payload: id\r\n})","import React from 'react';\r\nimport Minus from \"./minus.svg\";\r\nimport Plus from \"./plus.svg\";\r\nimport { setConfigLimit} from \"../../../redux/licenses/corporate/users/users.actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ConfigLimits = (props) => {\r\n\r\n    return (\r\n        <div className=\"tableCell-configLimits\">\r\n            <div className=\"value\">\r\n                {props.dataValue.userOptions.configsLimits.val}\r\n            </div>\r\n            <div className=\"days\">\r\n                {props.dataValue.userOptions.configsLimits.max}\r\n            </div>\r\n            <div className=\"btn--configLimits\" onClick={()=>{\r\n                 if(props.dataValue.userOptions.configsLimits.val > 0) {\r\n                    props.setConfigLimit({id:props.dataValue.user.id , configLimit: props.dataValue.userOptions.configsLimits.val - 1})\r\n                }\r\n            }}>\r\n                <img src={Minus} alt=\"\"/>\r\n            </div>\r\n            <div className=\"btn--configLimits\" onClick={()=>{\r\n                    if(props.dataValue.userOptions.configsLimits.val < props.dataValue.userOptions.configsLimits.max) {\r\n                        props.setConfigLimit({id: props.dataValue.user.id, configLimit: props.dataValue.userOptions.configsLimits.val + 1})\r\n                    }\r\n            }}>\r\n                <img src={Plus} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setConfigLimit: (obj) => dispatch(setConfigLimit(obj)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigLimits);","module.exports = __webpack_public_path__ + \"static/media/logo-r.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.id.1b9b2af3.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.days.b811f844.svg\";","module.exports = __webpack_public_path__ + \"static/media/cog.icon.16419592.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.cdeeac64.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.icon.7bfbebb2.svg\";","module.exports = __webpack_public_path__ + \"static/media/cog.47ace99b.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.16ce7abd.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.c9c2af7c.svg\";","import React from 'react';\r\nimport logo from \"../../logo-r.svg\";\r\n\r\n\r\n\r\nconst DComponent = (props) => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\r\n            <h2>{props.page}</h2>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default DComponent;","import React from 'react';\r\nimport './style.scss';\r\n\r\nimport id from './images/user.id.svg';\r\nimport days from './images/user.days.svg';\r\nimport cog from './images/cog.icon.svg';\r\n\r\nimport { setOptionsLicenseMenu, setCurrentLicense, setAutoRenewPersonal, setAutoRenewCorporate, setCurrentTab, setAdditionalScreenCorporate } from \"../../../redux/licenses/licenses.actions\";\r\nimport { setAutoRenewalModal, setMigrationModal } from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n//setAutoRenewalModal\r\n\r\nconst mapStateToProps = (state) => ({\r\n    licenses: state.licenses.licenses,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\n\r\n\r\nconst AdditionalTabForLicense = (props) => {\r\n\r\n    let tabTitle,\r\n        balanceString,\r\n        daysLeft,\r\n        configsLeft,\r\n        currentLicense,\r\n        balanceArray,\r\n        autoRenew,\r\n        autoRenewHandler;\r\n\r\n    let changeTo = '';\r\n    let showLicenseMenu = props.licenses.options.menuForChangingLicense;\r\n    const licensePath = '/licenses/' + props.currentUser.id +'/activity';\r\n    let history = useHistory();\r\n\r\n\r\n\r\n\r\n    switch (props.licenses.currentLicense) {\r\n        case 'Personal':\r\n\r\n            changeTo = 'Corporate';\r\n            currentLicense = props.licenses.personalLicense;\r\n\r\n            autoRenewHandler = (bool) => {\r\n                props.setAutoRenewPersonal(bool);\r\n            }\r\n\r\n            break;\r\n\r\n        case 'Corporate':\r\n\r\n            changeTo = 'Personal';\r\n            currentLicense = props.licenses.corporateLicense;\r\n            autoRenewHandler = (bool) => {\r\n                props.setAutoRenewCorporate(bool);\r\n            }\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    balanceString = currentLicense.balance;\r\n    tabTitle = currentLicense.title;\r\n    daysLeft = currentLicense.daysLeft;\r\n    configsLeft = currentLicense.configsLeft;\r\n    balanceArray = balanceString.split('.');\r\n    autoRenew = currentLicense.autoRenew;\r\n\r\n\r\n\r\n\r\n    let menu = (<div id=\"changeLicenseMenu\">\r\n        <span onClick={() => {\r\n            props.setCurrentTab('Activity');\r\n            props.setAdditionalScreenCorporate(false);\r\n            props.setCurrentLicense(changeTo);\r\n            props.setOptionsLicenseMenu(false);\r\n            history.push(licensePath);\r\n        }}>Change to { changeTo }</span>\r\n    </div>);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"licenseTab\">\r\n\r\n            <div className=\"side-info\">\r\n                <h4 className=\"color-white\">{tabTitle}</h4>\r\n\r\n                <div>\r\n                    <img src={id} alt=\"id\"/><span>{props.currentUser.id}</span>\r\n                </div>\r\n\r\n                <div>\r\n                    <img src={days} alt=\"days\"/>\r\n                    <span className=\"color-white\">{ daysLeft } days <span className=\"color-grey\">or</span> { configsLeft } configs</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"side\">\r\n                <div className=\"license__renew\" >\r\n\r\n                    <Switch checked={ autoRenew }\r\n                            name=\"autoRenew\"\r\n                            onClick={()=>{autoRenewHandler(!autoRenew)}}\r\n                    />\r\n\r\n                    <span>Auto renew</span>\r\n\r\n                    <div className=\"license__renew__btn\" onClick={()=>{props.setAutoRenewalModal(true)}}><img src={cog} alt=\"Cog\"/></div>\r\n                </div>\r\n\r\n                <div className=\"license__balance\" >\r\n                    <svg width=\"12\" height=\"21\" viewBox=\"0 0 12 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M8.61719 9.99219L4.08594 8.66406C3.46094 8.50781 2.99219 8 2.875 7.375C2.71875 6.35938 3.5 5.5 4.47656 5.5H7.32812C7.95312 5.5 8.57812 5.69531 9.08594 6.08594C9.32031 6.24219 9.67188 6.20312 9.86719 6.00781L10.7656 5.10938C11.0391 4.83594 11 4.40625 10.7266 4.17188C9.75 3.42969 8.57812 3 7.32812 3H7.25V1.125C7.25 0.8125 6.9375 0.5 6.625 0.5H5.375C5.02344 0.5 4.75 0.8125 4.75 1.125V3H4.63281C2.71875 3 0.921875 4.25 0.492188 6.125C-0.0546875 8.3125 1.27344 10.4609 3.34375 11.0469L7.875 12.375C8.5 12.5312 9.00781 13.0391 9.08594 13.6641C9.24219 14.6406 8.46094 15.5 7.52344 15.5H4.63281C4.00781 15.5 3.38281 15.3047 2.875 14.9531C2.64062 14.7969 2.28906 14.8359 2.09375 15.0312L1.19531 15.9297C0.921875 16.2031 0.960938 16.6328 1.23438 16.8672C2.21094 17.6094 3.38281 18 4.63281 18H4.75V19.875C4.75 20.2266 5.02344 20.5 5.375 20.5H6.625C6.9375 20.5 7.25 20.2266 7.25 19.875V18H7.32812C9.24219 18 11.0391 16.7891 11.4688 14.9141C12.0156 12.7266 10.6875 10.5781 8.61719 9.99219Z\" fill=\"white\" fillOpacity=\"0.6\"/>\r\n                    </svg>\r\n                    <span>{ balanceArray[0] }</span>\r\n                    <span className=\"afterpoint\">.{ balanceArray[1] }</span>\r\n\r\n                    <div className=\"add-button\" ></div>\r\n                </div>\r\n                <div className=\"changeLicense-btn\" onClick={() => props.setOptionsLicenseMenu( !showLicenseMenu ) }></div>\r\n\r\n                {showLicenseMenu ? menu : ''}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setOptionsLicenseMenu: (prop) => dispatch(setOptionsLicenseMenu(prop)),\r\n        setCurrentLicense: (prop) => dispatch(setCurrentLicense(prop)),\r\n        setAutoRenewPersonal: (prop) => dispatch(setAutoRenewPersonal(prop)),\r\n        setAutoRenewCorporate : (prop) => dispatch(setAutoRenewCorporate(prop)),\r\n        setCurrentTab : (prop) => dispatch(setCurrentTab(prop)),\r\n        setAdditionalScreenCorporate: (prop) => dispatch(setAdditionalScreenCorporate(prop)),\r\n        setAutoRenewalModal: (prop) => dispatch(setAutoRenewalModal(prop)),\r\n        setMigrationModal: (prop) => dispatch(setMigrationModal(prop)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionalTabForLicense);","import React from 'react';\r\nimport './style.scss'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport AdditionalTabForLicense from './PersonalLicense/PersonalLicense';\r\nimport {setCurrentLicense, setCurrentTab, setAdditionalScreenCorporate} from \"../../redux/licenses/licenses.actions\";\r\nimport {setRefillLicenseModal, setAutoRenewalModal, setMigrationModal} from \"../../redux/app/app.actions\";\r\nimport {IconPack} from \"../../Images/IconPack\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst TabsManager = (props) => {\r\n\r\n    let history = useHistory();\r\n    let path = history.location.pathname;\r\n    let tabs, tabsComponent;\r\n    let additionalComponent = '';\r\n    let tabItemClassName = 'tabItem';\r\n    let balanceString = props.licenses.corporateLicense.balance;\r\n    let balanceArray = balanceString.split('.');\r\n\r\n    let invite = (\r\n        <div className=\"licenseInvite\" onClick={()=>{props.setMigrationModal(true)}}>{IconPack.licenseIcons.tabManagerMail}Incoming invitation</div>\r\n    );\r\n    let support = (\r\n        <div className=\"color-white tabItem__support\">\r\n            <svg width=\"15\" height=\"12\" viewBox=\"0 0 15 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M14 1.09375L11.875 11.0312C11.7083 11.7396 11.3229 11.9271 10.7188 11.5938L7.5 9.21875L5.9375 10.7188C5.72917 10.9271 5.51042 11.0312 5.28125 11.0312L5.53125 7.75L11.5 2.375C11.6458 2.22917 11.6458 2.14583 11.5 2.125C11.375 2.08333 11.2396 2.11458 11.0938 2.21875L3.71875 6.875L0.53125 5.875C0.177083 5.77083 0.0104167 5.61458 0.03125 5.40625C0.0520833 5.19792 0.270833 5.02083 0.6875 4.875L13.0938 0.0625C13.4062 -0.0416667 13.6562 0 13.8438 0.1875C14.0312 0.354167 14.0833 0.65625 14 1.09375Z\" fill=\"white\" fill-opacity=\"0.6\"/>\r\n            </svg>\r\n            <a className=\"color-grey\" href=\"tg://resolve?domain=devtnbrs\">@Devtnbrs</a>  for any questions\r\n        </div>\r\n    );\r\n\r\n\r\n    if (props.data) {\r\n        tabs = props.data.map((tab, i) => {\r\n            let tabItem;\r\n            if (path === tab.link) {\r\n                tabItemClassName = 'tabItem tabItem--active';\r\n            } else {\r\n                tabItemClassName = 'tabItem';\r\n            }\r\n\r\n            tabItem = (<div className={tabItemClassName} key={i.toString()} onClick={() => {\r\n                props.setCurrentTab(tab.name);\r\n                history.push(tab.link);\r\n            }}>\r\n                {tab.name}\r\n            </div>);\r\n\r\n            return tabItem;\r\n        });\r\n    }\r\n\r\n    if (props.licenseComponent) {\r\n        additionalComponent = (<div className=\"tabLicense\">\r\n            <AdditionalTabForLicense data={props.licenses} user={props.currentUser}/>\r\n        </div>);\r\n    }\r\n\r\n    let licenseBalance;\r\n    if(props.licenseBalance) {\r\n\r\n        licenseBalance = (<div className=\"licenseBalance userBalance \">\r\n                <svg width=\"12\" height=\"21\" viewBox=\"0 0 12 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M8.61719 9.99219L4.08594 8.66406C3.46094 8.50781 2.99219 8 2.875 7.375C2.71875 6.35938 3.5 5.5 4.47656 5.5H7.32812C7.95312 5.5 8.57812 5.69531 9.08594 6.08594C9.32031 6.24219 9.67188 6.20312 9.86719 6.00781L10.7656 5.10938C11.0391 4.83594 11 4.40625 10.7266 4.17188C9.75 3.42969 8.57812 3 7.32812 3H7.25V1.125C7.25 0.8125 6.9375 0.5 6.625 0.5H5.375C5.02344 0.5 4.75 0.8125 4.75 1.125V3H4.63281C2.71875 3 0.921875 4.25 0.492188 6.125C-0.0546875 8.3125 1.27344 10.4609 3.34375 11.0469L7.875 12.375C8.5 12.5312 9.00781 13.0391 9.08594 13.6641C9.24219 14.6406 8.46094 15.5 7.52344 15.5H4.63281C4.00781 15.5 3.38281 15.3047 2.875 14.9531C2.64062 14.7969 2.28906 14.8359 2.09375 15.0312L1.19531 15.9297C0.921875 16.2031 0.960938 16.6328 1.23438 16.8672C2.21094 17.6094 3.38281 18 4.63281 18H4.75V19.875C4.75 20.2266 5.02344 20.5 5.375 20.5H6.625C6.9375 20.5 7.25 20.2266 7.25 19.875V18H7.32812C9.24219 18 11.0391 16.7891 11.4688 14.9141C12.0156 12.7266 10.6875 10.5781 8.61719 9.99219Z\" fill=\"white\" fillOpacity=\"0.6\"/>\r\n                </svg>\r\n                <span onClick={()=>{history.push('/licenses/' + props.currentUser.id +'/costs')}}>{balanceArray[0]}</span>\r\n                <span className=\"afterpoint\" onClick={()=>{history.push('/licenses/' + props.currentUser.id +'/costs')}}>.{balanceArray[1]}</span>\r\n\r\n                <div className=\"add-button\" onClick={()=>{props.setRefillLicenseModal(true)}}></div>\r\n        </div>);\r\n    }\r\n\r\n\r\n    if (path === '/licenses/' + props.currentUser.id +'/users' && props.licenses.corporateLicense.additionalScreen === true) {\r\n\r\n        let generateClass = 'tabItem';\r\n        let inviteClass = 'tabItem';\r\n        if (props.licenses.currentTab === 'Generate') {\r\n            generateClass = 'tabItem tabItem--active';\r\n        } else if (props.licenses.currentTab === 'Invite') {\r\n            inviteClass = 'tabItem tabItem--active';\r\n        }\r\n\r\n\r\n        tabsComponent = (<div className=\"tabWrapper\">\r\n            <div className='tabItem__arrow' onClick={() => {\r\n                props.setCurrentTab('Users');\r\n                props.setAdditionalScreenCorporate(false);\r\n            }}>\r\n                <svg width=\"10\" height=\"14\" viewBox=\"0 0 10 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M1.0625 6.5C0.78125 6.78125 0.78125 7.25 1.0625 7.53125L7.125 13.625C7.4375 13.9062 7.90625 13.9062 8.1875 13.625L8.90625 12.9062C9.1875 12.625 9.1875 12.1562 8.90625 11.8438L4.09375 7L8.90625 2.1875C9.1875 1.875 9.1875 1.40625 8.90625 1.125L8.1875 0.40625C7.90625 0.125 7.4375 0.125 7.125 0.40625L1.0625 6.5Z\" fill=\"white\" fillOpacity=\"0.6\"/>\r\n                </svg>\r\n            </div>\r\n            <div className={generateClass} onClick={() => {\r\n                    props.setCurrentTab('Generate');\r\n                }}>\r\n                Generate\r\n            </div>\r\n            <div className={inviteClass} onClick={() => {\r\n                    props.setCurrentTab('Invite');\r\n                }}>\r\n                Invite\r\n            </div>\r\n        </div>);\r\n    } else {\r\n        tabsComponent = (<div className=\"tabWrapper\">{tabs} {props.licenseBalance ? licenseBalance : null}\r\n        {props.licenses.currentLicense === 'Personal' && props.licenseComponent ? invite : null }\r\n            {props.support ? support : null}\r\n        </div>);\r\n    }\r\n\r\n\r\n    return (\r\n        <div id=\"TabsManager\">\r\n\r\n            {additionalComponent}\r\n\r\n            {tabsComponent}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    licenses: state.licenses.licenses,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentLicense: (string) => dispatch(setCurrentLicense(string)),\r\n        setCurrentTab: (string) => dispatch(setCurrentTab(string)),\r\n        setAdditionalScreenCorporate: (bool) => dispatch(setAdditionalScreenCorporate(bool)),\r\n        setRefillLicenseModal: (bool) => dispatch(setRefillLicenseModal(bool)),\r\n        setAutoRenewalModal: (bool) => dispatch(setAutoRenewalModal(bool)),\r\n        setMigrationModal: (bool) => dispatch(setMigrationModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TabsManager);","import React, {useEffect} from 'react';\r\n\r\nimport {connect} from \"react-redux\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n    setAccessRightsModal,\r\n    setAuthorizationDataModal,\r\n    setLicenseDaysSettingsModal\r\n} from \"../../../redux/app/app.actions\";\r\nimport {updateUsers} from \"../../../redux/licenses/corporate/users/users.actions\";\r\n\r\n\r\nconst LicenseAlert = (props) => {\r\n    const [selectValue, setSelectValue] = React.useState('Get authorization data');\r\n    const [showBar, setShowBar] = React.useState(false);\r\n    const [counter, setCounter] = React.useState(0);\r\n\r\n    let summ = null;\r\n    let mapCounter = 0;\r\n\r\n    let dataArray = [];\r\n    let selectedDataArray = [];\r\n\r\n    props.usersTabData.map((i, key) => {\r\n        if (i.userOptions.isSelected) {\r\n            selectedDataArray.push(i);\r\n        }\r\n    });\r\n\r\n\r\n    const applyHandler = () => {\r\n\r\n        switch (selectValue) {\r\n            case 'Get authorization data':\r\n                props.setAuthorizationDataModal(true);\r\n                break\r\n\r\n            case 'Set access rights':\r\n                props.setAccessRightsModal(true);\r\n                break\r\n            case 'Delete selected data':\r\n                props.usersTabData.map((i, key) => {\r\n                    if (!i.userOptions.isSelected) {\r\n                        dataArray.push(i);\r\n                    }\r\n                });\r\n\r\n                props.updateUsers(dataArray);\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    };\r\n\r\n\r\n    const cancelHandler = () => {\r\n        let data = props.usersTabData.map((i, key) => {\r\n            i.userOptions.isSelected = false;\r\n            return i;\r\n        });\r\n\r\n        props.updateUsers(data);\r\n\r\n    };\r\n\r\n\r\n    const barComponent = (<div className=\"table_action_bar table_action_bar--license\">\r\n        <div>\r\n            <Button variant=\"contained\" className=\"btn btn--transparent btn--cancel\" onClick={() => {\r\n                cancelHandler()\r\n            }}>\r\n                Cancel\r\n            </Button>\r\n            <p className=\"table_action_bar__info\">{selectedDataArray.length} users selected</p>\r\n        </div>\r\n        <div>\r\n\r\n            <FormControl className='w320'>\r\n                <TextField\r\n                    value={selectValue}\r\n                    onChange={(e) => {\r\n                        setSelectValue(e.target.value)\r\n                    }}\r\n                    fullWidth\r\n                    select\r\n                    variant=\"filled\"\r\n                >\r\n                    <MenuItem key={1} value={'Get authorization data'}>Get authorization data</MenuItem>\r\n                    <MenuItem key={2} value={'Set access rights'}>Set access rights</MenuItem>\r\n                    <MenuItem key={3} value={'Delete selected data'}>Delete selected data</MenuItem>\r\n                </TextField>\r\n            </FormControl>\r\n\r\n            <Button variant=\"contained\" className=\"btn btn--blue\" onClick={() => {\r\n                applyHandler()\r\n            }}>\r\n                APPLY\r\n            </Button>\r\n        </div>\r\n    </div>);\r\n\r\n\r\n    return selectedDataArray.length > 0 ? barComponent : null;\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAccessRightsModal: (bool) => dispatch(setAccessRightsModal(bool)),\r\n        setAuthorizationDataModal: (bool) => dispatch(setAuthorizationDataModal(bool)),\r\n        updateUsers: (obj) => dispatch(updateUsers(obj)),\r\n        setLicenseDaysSettingsModal: (obj) => dispatch(setLicenseDaysSettingsModal(obj)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LicenseAlert);\r\n\r\n","import { configTypes} from './config.types'\r\n\r\nexport const setDeviceFilter = type => ({\r\n  type: configTypes.SET_DEVICE_FILTER,\r\n  payload: type\r\n});\r\n\r\nexport const setOsFilter = type => ({\r\n  type: configTypes.SET_OS_FILTER,\r\n  payload: type\r\n});\r\n\r\nexport const setOsVersionFilter = (version) => ({\r\n  type: configTypes.SET_OS_VERSION_FILTER,\r\n  payload: version\r\n});\r\n\r\nexport const setBrowserFilter = type => ({\r\n  type: configTypes.SET_BROWSER_FILTER,\r\n  payload: type\r\n});\r\n\r\nexport const setBrowserVersionFilter = type => ({\r\n  type: configTypes.SET_BROWSER_VERSION_FILTER,\r\n  payload: type\r\n});\r\n\r\n\r\nexport const updateData = () => ({\r\n  type: configTypes.UPDATE_DATA,\r\n\r\n});\r\nexport const searchData = value => ({\r\n  type: configTypes.SEARCH_DATA,\r\n  payload: value\r\n});\r\n\r\nexport const selectItem = value => ({\r\n  type: configTypes.SELECT_ITEM,\r\n  payload: value\r\n});\r\nexport const unselectItem = value => ({\r\n  type: configTypes.UNSELECT_ITEM,\r\n  payload: value\r\n});","import React from 'react';\r\nimport {searchData} from \"../../../redux/config-shop/config.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {createItem, setNewValueForStoreItem} from \"../../../redux/licenses/corporate/generate/generate.actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst GenerateAlert = (props) => {\r\n\r\n    const applyHandler = () => {\r\n\r\n    };\r\n\r\n    return (<div className=\"table_action_bar table_action_bar--license\">\r\n        <div>\r\n            <Button variant=\"contained\" className=\"btn btn--transparent btn--cancel\" >\r\n                Cancel\r\n            </Button>\r\n            <p className=\"table_action_bar__info\">{props.generateData.store.length} users are ready to create</p>\r\n        </div>\r\n        <div>\r\n            <Button variant=\"contained\" className=\"btn btn--blue\" onClick={() => {\r\n                applyHandler()\r\n            }}>\r\n                CREATE {props.generateData.store.length} USERS\r\n            </Button>\r\n        </div>\r\n    </div>);\r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    generateData: state.corporateLicenseGenerate.generate,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setNewValueForStoreItem: (item, itemValue, id) => dispatch(setNewValueForStoreItem(item, itemValue, id)),\r\n        createItem: (object) => dispatch(createItem(object)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GenerateAlert);\r\n\r\n\r\n","import React from 'react';\r\nimport {searchData} from \"../../../redux/config-shop/config.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst inviteAlert = (props) => {\r\n\r\n    const applyHandler = () => {\r\n\r\n    };\r\n\r\n    return (<div className=\"table_action_bar table_action_bar--license\">\r\n        <div>\r\n            <Button variant=\"contained\" className=\"btn btn--transparent btn--cancel\" >\r\n                Cancel\r\n            </Button>\r\n            <p className=\"table_action_bar__info\">{props.inviteData.store.length} users are ready to create</p>\r\n        </div>\r\n        <div>\r\n            <Button variant=\"contained\" className=\"btn btn--blue\" onClick={() => {\r\n                applyHandler()\r\n            }}>\r\n                CREATE {props.inviteData.store.length} USERS\r\n            </Button>\r\n        </div>\r\n    </div>);\r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inviteData: state.corporateLicenseInvite.invite,\r\n});\r\n\r\nexport default connect(mapStateToProps)(inviteAlert);\r\n\r\n\r\n","import React, {Suspense} from 'react';\r\nimport './style.scss';\r\nimport {setCurrentLicense, setCurrentTab} from \"../../../redux/licenses/licenses.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport LicenseAlert from './../Alerts/licenseAlert';\r\nimport GenerateAlert from './../Alerts/generateAlert';\r\nimport InviteAlert from './../Alerts/inviteAlert';\r\nimport Preloader from './../../Preloader/Preloader';\r\n\r\nconst PersonalActivity = React.lazy(() => import('../Activity/PersonalActivity'));\r\nconst PersonalCost = React.lazy(() => import('../Cost/PersonalCost'));\r\nconst CorporateCost = React.lazy(() => import('./../Cost/CorporateCost'));\r\nconst CorporateUsers = React.lazy(() => import('./../Users/CorporateUsers'));\r\nconst CorporateActivity = React.lazy(() => import('./../Activity/CorporateActivity'));\r\nconst CorporateInvite = React.lazy(() => import('./../Invite/CorporateInvite'));\r\nconst CorporateGenerate = React.lazy(() => import('./../Generate/CorporateGenerate'));\r\n\r\n\r\nconst Dashboard = (props) => {\r\n\r\n    let activeComponent;\r\n    let alertWrapper = null\r\n\r\n    if(props.licenses.currentLicense == 'Personal') {\r\n        if(props.tab === 'activity'){\r\n            activeComponent = (<PersonalActivity />);\r\n        }else if(props.tab === 'costs') {\r\n            activeComponent = (<PersonalCost />);\r\n        }\r\n\r\n    }else if(props.licenses.currentLicense == 'Corporate')  {\r\n\r\n        if(props.tab === 'activity'){\r\n            activeComponent = (<CorporateActivity />);\r\n        }else if(props.tab === 'costs') {\r\n            activeComponent = (<CorporateCost />);\r\n\r\n        }else if(props.tab === 'users') {\r\n            alertWrapper = <LicenseAlert />;\r\n            activeComponent = (<CorporateUsers />);\r\n\r\n            if(props.licenses.currentTab === 'Invite') {\r\n                alertWrapper = <InviteAlert />;\r\n                activeComponent = (<CorporateInvite />);\r\n            } else if(props.licenses.currentTab === 'Generate') {\r\n                alertWrapper = <GenerateAlert />;\r\n                activeComponent = (<CorporateGenerate />);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (<>\r\n        <div id=\"licenseDashboard\">\r\n\r\n            <Suspense fallback={<Preloader />}> {activeComponent}  </Suspense>\r\n        </div>\r\n            {alertWrapper}\r\n        </>);\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    licenses: state.licenses.licenses,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentLicense: (license) => dispatch(setCurrentLicense(license)),\r\n        setCurrentTab : (prop) => dispatch(setCurrentTab(prop))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, {Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsManager from './../TabsManager/TabsManager';\r\nimport LicenseDashboard from './Dashboard/Dashboard';\r\nimport {setCurrentLicense} from '../../redux/licenses/licenses.actions'\r\n\r\nconst Licenses = (props) => {\r\n\r\n    let tabs;\r\n\r\n    switch(props.licenses.currentLicense) {\r\n        case 'Personal':\r\n            tabs = [\r\n                {name : 'Activity', link: '/licenses/' + props.currentUser.id + '/activity'},\r\n                {name : 'Costs', link: '/licenses/' + props.currentUser.id + '/costs'},\r\n            ];\r\n            break;\r\n        case 'Corporate':\r\n            tabs = [\r\n                {name : 'Activity', link: '/licenses/' + props.currentUser.id + '/activity'},\r\n                {name : 'Users', link: '/licenses/' + props.currentUser.id + '/users'},\r\n                {name : 'Costs', link: '/licenses/' + props.currentUser.id + '/costs'},\r\n            ];\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TabsManager data={tabs} license={props.licenses} user={props.currentUser} licenseComponent={true}/>\r\n\r\n            <LicenseDashboard tab={props.activeTab}/>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    licenses: state.licenses.licenses,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentLicense: (license) => dispatch(setCurrentLicense(license))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Licenses);\r\n","import React from 'react';\r\nimport {IconPack} from './../../../Images/IconPack';\r\nimport './style.scss';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport {setBuyCLicenseModal, setBuyPLicenseModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst LicensesNew = (props) => {\r\n\r\n    const [value1, setValue1] = React.useState(1000);\r\n    const [card1Component, setCard1Component] = React.useState(false);\r\n    const [value2, setValue2] = React.useState(5000);\r\n    const [card2Component, setCard2Component] = React.useState(false);\r\n\r\n\r\n    let personalLicenseData = {\r\n        dayCost: (8 - value1/100*0.1277).toFixed(2),\r\n        daysAtAll: (value1 / (8 - value1/100*0.1277).toFixed(2) ).toFixed(0),\r\n        configCost: (8 - value1/100*0.0797).toFixed(2),\r\n        configAtAll: (value1 / (10 - value1/100*0.0797).toFixed(2)).toFixed(0),\r\n    }\r\n\r\n    let corporateLicenseData = {\r\n        dayCost: (8 - value2/5000*0.4312).toFixed(2),\r\n        daysAtAll: (value2 / (8 - value2/5000*0.4312).toFixed(2) ).toFixed(0),\r\n        configCost: (8 - value2/5000*0.2797).toFixed(2),\r\n        configAtAll: (value2 / (10 - value2/5000*0.2797).toFixed(2)).toFixed(0),\r\n    }\r\n\r\n\r\n    const handleChange1 = (event, newValue) => {\r\n        setValue1(newValue);\r\n    };\r\n    const handleChange11 = (event) => {\r\n         setValue1(event.target.value);\r\n    };\r\n    const handleChange2 = (event, newValue) => {\r\n        setValue2(newValue);\r\n    };\r\n    const handleChange22 = (event) => {\r\n        setValue2(event.target.value);\r\n    };\r\n\r\n    let licenseCardComponent = ( <div className=\"value1\"><span className=\"doll\">$</span>{value1}<div className=\"change\" onClick={()=>{setCard1Component(true)}}>{IconPack.buttons.change}</div></div>);\r\n    if(card1Component) {\r\n        licenseCardComponent = ( <div className=\"value2\">\r\n            <TextField\r\n                label=\"Amount to replenish\"\r\n                fullWidth\r\n                rows={1}\r\n                value={value1}\r\n                onChange={(e)=>{handleChange11(e)}}\r\n                variant=\"filled\"\r\n                className=\"inputDollar\"\r\n            />\r\n            <div className=\"change\" onClick={()=>{setCard1Component(false)}}>{IconPack.buttons.change}</div>\r\n        </div>)\r\n    }\r\n\r\n\r\n    let licenseCardComponent2 = ( <div className=\"value1\"><span className=\"doll\">$</span>{value2}<div className=\"change\" onClick={()=>{setCard2Component(true)}}>{IconPack.buttons.change}</div></div>);\r\n    if(card2Component) {\r\n        licenseCardComponent2 = ( <div className=\"value2\">\r\n            <TextField\r\n                label=\"Amount to replenish\"\r\n                fullWidth\r\n                rows={1}\r\n                value={value2}\r\n                onChange={(e)=>{handleChange22(e)}}\r\n                variant=\"filled\"\r\n                className=\"inputDollar\"\r\n            />\r\n            <div className=\"change\" onClick={()=>{setCard2Component(false)}}>{IconPack.buttons.change}</div>\r\n        </div>)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"LicensesNew--dashboard\">\r\n            <div className=\"content\">\r\n                <header>\r\n                    <h1 className=\"center\">Choose a license</h1>\r\n                    <h3 className=\"center\">Indicate the amount of replenishment of the license you need</h3>\r\n                    <p className=\"center\">The cost of a license depends on the amount of the first and subsequent replenishment. The larger the replenishment amount, the lower the tariffs for services under the license. Use the slider to view rates.</p>\r\n                </header>\r\n\r\n                <main>\r\n                    <div className=\"row\">\r\n                        <div className=\"license_card license_card--width \">\r\n                            <div className=\"header\">\r\n                                <div className=\"line blue\"></div>\r\n                                <h4 className=\"center\">Personal</h4>\r\n                                <h6 className=\"center\">For individual use</h6>\r\n\r\n                                <div className=\"option\">\r\n\r\n                                    {licenseCardComponent}\r\n\r\n                                    <div className=\"range\">\r\n                                        <Slider\r\n                                            step={100}\r\n                                            min={100}\r\n                                            max={5000}\r\n                                            value={value1} onChange={handleChange1}  />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"secondOption\">\r\n                                    <div>\r\n\r\n                                        <div><span className=\"white\">${personalLicenseData.dayCost}</span>/ day</div>\r\n                                        <div><span className=\"white\">${personalLicenseData.configCost}</span>/ config</div>\r\n\r\n                                    </div>\r\n                                    <div className=\"center\">{personalLicenseData.daysAtAll} days or {personalLicenseData.configAtAll} configs</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"footer\">\r\n                                <Button variant=\"contained\" className=\"btn btn--blue\" onClick={()=>{props.setBuyPLicenseModal({bool: true, data: value1 })}}>\r\n                                    BUY LICENSE\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n\r\n                        <div className=\"vs\">\r\n                            vs\r\n                        </div>\r\n                        <div className=\"license_card license_card--width \">\r\n                            <div className=\"header\">\r\n                                <div className=\"line pink\"></div>\r\n                                <h4 className=\"center\">Corporate</h4>\r\n                                <h6 className=\"center\">For teams use</h6>\r\n                                <div className=\"option\">\r\n                                    {licenseCardComponent2}\r\n                                    <div className=\"range\">\r\n                                        <Slider\r\n                                            step={100}\r\n                                            min={5000}\r\n                                            max={50000}\r\n                                            value={value2} onChange={handleChange2} aria-labelledby=\"continuous-slider\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"secondOption\">\r\n                                    <div>\r\n\r\n                                        <div><span className=\"white\">${corporateLicenseData.dayCost} </span> / day</div>\r\n                                        <div><span className=\"white\">${corporateLicenseData.configCost} </span> / config</div>\r\n\r\n                                    </div>\r\n                                    <div className=\"center\">{corporateLicenseData.daysAtAll} days or {corporateLicenseData.configAtAll} configs</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"footer\">\r\n                                <Button variant=\"contained\" className=\"btn btn--blue\" onClick={()=>{props.setBuyCLicenseModal({bool: true, data: value2 })}}>\r\n                                    BUY LICENSE\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"license_card--width\">\r\n                            The price is for individual use of the license by one person.\r\n                        </div>\r\n                        <div>\r\n\r\n                        </div>\r\n                        <div className=\"license_card--width\">\r\n                            Prices are per license user. The number of users is not limited.\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"grey-line\"></div>\r\n                </main>\r\n\r\n                <footer>\r\n\r\n                    <nav>\r\n                        <ul>\r\n                            <li>About License</li>\r\n                            <li>Terms of Use</li>\r\n                            <li>Refund Policy</li>\r\n                            <li>FAQ Section</li>\r\n                        </ul>\r\n                    </nav>\r\n                </footer>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setBuyCLicenseModal: (obj) => dispatch(setBuyCLicenseModal(obj)),\r\n        setBuyPLicenseModal: (obj) => dispatch(setBuyPLicenseModal(obj))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LicensesNew);","import { ticketsTypes} from './tickets.types'\r\n\r\nexport const addMessage = obj => ({\r\n    type: ticketsTypes.ADD_MESSAGE,\r\n    payload: obj\r\n});\r\n\r\nexport const createTicket = obj => ({\r\n    type: ticketsTypes.CREATE_TICKET,\r\n    payload: obj\r\n});\r\n","import React from 'react';\r\nimport './style.scss'\r\nimport {setChatId, setChatState} from \"../../../redux/app/app.actions\";\r\nimport {createTicket} from \"../../../redux/support/tickets/tickets.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport { IconPack } from \"../../../Images/IconPack\";\r\n\r\nconst Installer = (props) => {\r\n\r\n    let [cardsCount, setCardsCount] = React.useState(0);\r\n\r\n    let releasesItems = props.releases.map((item, key) => {\r\n\r\n        if(cardsCount >= key) {\r\n\r\n            let changelog = item.changelog.map((item, key) => {\r\n                return (<li key={key}>{IconPack.installerIcons.complete}{item}</li>)\r\n            });\r\n            let minRequirements = item.minRequirements.map((item, key) => {\r\n                return (<li key={key}>{IconPack.installerIcons.warning}{item}</li>)\r\n            });\r\n\r\n\r\n            const btnHandler = (numb) => {\r\n\r\n            }\r\n\r\n\r\n\r\n            return (\r\n                <div className=\"dashboard-installer__card\" key={key}>\r\n                    <header>\r\n                        <h2>{item.title}<span>{item.secondTitle}</span></h2>\r\n                        <span>Release date:  <span className=\"white\">{item.release}</span></span>\r\n\r\n                        <div className=\"btns-row\">\r\n                            <div className=\"btn btn--blue\" onClick={()=>{btnHandler()}}>FOR WINDOWS</div>\r\n                            <div className=\"btn\" onClick={()=>{btnHandler()}}>FOR MACOS</div>\r\n                            <div className=\"btn\" onClick={()=>{btnHandler()}}>FOR LINUX</div>\r\n                        </div>\r\n\r\n                    </header>\r\n\r\n                    <main>\r\n                        <div className=\"option\">\r\n                            <h3>Minimum requirements</h3>\r\n                            <div className=\"grey-line\"></div>\r\n                            <ul>{minRequirements}</ul>\r\n                        </div>\r\n\r\n                        <div className=\"option\">\r\n                            <h3>Supported versions for system installation</h3>\r\n                            <div className=\"grey-line\"></div>\r\n                            <ul>\r\n                                <li>{IconPack.installerIcons.complete}Windows: <span>{item.supportedVersions.windows}</span></li>\r\n                                <li>{IconPack.installerIcons.complete}MacOs: <span>{item.supportedVersions.macOs}</span></li>\r\n                                <li>{IconPack.installerIcons.complete}Linux: <span>{item.supportedVersions.linux}</span></li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"option\">\r\n                            <h3>Changelog</h3>\r\n                            <div className=\"grey-line\"></div>\r\n                            <ul>{changelog}</ul>\r\n                        </div>\r\n                    </main >\r\n\r\n                </div>\r\n            );\r\n        }\r\n    });\r\n\r\n\r\n    window.requestAnimationFrame(function() {\r\n        let chatWrapper = document.querySelector('.releasesWrapper');\r\n        if (chatWrapper !== undefined) {\r\n            chatWrapper.scrollTop = chatWrapper.scrollHeight;\r\n        }\r\n    });\r\n\r\n    const moreHandler = () => {\r\n        setCardsCount(cardsCount+1);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"dashboard-installer\">\r\n            <div className=\"releasesWrapper\">\r\n                {releasesItems}\r\n                <div className=\"btn-more\" onClick={()=>{moreHandler()}}>Past version</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    releases: state.releases.releases,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Installer);","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../../Images/IconPack\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\r\n\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\n\r\nconst OperationsTable = (props) => {\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [dateReverse, setDateReverse] = React.useState(false);\r\n\r\n\r\n\r\n    const getDayRow = (type) => {\r\n        let date = new Date();\r\n        var month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"][date.getMonth()];\r\n        let day;\r\n        switch (type) {\r\n            case 'Today':\r\n                day = date.getDay();\r\n                break;\r\n            case 'Yesterday':\r\n                day = date.getDay() - 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<TableRow className=\"date-row\">\r\n            <TableCell className=\"padding-sides-20 color-white\" colspan=\"6\">\r\n                <b className=\"color-white\">{type}</b>\r\n                <span className=\"color-grey inline\">{day} {month}</span>\r\n            </TableCell>\r\n        </TableRow>);\r\n    }\r\n\r\n\r\n    const getTbodyData = (reversed) => {\r\n\r\n        if(!reversed){\r\n            return (<>\r\n                {getDayRow('Today')}\r\n\r\n                {props.balanceData.map((i, key) => {\r\n                    return itemHTML(i, key);\r\n                })}\r\n\r\n                {getDayRow('Yesterday')}\r\n\r\n                {props.balanceData.map((i, key) => {\r\n                    return itemHTML(i, key);\r\n                })}\r\n\r\n            </>);\r\n        }else {\r\n            return (<>\r\n\r\n                {getDayRow('Yesterday')}\r\n\r\n                {props.balanceData.map((i, key) => {\r\n                    return itemHTML(i, key);\r\n                }).reverse()}\r\n\r\n\r\n                {getDayRow('Today')}\r\n\r\n                {props.balanceData.map((i, key) => {\r\n                    return itemHTML(i, key);\r\n                }).reverse()}\r\n\r\n            </>);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    const prepearAmount = (amount, type) => {\r\n        switch (type) {\r\n            case 'loss':\r\n                return (\r\n                    <span className=\"red\">{amount}</span>)\r\n                break;\r\n            case 'profit':\r\n                return (<span className=\"green\">{amount}</span>)\r\n                break;\r\n            default:\r\n                return amount\r\n                break;\r\n        }\r\n    }\r\n\r\n    const timeConverter = (UNIX_timestamp) => {\r\n        var a = new Date(UNIX_timestamp * 1000);\r\n        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var hour = a.getHours();\r\n        var min = a.getMinutes();\r\n        var sec = a.getSeconds();\r\n        var time = date + ' ' + month + ' '  + ' ' + hour + ':' + min + ':' + sec ;\r\n        return time;\r\n    }\r\n\r\n\r\n    const itemHTML = (i, key) => {\r\n        return  (\r\n            <TableRow key={key}>\r\n                <TableCell className=\"padding-sides-20 green text-align-right\">{i.amount}</TableCell>\r\n                <TableCell className=\"padding-sides-25 \">\r\n                    <span className=\"icon-inside color-white align-items-baseline\">{IconPack.operations.statusGood} {i.purpose}</span>\r\n                </TableCell>\r\n                <TableCell className=\"padding-sides-20 color-white\">{i.description}</TableCell>\r\n                <TableCell className=\"padding-sides-15 color-white text-align-right\">{i.balance}</TableCell>\r\n                <TableCell className=\"padding-sides-15\"><span className=\"icon-inside icon-inside--right color-white align-items-baseline \">{i.operationID}{IconPack.operations.id}</span></TableCell>\r\n                <TableCell className=\"padding-sides-20 \">{timeConverter(i.date)}</TableCell>\r\n            </TableRow>\r\n\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n    let searchedData = props.balanceData.filter(i => {\r\n\r\n        if (\r\n            i.description.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.operationID.toLowerCase().includes(searchValue.toLowerCase())\r\n        ) {\r\n            return i\r\n        }\r\n\r\n    })\r\n\r\n    searchedData = searchedData.map((i, key) => {\r\n\r\n        return itemHTML(i, key);\r\n    });\r\n\r\n\r\n    /* active */\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n            <div className=\"filterPanel\">\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    className=\"search_area\"\r\n                    placeholder=\"Search\"\r\n                    value={searchValue}\r\n                    onChange={(e)=>{setSearchValue(e.target.value)}}\r\n                >\r\n\r\n\r\n                </TextField>\r\n                <div className=\"search_additional_components\">\r\n                    <div className=\"calendar\">{IconPack.searchComponents.calendar}</div>\r\n                    <div>{IconPack.searchComponents.filter}</div>\r\n                </div>\r\n            </div>\r\n            <Table className=\"configTable\">\r\n\r\n                <TableHead>\r\n                    <TableRow>\r\n                            <TableCell className=\"padding-sides-20 w100 text-align-right\">USD</TableCell>\r\n                            <TableCell className=\"padding-sides-25 w225\">Purpose for operation</TableCell>\r\n                            <TableCell className=\"padding-sides-20 \">Description</TableCell>\r\n                            <TableCell className=\"padding-sides-15 w125 text-align-right\">Balance, $</TableCell>\r\n                            <TableCell className=\"padding-sides-15 w150 \">Operation ID</TableCell>\r\n                            <TableCell className={dateReverse ? 'padding-sides-15 w125 td-date' : 'padding-sides-15 w125 td-date rotate-child-180 '} onClick={()=>{setDateReverse(!dateReverse)}}>{IconPack.tableIcons.date} Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody  className=\"no-hover\">\r\n                    {searchValue.length ? searchedData : getTbodyData(dateReverse) }\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    balanceData: state.balance.balanceData.operations,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(OperationsTable);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Fragment} from 'react';\r\nimport TabsManager from './../../TabsManager/TabsManager';\r\nimport OperationsTable from './OperationsTable/OperationsTable'\r\n\r\nconst Operations = () => {\r\n\r\n    let tabs = [\r\n        {name : 'Operations', link: '/operations'},\r\n        {name : 'Transactions', link: '/transactions'}\r\n    ];\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n                <TabsManager data={tabs} />\r\n                <div className=\"dashboard-content\">\r\n                    <OperationsTable />\r\n                </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Operations;","import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../../Images/IconPack\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\r\n\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\n\r\nconst TransactionsTable = (props) => {\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [dateReverse, setDateReverse] = React.useState(false);\r\n\r\n\r\n\r\n    const getDayRow = (type) => {\r\n        let date = new Date();\r\n        var month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n            \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"][date.getMonth()];\r\n        let day;\r\n        switch (type) {\r\n            case 'Today':\r\n                day = date.getDay();\r\n                break;\r\n            case 'Yesterday':\r\n                day = date.getDay() - 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return (<TableRow className=\"date-row\">\r\n            <TableCell className=\"padding-sides-20 color-white\" colspan=\"6\">\r\n                <b className=\"color-white\">{type}</b>\r\n                <span className=\"color-grey inline\">{day} {month}</span>\r\n            </TableCell>\r\n        </TableRow>);\r\n    }\r\n\r\n\r\n    const getTbodyData = (reversed) => {\r\n\r\n        if(!reversed){\r\n            return (<>\r\n                {getDayRow('Today')}\r\n\r\n                {props.balanceData.map((i, key) => {\r\n                    return itemHTML(i, key);\r\n                })}\r\n\r\n                {getDayRow('Yesterday')}\r\n\r\n                {props.balanceData.map((i, key) => {\r\n                    return itemHTML(i, key);\r\n                })}\r\n\r\n            </>);\r\n        }else {\r\n            return (<>\r\n\r\n                {getDayRow('Yesterday')}\r\n\r\n                {props.balanceData.map((i, key) => {\r\n                    return itemHTML(i, key);\r\n                }).reverse()}\r\n\r\n\r\n                {getDayRow('Today')}\r\n\r\n                {props.balanceData.map((i, key) => {\r\n                    return itemHTML(i, key);\r\n                }).reverse()}\r\n\r\n            </>);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    const prepearAmount = (amount, type) => {\r\n        switch (type) {\r\n            case 'loss':\r\n                return (\r\n                    <span className=\"red\">{amount}</span>)\r\n                break;\r\n            case 'profit':\r\n                return (<span className=\"green\">{amount}</span>)\r\n                break;\r\n            default:\r\n                return amount\r\n                break;\r\n        }\r\n    }\r\n\r\n    const timeConverter = (UNIX_timestamp) => {\r\n        var a = new Date(UNIX_timestamp * 1000);\r\n        var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n        var year = a.getFullYear();\r\n        var month = months[a.getMonth()];\r\n        var date = a.getDate();\r\n        var hour = a.getHours();\r\n        var min = a.getMinutes();\r\n        var sec = a.getSeconds();\r\n        var time = date + ' ' + month + ' '  + ' ' + hour + ':' + min + ':' + sec ;\r\n        return time;\r\n    }\r\n\r\n    const itemHTML = (i, key) => {\r\n        return  (\r\n          <TableRow key={key}>\r\n             <TableCell className=\"padding-sides-20 green text-align-right\">{i.amount}</TableCell>\r\n             <TableCell className=\"padding-sides-25 \">\r\n                 <span className=\"icon-inside color-white align-items-baseline\">{IconPack.operations.statusGood} {i.status}</span>\r\n             </TableCell>\r\n             <TableCell className=\"padding-sides-20 color-white\">Bitcoin</TableCell>\r\n             <TableCell className=\"padding-sides-15 color-white \">Top up balance</TableCell>\r\n             <TableCell className=\"padding-sides-15\"><span className=\"icon-inside icon-inside--right color-white align-items-baseline \">154895327595{IconPack.operations.id}</span></TableCell>\r\n             <TableCell className=\"padding-sides-20 \">{timeConverter(i.date)}</TableCell>\r\n         </TableRow>\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n    let searchedData = props.balanceData.filter(i => {\r\n\r\n        if (\r\n            i.status.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.paymentSystem.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.description.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.transactionID.toLowerCase().includes(searchValue.toLowerCase())\r\n        ) {\r\n            return i\r\n        }\r\n\r\n    })\r\n\r\n    searchedData = searchedData.map((i, key) => {\r\n\r\n        return itemHTML(i, key);\r\n    });\r\n\r\n\r\n    /* active */\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n            <div className=\"filterPanel\">\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    className=\"search_area\"\r\n                    placeholder=\"Search\"\r\n                    value={searchValue}\r\n                    onChange={(e)=>{setSearchValue(e.target.value)}}\r\n                >\r\n\r\n\r\n                </TextField>\r\n                <div className=\"search_additional_components\">\r\n                    <div className=\"calendar\">{IconPack.searchComponents.calendar}</div>\r\n                    <div>{IconPack.searchComponents.filter}</div>\r\n                </div>\r\n            </div>\r\n            <Table className=\"configTable\">\r\n\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className=\"padding-sides-20 w100 text-align-right\">USD</TableCell>\r\n                        <TableCell className=\"padding-sides-25 w175\">Status</TableCell>\r\n                        <TableCell className=\"padding-sides-20 w150\">Payment system</TableCell>\r\n                        <TableCell className=\"padding-sides-15  \">Description</TableCell>\r\n                        <TableCell className=\"padding-sides-15 w150 \">Transaction ID</TableCell>\r\n                        <TableCell className={dateReverse ? 'padding-sides-15 w125 td-date' : 'padding-sides-15 w125 td-date rotate-child-180 '} onClick={()=>{setDateReverse(!dateReverse)}}>{IconPack.tableIcons.date} Date</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody  className=\"no-hover\">\r\n                    {searchValue.length ? searchedData : getTbodyData(dateReverse) }\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    balanceData: state.balance.balanceData.transactions,\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(TransactionsTable);\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Fragment} from 'react';\r\nimport TabsManager from './../../TabsManager/TabsManager';\r\nimport TransactionsTable from './TransactionsTable/TransactionsTable'\r\n\r\nconst Transactions = () => {\r\n\r\n    let tabs = [\r\n        {name : 'Operations', link: '/operations'},\r\n        {name : 'Transactions', link: '/transactions'}\r\n    ];\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n                <TabsManager data={tabs} />\r\n                <div className=\"dashboard-content\">\r\n                    <TransactionsTable />\r\n                </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Transactions;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './style.scss'\r\nimport userAvatar from './avatar.svg'\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport {setAdditionalScreenCorporate} from \"../../../redux/licenses/licenses.actions\";\r\n\r\nimport {setChangeEmailModal,\r\n    setChangePasswordlModal, setChangeTelegramModal} from \"../../../redux/app/app.actions\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    let name = 'Lionel Messi';\r\n    let registerDate = 'August 20, 2020';\r\n\r\n    const [value1, setValue1] = React.useState();\r\n\r\n    return (\r\n        <div id=\"dashboard-profile\">\r\n            <header>\r\n                <img src={userAvatar} alt=\"\"/>\r\n                <div>\r\n                    <h2 className=\"font--exo2\">{name}</h2>\r\n                    <h5>Registered {registerDate}</h5>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                <div className=\"profile-info\">\r\n                    <h5>Login</h5>\r\n                    <p>{name}</p>\r\n                    <div className=\"button button--disabled\">CANNOT BE CHANGED</div>\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <h5>Email</h5>\r\n                    <p>{name}@gmail.com</p>\r\n                    <div className=\"button\"\r\n                    onClick={()=> {props.setChangeEmailModal(true)}}\r\n                    >CHANGE</div>\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <h5>Telegram</h5>\r\n                    <p>@{name}</p>\r\n                    <div className=\"button\" onClick={()=> {props.setChangeTelegramModal(true)}}>CHANGE</div>\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <h5>Password</h5>\r\n                    <p>******************</p>\r\n                    <div className=\"button\" onClick={()=> {props.setChangePasswordlModal(true)}}>CHANGE</div>\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <h5>Two factor authorization</h5>\r\n                    <div className=\"switch-wrapper\">\r\n                    <Switch checked={ value1 }\r\n                            name=\"autoRenew\"\r\n                            onChange={(e)=>{ setValue1(!value1)}} />\r\n                    <p className=\"inline \"><span className=\" color-white\">Enabled</span></p>\r\n                </div>\r\n                    <div className=\"button\">CHANGE</div>\r\n                </div>\r\n\r\n\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChangeEmailModal: (bool) => dispatch(setChangeEmailModal(bool)),\r\n        setChangePasswordlModal: (bool) => dispatch(setChangePasswordlModal(bool)),\r\n        setChangeTelegramModal: (bool) => dispatch(setChangeTelegramModal(bool)),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from 'react';\r\nimport Icon from './user.icon.svg';\r\n\r\nconst Message = (props) => {\r\n\r\n    let size;\r\n    let messageItemClassName = 'messages__item';\r\n\r\n    if(props.data.message.length < 30 ){\r\n        size = ' messages__item--small';\r\n    }else if(props.data.message.length < 150){\r\n        size = ' messages__item--medium';\r\n    }else if(props.data.message.length > 150){\r\n        size = ' messages__item--large';\r\n    }\r\n\r\n    messageItemClassName = messageItemClassName + size;\r\n\r\n    if(props.data.owner) {\r\n        messageItemClassName = messageItemClassName + ' messages__item--owner';\r\n    }\r\n\r\n    return (\r\n        <div className={messageItemClassName}>\r\n            <header>\r\n                <div className=\"profile\">\r\n                    <img src={Icon} alt=\"Icon\"/>\r\n                    {props.data.author}</div>\r\n                <div className=\"date\">{props.data.date}</div>\r\n            </header>\r\n            <main>\r\n                {props.data.message}\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, {Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {setChatState, setChatId} from \"../../../../redux/app/app.actions\";\r\nimport MessageComponent from \"../ChatComponents/Message\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../../Images/IconPack\";\r\n\r\nconst MessageTable = (props) => {\r\n\r\n    const rowHandler = (data) => {\r\n        props.setChatId(data.chatId);\r\n        props.setChatState(true);\r\n    }\r\n\r\n    const messageComponent = (rowData) => {\r\n        return (<Fragment><span className=\"message-author\">{rowData.data[rowData.data.length-1].author}:</span>{rowData.data[rowData.data.length-1].message}</Fragment>);\r\n    };\r\n    const lastMessageDate = (rowData) => {\r\n        return (<Fragment>{rowData.data[rowData.data.length-1].date}</Fragment>);\r\n    };\r\n\r\n    const tableActionHendler = (data) => {\r\n        // open popup\r\n        // insert data\r\n    }\r\n\r\n\r\n    let rows =  props.tickets.map((item) => {\r\n        return (<TableRow onClick={()=> {rowHandler(item)}}>\r\n            <TableCell className=\"padding-sides-20 color-white\">{item.title}</TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">{messageComponent(item)}</TableCell>\r\n            <TableCell className=\"padding-sides-20 text-align-right\">{item.creationDate}</TableCell>\r\n            <TableCell className=\"padding-sides-25 text-align-right\">{lastMessageDate(item)}</TableCell>\r\n        </TableRow>)\r\n    });\r\n\r\n\r\n\r\n\r\n    /* active */\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n            <Table className=\"dealsTable\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className=\"padding-sides-20 w175\">Title</TableCell>\r\n                        <TableCell className=\"padding-sides-10\">Last message</TableCell>\r\n                        <TableCell className=\"padding-sides-25 w150 text-align-right\">Creation date</TableCell>\r\n                        <TableCell className=\"padding-sides-25 w150 \">Last message</TableCell>\r\n\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {rows}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    tickets: state.tickets.tickets,\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChatState: (bool) => dispatch(setChatState(bool)),\r\n        setChatId: (numb) => dispatch(setChatId(numb)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageTable);","import React, {Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport './style.scss';\r\nimport MessageComponent from './Message';\r\nimport {setChatState} from \"../../../../redux/app/app.actions\";\r\nimport {addMessage} from \"../../../../redux/support/tickets/tickets.actions\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nconst Chat = (props) => {\r\n\r\n    let messageWrapper, currentDataObj;\r\n    const [mess, setMess] = React.useState('');\r\n    const prepearIndex = (index) => {\r\n        let val = index;\r\n        if(val < 10) {\r\n            val = '0' + val;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    const backHandler = () => {\r\n        props.setChatState(false);\r\n    }\r\n    const pushMessage = () => {\r\n\r\n        if(mess.length !== 0) {\r\n            let messObj = {\r\n                    chatId: currentDataObj.chatId,\r\n                    message: {\r\n                        author: props.currentUser.name,\r\n                        owner: true,\r\n                        message: mess,\r\n                        date: '15 Feb, 12:21:11',\r\n                        dateIndex: Date.now()\r\n                    }\r\n                };\r\n\r\n            props.addMessage(messObj);\r\n            setMess('');\r\n            messObj = null;\r\n        }\r\n    }\r\n    const changeHandler = (target) => {\r\n        setMess(target.value);\r\n    }\r\n\r\n    let chatItemsHTML = props.tickets.map((item) => {\r\n\r\n        if(item.chatId === props.appState.chatState.currentChatId){\r\n            currentDataObj = item;\r\n\r\n            let viewComponent = item.data.map((messageObj, x) => {\r\n                return (<MessageComponent data={messageObj} key={x.toString()}/>);\r\n            });\r\n\r\n            return viewComponent;\r\n        }\r\n    })\r\n\r\n    let iconPack = {\r\n        send: (<svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M15.875 0.125L1.375 8.46875C0.8125 8.78125 0.875 9.59375 1.4375 9.8125L4.78125 11.2188L13.75 3.3125C13.9062 3.15625 14.1562 3.375 14 3.5625L6.5 12.7188V15.25C6.5 16 7.375 16.2812 7.8125 15.75L9.8125 13.3125L13.6875 14.9688C14.125 15.1562 14.6562 14.875 14.7188 14.375L16.9688 0.875C17.0938 0.25 16.4062 -0.1875 15.875 0.125Z\" fill=\"#16181C\"/>\r\n        </svg>),\r\n        question: (<svg width=\"14\" height=\"15\" viewBox=\"0 0 14 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M7 9.54688C6.5625 9.54688 6.23438 9.90234 6.23438 10.3125C6.23438 10.75 6.5625 11.0781 7 11.0781C7.41016 11.0781 7.76562 10.75 7.76562 10.3125C7.76562 9.90234 7.41016 9.54688 7 9.54688ZM7.19141 8.89062C7.38281 8.89062 7.51953 8.75391 7.51953 8.5625C7.51953 7.38672 9.65234 7.46875 9.65234 5.63672C9.65234 4.24219 8.39453 3.42188 6.97266 3.42188C5.74219 3.42188 5.05859 3.91406 4.48438 4.65234C4.375 4.81641 4.40234 5.00781 4.56641 5.11719L4.92188 5.39062C5.05859 5.47266 5.25 5.44531 5.35938 5.30859C5.76953 4.78906 6.17969 4.51562 6.97266 4.51562C8.06641 4.51562 8.55859 5.08984 8.55859 5.63672C8.55859 6.8125 6.42578 6.64844 6.42578 8.5625C6.42578 8.75391 6.58984 8.89062 6.75391 8.89062H7.19141ZM7 1.34375C10.2266 1.34375 12.9062 3.99609 12.9062 7.25C12.9062 10.5312 10.2539 13.1562 7 13.1562C3.71875 13.1562 1.09375 10.5312 1.09375 7.25C1.09375 3.99609 3.71875 1.34375 7 1.34375ZM7 0.46875C3.25391 0.46875 0.21875 3.53125 0.21875 7.25C0.21875 10.9961 3.25391 14.0312 7 14.0312C10.7188 14.0312 13.7812 10.9961 13.7812 7.25C13.7812 3.53125 10.7188 0.46875 7 0.46875Z\" fill=\"white\" fillOpacity=\"0.6\"/>\r\n        </svg>),\r\n        date: (<svg width=\"13\" height=\"15\" viewBox=\"0 0 13 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M11.3125 2H10V0.578125C10 0.414062 9.83594 0.25 9.67188 0.25H9.45312C9.26172 0.25 9.125 0.414062 9.125 0.578125V2H3.875V0.578125C3.875 0.414062 3.71094 0.25 3.54688 0.25H3.32812C3.13672 0.25 3 0.414062 3 0.578125V2H1.6875C0.949219 2 0.375 2.60156 0.375 3.3125V12.9375C0.375 13.6758 0.949219 14.25 1.6875 14.25H11.3125C12.0234 14.25 12.625 13.6758 12.625 12.9375V3.3125C12.625 2.60156 12.0234 2 11.3125 2ZM1.6875 2.875H11.3125C11.5312 2.875 11.75 3.09375 11.75 3.3125V4.625H1.25V3.3125C1.25 3.09375 1.44141 2.875 1.6875 2.875ZM11.3125 13.375H1.6875C1.44141 13.375 1.25 13.1836 1.25 12.9375V5.5H11.75V12.9375C11.75 13.1836 11.5312 13.375 11.3125 13.375ZM4.42188 9C4.58594 9 4.75 8.86328 4.75 8.67188V7.57812C4.75 7.41406 4.58594 7.25 4.42188 7.25H3.32812C3.13672 7.25 3 7.41406 3 7.57812V8.67188C3 8.86328 3.13672 9 3.32812 9H4.42188ZM7.04688 9C7.21094 9 7.375 8.86328 7.375 8.67188V7.57812C7.375 7.41406 7.21094 7.25 7.04688 7.25H5.95312C5.76172 7.25 5.625 7.41406 5.625 7.57812V8.67188C5.625 8.86328 5.76172 9 5.95312 9H7.04688ZM9.67188 9C9.83594 9 10 8.86328 10 8.67188V7.57812C10 7.41406 9.83594 7.25 9.67188 7.25H8.57812C8.38672 7.25 8.25 7.41406 8.25 7.57812V8.67188C8.25 8.86328 8.38672 9 8.57812 9H9.67188ZM7.04688 11.625C7.21094 11.625 7.375 11.4883 7.375 11.2969V10.2031C7.375 10.0391 7.21094 9.875 7.04688 9.875H5.95312C5.76172 9.875 5.625 10.0391 5.625 10.2031V11.2969C5.625 11.4883 5.76172 11.625 5.95312 11.625H7.04688ZM4.42188 11.625C4.58594 11.625 4.75 11.4883 4.75 11.2969V10.2031C4.75 10.0391 4.58594 9.875 4.42188 9.875H3.32812C3.13672 9.875 3 10.0391 3 10.2031V11.2969C3 11.4883 3.13672 11.625 3.32812 11.625H4.42188ZM9.67188 11.625C9.83594 11.625 10 11.4883 10 11.2969V10.2031C10 10.0391 9.83594 9.875 9.67188 9.875H8.57812C8.38672 9.875 8.25 10.0391 8.25 10.2031V11.2969C8.25 11.4883 8.38672 11.625 8.57812 11.625H9.67188Z\" fill=\"white\" fillOpacity=\"0.6\"/>\r\n            </svg>)\r\n    }\r\n\r\n\r\n    window.requestAnimationFrame(function() {\r\n        let chatWrapper = document.querySelector('.chatWrapper');\r\n        if (chatWrapper !== undefined) {\r\n            chatWrapper.scrollTop = chatWrapper.scrollHeight;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"tabsManager\">\r\n                <div className=\"back\" onClick={()=>{backHandler()}}>\r\n                </div>\r\n                <span className=\"tabsManager__title\">{currentDataObj.title}</span>\r\n                <span className=\"tabsManager__questions\">{iconPack.question}{currentDataObj.subject}</span>\r\n                <span className=\"tabsManager__date\">{iconPack.date}{currentDataObj.creationDate}</span>\r\n\r\n            </div>\r\n\r\n            <div className=\"chatWrapper\">\r\n                {chatItemsHTML}\r\n                <div className=\"anchor\"></div>\r\n            </div>\r\n\r\n            <div className=\"chatControls\">\r\n\r\n                <TextField\r\n                    label=\"Message\"\r\n                    value={mess}\r\n                    onChange={(e)=>{\r\n                        changeHandler(e.target);\r\n                    }}\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"filled\"\r\n                />\r\n\r\n                <div className=\"send btn btn--blue btn--circle\" onClick={()=>{pushMessage()}}>{iconPack.send}</div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tickets: state.tickets.tickets,\r\n    appState: state.appOptions.appState,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChatState: (bool) => dispatch(setChatState(bool)),\r\n        addMessage: (obj) => dispatch(addMessage(obj))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n","import React, {Fragment} from 'react';\r\nimport './style.scss';\r\nimport TabsManager from './../../TabsManager/TabsManager';\r\nimport MessageTable from './MessageTable/MessageTable';\r\nimport ChatComponent from './ChatComponents/Chat';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Tickets = (props) => {\r\n\r\n    let currentComponent;\r\n\r\n    let tabs = [\r\n        { name : 'Tickets', link: '/tickets'},\r\n        { name : 'New Ticket', link: '/new-ticket'},\r\n    ];\r\n\r\n    let ticketsComponent = (\r\n        <Fragment>\r\n            <TabsManager data={tabs} support={true}/>\r\n            <div className=\"dashboard-content\">\r\n                <MessageTable />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n\r\n\r\n    if(props.appState.chatState.isChatOpen){\r\n        return (<Fragment><ChatComponent /></Fragment>);\r\n    }else {\r\n        return ticketsComponent;\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tickets: state.tickets.tickets,\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nexport default connect(mapStateToProps)(Tickets);","import React, {Fragment} from 'react';\r\nimport './style.scss';\r\nimport TabsManager from './../../TabsManager/TabsManager';\r\nimport MessageTable from \"../Tickets/MessageTable/MessageTable\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport {setChatState, setChatId} from \"../../../redux/app/app.actions\";\r\nimport {addMessage, createTicket } from \"../../../redux/support/tickets/tickets.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ChatComponent from \"../Tickets/ChatComponents/Chat\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst NewTicket = (props) => {\r\n    let tabs = [\r\n        {name: 'Tickets', link: '/tickets'},\r\n        {name: 'New Ticket', link: '/new-ticket'},\r\n    ];\r\n\r\n    const [subject, setSubject] = React.useState('Questions about buying a license');\r\n    const [title, setTitle] = React.useState('Plan to take over the universe');\r\n    const [mess, setMessage] = React.useState('');\r\n\r\n    const handleChange1 = (event) => {\r\n        setSubject(event.target.value);\r\n    };\r\n\r\n    const handleChange2 = (event) => {\r\n        setTitle(event.target.value);\r\n    };\r\n    const handleChange3 = (event) => {\r\n        setMessage(event.target.value);\r\n    };\r\n    let history = useHistory();\r\n\r\n    const createTicket = () => {\r\n        let currentIndex = Date.now();\r\n        if(mess.length !== 0) {\r\n            let ticketObj = {\r\n                title: title,\r\n                subject: subject,\r\n                creationDate: currentIndex,\r\n                data: [{\r\n                    author: props.currentUser.name,\r\n                    owner: true,\r\n                    message: mess,\r\n                    date: currentIndex,\r\n                    dateIndex: currentIndex\r\n                }],\r\n                chatId: currentIndex,\r\n            }\r\n\r\n            props.createTicket(ticketObj);\r\n            props.setChatId(currentIndex);\r\n            props.setChatState(true);\r\n            history.push('/tickets');\r\n        }\r\n    }\r\n\r\n        return (\r\n            <Fragment>\r\n                <TabsManager data={tabs} support={true}/>\r\n                <div className=\"dashboard-new-ticket\">\r\n                    <div className=\"form\">\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            select\r\n                            label=\"Subject\"\r\n                            value={subject}\r\n                            onChange={handleChange1}\r\n                        >\r\n                            <MenuItem value='NEW Subject'>NEW Subject</MenuItem>\r\n                            <MenuItem value='Questions about buying a license'>Questions about buying a license</MenuItem>\r\n                            <MenuItem value='Questions about buying a license1'>Questions about buying a license1</MenuItem>\r\n                            <MenuItem value='Questions about buying a license2'>Questions about buying a license2</MenuItem>\r\n                            <MenuItem value='Questions about buying a license3'>Questions about buying a license3</MenuItem>\r\n                        </TextField>\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            select\r\n                            label=\"Title\"\r\n                            value={title}\r\n                            onChange={handleChange2}\r\n                        >\r\n                            <MenuItem value={'NEW TITLE'}>NEW TITLE</MenuItem>\r\n                            <MenuItem value={'Plan to take over the universe'}>Plan to take over the universe</MenuItem>\r\n                            <MenuItem value={'Plan to take over the universe1'}>Plan to take over the universe1</MenuItem>\r\n                            <MenuItem value={'Plan to take over the universe2'}>Plan to take over the universe2</MenuItem>\r\n                            <MenuItem value={'Plan to take over the universe3'}>Plan to take over the universe3</MenuItem>\r\n                        </TextField>\r\n                        <TextField\r\n                            label=\"Message\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={14}\r\n                            value={mess}\r\n                            onChange={handleChange3}\r\n                            variant=\"filled\"\r\n                            className=\"MessageTextArea\"\r\n                        />\r\n\r\n                        <div className=\"btn btn--blue\" onClick={() => {\r\n                            createTicket()\r\n                        }}>Create a new ticket\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n\r\n\r\n\r\n\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    tickets: state.tickets.tickets,\r\n    appState: state.appOptions.appState,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChatState: (bool) => dispatch(setChatState(bool)),\r\n        createTicket: (obj) => dispatch(createTicket(obj)),\r\n        setChatId: (numb) => dispatch(setChatId(numb))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTicket);","import React, {Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {getDate} from \"../../../../redux/Utils\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../../Images/IconPack\";\r\n\r\nimport {setLicenseDaysSettingsModal, setChangeDealModal} from \"../../../../redux/app/app.actions\";\r\n\r\nconst DealsTable = (props) => {\r\n\r\n    const tableAction = (rowData) => {\r\n        return (<div className=\"tableAction\" onClick={()=>{tableActionHendler(rowData)}}><svg width=\"5\" height=\"14\" viewBox=\"0 0 5 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path d=\"M2.5 5.29688C1.48438 5.29688 0.671875 6.13477 0.671875 7.125C0.671875 8.14062 1.48438 8.95312 2.5 8.95312C3.49023 8.95312 4.32812 8.14062 4.32812 7.125C4.32812 6.13477 3.49023 5.29688 2.5 5.29688ZM0.671875 2.65625C0.671875 3.67188 1.48438 4.48438 2.5 4.48438C3.49023 4.48438 4.32812 3.67188 4.32812 2.65625C4.32812 1.66602 3.49023 0.828125 2.5 0.828125C1.48438 0.828125 0.671875 1.66602 0.671875 2.65625ZM0.671875 11.5938C0.671875 12.6094 1.48438 13.4219 2.5 13.4219C3.49023 13.4219 4.32812 12.6094 4.32812 11.5938C4.32812 10.6035 3.49023 9.76562 2.5 9.76562C1.48438 9.76562 0.671875 10.6035 0.671875 11.5938Z\" fill=\"white\" fillOpacity=\"0.6\"/>\r\n        </svg></div>);\r\n    };\r\n\r\n    const tableActionHendler = (data) => {\r\n        props.setChangeDealModal({bool:true, data:null})\r\n    }\r\n\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [dateReverse, setDateReverse] = React.useState(false);\r\n\r\n\r\n    const getTbodyData = (reversed) => {\r\n\r\n        if(!reversed){\r\n            return props.deals.map((i, key) => {\r\n                    return  getRowItem(i);\r\n                });\r\n        }else {\r\n            return props.deals.map((i, key) => {\r\n                    return  getRowItem(i);\r\n                }).reverse()\r\n        }\r\n    };\r\n\r\n    let getRowItem = (item) => {\r\n        return (<TableRow onClick={()=> {tableActionHendler(item)}}>\r\n            <TableCell className=\"padding-sides-20  color-white\">{item.title}</TableCell>\r\n            <TableCell className=\"padding-sides-5 color-white\">{item.status}</TableCell>\r\n            <TableCell className=\"padding-sides-10\"><span className=\"icon-inside align-items-baseline inline\">{IconPack.userIcons.forTable}{item.seller}</span></TableCell>\r\n            <TableCell className=\"padding-sides-20\"><span className=\"icon-inside align-items-baseline inline\">{IconPack.userIcons.forTable}{item.buyer}</span></TableCell>\r\n            <TableCell className=\"padding-sides-15 color-white text-align-right\">{item.amount}</TableCell>\r\n            <TableCell className=\"padding-sides-25 color-white\">{item.dealId}</TableCell>\r\n            <TableCell className=\"padding-sides-0 \">{item.dateCreated} {tableAction(item)}</TableCell>\r\n        </TableRow>)\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    /* active */\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n            <Table className=\"dealsTable\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className=\"padding-sides-20 \">Deal title</TableCell>\r\n                        <TableCell className=\"padding-sides-5 \">Status</TableCell>\r\n                        <TableCell className=\"padding-sides-10 w150\">Seller</TableCell>\r\n                        <TableCell className=\"padding-sides-20 w150\">Buyer</TableCell>\r\n                        <TableCell className=\"padding-sides-15 w80 text-align-right\">Amount</TableCell>\r\n                        <TableCell className=\"padding-sides-25 w150\">Deal ID</TableCell>\r\n                        <TableCell className={dateReverse ? 'padding-sides-0 w150 td-date' : 'padding-sides-0 w150 td-date rotate-child-180 '} onClick={()=>{setDateReverse(!dateReverse)}}>{IconPack.tableIcons.date} Date Created</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {getTbodyData(dateReverse)}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    deals: state.deals.deals,\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLicenseDaysSettingsModal: (type) => dispatch(setLicenseDaysSettingsModal(type)),\r\n        setChangeDealModal: (type) => dispatch(setChangeDealModal(type)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DealsTable);","import React, {Fragment} from 'react';\r\nimport TabsManager from './../../TabsManager/TabsManager';\r\nimport DealsTable from './DealsTable/DealsTable'\r\n\r\nconst Deals = () => {\r\n\r\n    let tabs = [\r\n        {name : 'My Deals', link: '/deals'},\r\n        {name : 'New Deal', link: '/new-deal'}\r\n    ];\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n                <TabsManager data={tabs} />\r\n                <div className=\"dashboard-content\">\r\n                    <DealsTable />\r\n                </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Deals;","import React, {Fragment} from 'react';\r\nimport TabsManager from \"../../TabsManager/TabsManager\";\r\nimport './style.scss';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { IconPack } from './../../../Images/IconPack'\r\n\r\n\r\nconst Faq = () => {\r\n    let tabs = [\r\n        {name : 'General', link: '/general'},\r\n        {name : 'License', link: '/license'},\r\n        {name : 'Payments', link: '/payments'},\r\n        {name : 'Problems', link: '/problems'}\r\n    ];\r\n    const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n    const handleChange = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <TabsManager data={tabs} />\r\n            <div className=\"dashboard-faq\">\r\n                <div className=\"questions\">\r\n                    <div>\r\n                        <ExpansionPanel square expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n                            <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n                                <div className=\"tab__title\">\r\n                                    {expanded === 'panel1' ? IconPack.tabsIcons.questionActive : IconPack.tabsIcons.question}\r\n                                    Are fingerprints saved when transferring sessions to another PC?</div>\r\n                                <div className=\"tab__btn\">\r\n                                    {expanded === 'panel1' ? IconPack.tabsIcons.tabMarkActive : IconPack.tabsIcons.tabMark}\r\n                                </div>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <div className=\"tab__content\">\r\n                                    <div className=\"greyline\"></div>\r\n                                    <p>The fingerprints depend on the hardware – if the hardware is different when transferring, then the final fingerprints will be different. The fingerprints are not included in the config, they are generated when the session is created. Canvas, Audio, clientRects are not included in the config, but generated. <a href=\"#\">WebGL</a>, <a href=\"\">Fonts</a>, <a href=\"\">Plugins</a> are included in the config.\r\n                                    </p>\r\n                                    <b>If you want to have the same fingerprints when transferring, there are 3 options:</b>\r\n\r\n                                    <ol>\r\n                                        <li>Use the same virtual machines</li>\r\n                                        <li>In one version, the option to work on the server at the same time was added (there are still some settings with Tor). Accordingly, if the job is on one server via RDP, then the hardware will be the same, as well as the prints during the transfer</li>\r\n                                        <li>A batch of computers with identical hardware. A highly individual option.</li>\r\n                                    </ol>\r\n\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n\r\n                        <ExpansionPanel square expanded={expanded === 'panel2'} onChange={handleChange('panel2')}>\r\n                            <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n                                <div className=\"tab__title\">\r\n                                    {expanded === 'panel2' ? IconPack.tabsIcons.questionActive : IconPack.tabsIcons.question}\r\n                                    What data does the browser send? How can I verify that you do not steal my data?</div>\r\n                                <div className=\"tab__btn\">\r\n                                    {expanded === 'panel2' ? IconPack.tabsIcons.tabMarkActive : IconPack.tabsIcons.tabMark}\r\n                                </div>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <div className=\"tab__content\">\r\n                                    <div className=\"greyline\"></div>\r\n                                    The fingerprints depend on the hardware – if the hardware is different when transferring, then the final fingerprints will be different. The fingerprints are not included in the config, they are generated when the session is created. Canvas, Audio, clientRects are not included in the config, but generated. WebGL, Fonts, Plugins are included in the config.\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n\r\n                        <ExpansionPanel square expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n                            <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n                                <div className=\"tab__title\">\r\n                                    {expanded === 'panel3' ? IconPack.tabsIcons.questionActive : IconPack.tabsIcons.question}\r\n                                     If Sox or tunnel does not have its own DNS</div>\r\n                                <div className=\"tab__btn\">\r\n                                    {expanded === 'panel3' ? IconPack.tabsIcons.tabMarkActive : IconPack.tabsIcons.tabMark}\r\n                                </div>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <div className=\"tab__content\">\r\n                                    The fingerprints depend on the hardware – if the hardware is different when transferring, then the final fingerprints will be different. The fingerprints are not included in the config, they are generated when the session is created. Canvas, Audio, clientRects are not included in the config, but generated. WebGL, Fonts, Plugins are included in the config.\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n\r\n                        <ExpansionPanel square expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\r\n                            <ExpansionPanelSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n                                <div className=\"tab__title\">\r\n                                    {expanded === 'panel4' ? IconPack.tabsIcons.questionActive : IconPack.tabsIcons.question}\r\n                                    How can I use the geolocation function?</div>\r\n                                <div className=\"tab__btn\">\r\n                                    {expanded === 'panel4' ? IconPack.tabsIcons.tabMarkActive : IconPack.tabsIcons.tabMark}\r\n                                </div>\r\n                            </ExpansionPanelSummary>\r\n                            <ExpansionPanelDetails>\r\n                                <div className=\"tab__content\">\r\n                                    The fingerprints depend on the hardware – if the hardware is different when transferring, then the final fingerprints will be different. The fingerprints are not included in the config, they are generated when the session is created. Canvas, Audio, clientRects are not included in the config, but generated. WebGL, Fonts, Plugins are included in the config.\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </ExpansionPanel>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Faq;","import React, {Fragment} from 'react';\r\nimport './style.scss';\r\nimport TabsManager from './../../TabsManager/TabsManager';\r\nimport MessageTable from \"../Tickets/MessageTable/MessageTable\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport {setChatState, setChatId} from \"../../../redux/app/app.actions\";\r\nimport {addMessage, createTicket } from \"../../../redux/support/tickets/tickets.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport ChatComponent from \"../Tickets/ChatComponents/Chat\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport { IconPack } from './../../../Images/IconPack'\r\n\r\n\r\nconst NewDeal = (props) => {\r\n    let tabs = [\r\n        {name: 'My Deals', link: '/deals'},\r\n        {name: 'New Deal', link: '/new-deal'},\r\n    ];\r\n\r\n    const [title, setTitle] = React.useState('Questions about buying a license');\r\n    const [status, setStatus] = React.useState('Plan to take over the universe');\r\n    const [creationDate, setCreationDate] = React.useState('');\r\n    const [seller, setSeller] = React.useState('');\r\n    const [buyer, setBuyer] = React.useState(props.currentUser.name);\r\n    const [amountToSend, setAmountToSend] = React.useState(1000);\r\n    const [amountComisionRate, setAmountComisionRate] = React.useState(100);\r\n    const [amountToRecive, setAmountToRecive] = React.useState(1100);\r\n    const [dealId, setDealId] = React.useState('');\r\n    const [dateCreated, setDateCreated] = React.useState('');\r\n    const [isBuyer, setIsBuyer] = React.useState(true);\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    const titleHandler = (event) => {\r\n        setTitle(event.target.value);\r\n    };\r\n\r\n    const messHandler = (event) => {\r\n        setDescription(event.target.value);\r\n    };\r\n\r\n    let history = useHistory();\r\n\r\n    const createTicket = () => {\r\n        let currentIndex = Date.now();\r\n        let dealObj = {\r\n                title: title,\r\n                status: 'Completed',\r\n                creationDate: '',\r\n                seller: 'Ronaldo',\r\n                buyer: 'Lionel Messi',\r\n                amountToSend: 1000,\r\n                amountComisionRate: 100,\r\n                amountToRecive: 1100,\r\n                dealId: 1588418078101,\r\n                dateCreated: currentIndex,\r\n                isBuyer:true,\r\n            }\r\n\r\n        history.push('/deals');\r\n    }\r\n\r\n\r\n    let buyerBTN, sellerBTN;\r\n\r\n    if (isBuyer) {\r\n        buyerBTN = (<div className=\"buyer active\" onClick={()=>{sellerBuyerSetter(true)}}>{IconPack.checkTrue}I AM A BUYER</div>);\r\n        sellerBTN = (<div className=\"seller\" onClick={()=>{sellerBuyerSetter(false)}}>{IconPack.checkFalse}I AM A SELLER</div>);\r\n\r\n    }else {\r\n        buyerBTN = (<div className=\"buyer\" onClick={()=>{sellerBuyerSetter(true)}}>{IconPack.checkFalse}I AM A BUYER</div>);\r\n        sellerBTN = (<div className=\"seller active\" onClick={()=>{sellerBuyerSetter(false)}}>{IconPack.checkTrue}I AM A SELLER</div>);\r\n\r\n    }\r\n\r\n    const sellerBuyerSetter = (bool) => {\r\n        setIsBuyer(bool);\r\n        if (bool) {\r\n            setBuyer(props.currentUser.name);\r\n            setSeller('');\r\n        }else {\r\n            setBuyer('');\r\n            setSeller(props.currentUser.name);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <Fragment>\r\n                <TabsManager data={tabs}/>\r\n                <div className=\"dashboard-new-deal\">\r\n                    <div className=\"selectWho\">\r\n                        {buyerBTN}\r\n                        {sellerBTN}\r\n                    </div>\r\n\r\n                    <div className=\"grey-line\"></div>\r\n                    <div className=\"form\">\r\n                        <div className=\"row1\">\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Buyer Login\"\r\n                                value={buyer}\r\n\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Seller Login\"\r\n                                value={seller}\r\n\r\n                           />\r\n                        </div>\r\n                        <div className=\"row2\">\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Amount to send\"\r\n                                value={amountToSend}\r\n\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                disabled\r\n                                label=\"Comision rate\"\r\n                                value={amountComisionRate}\r\n\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Amount to recive\"\r\n                                value={amountToRecive}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className=\"row3\">\r\n                        <TextField\r\n                            label=\"Deal title\"\r\n                            fullWidth\r\n                            rows={1}\r\n                            value={title}\r\n                            onChange={titleHandler}\r\n                            variant=\"filled\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Terms of transaction\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={13}\r\n                            value={description}\r\n                            onChange={messHandler}\r\n                            variant=\"filled\"\r\n                        />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"terms\">\r\n                            <Switch checked={ true }\r\n                                    name=\"userOptions.seesActivity\" />\r\n                            I agree to the rules and accept the terms of the <span className=\"color-grey\">user agreement</span>\r\n                        </div>\r\n\r\n                        <div className=\"btn btn--blue\" onClick={() => {\r\n                            createTicket()\r\n                        }}>Create a new deal\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        );\r\n\r\n\r\n\r\n\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    deals: state.deals.deals,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChatState: (bool) => dispatch(setChatState(bool)),\r\n        createTicket: (obj) => dispatch(createTicket(obj)),\r\n        setChatId: (numb) => dispatch(setChatId(numb))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewDeal);","import React from 'react';\r\nimport {searchData} from \"../../../redux/config-shop/config.actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ConfigAlert = (props) => {\r\n\r\n\r\n        let summ = null;\r\n        let counter = 0;\r\n\r\n        {props.configShop.selectedData.map((i, key) => {\r\n            if(i) {\r\n                counter++;\r\n                summ = summ + i.price\r\n            }\r\n        })};\r\n\r\n\r\n        if(summ) {\r\n            return (<div className=\"table_action_bar\">\r\n                <div className=\"btn btn--transparent btn--cancel\">Cancel</div>\r\n                <div>\r\n                <div className=\"table_action_bar__info\">{counter} Selected for <b>${summ}</b></div>\r\n                <div className=\"btn btn--blue\">BUY SELECTED</div>\r\n                </div>\r\n                </div>);\r\n        }else {\r\n            return null;\r\n        }\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    configShop: state.configShop.configShop,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchData: (prop) => dispatch(searchData(prop)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigAlert);","import React, { useState, useEffect } from 'react';\r\nimport DaysLeft from \"../../TableComponents/DaysLeft/DaysLeft\";\r\nimport {connect} from \"react-redux\";\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport './style.scss';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { setDeviceFilter, setOsFilter, setOsVersionFilter, setBrowserFilter, setBrowserVersionFilter, updateData, selectItem, searchData } from \"../../../redux/config-shop/config.actions\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport { IconPack } from \"../../../Images/IconPack\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nconst Shop = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.setDeviceFilter('Desktop');\r\n        props.setOsFilter('Windows');\r\n        props.updateData();\r\n    }, []);\r\n    const [searchValue, setSearch] = React.useState('');\r\n\r\n    const [isSearchActive, setSearchActive] = React.useState(false);\r\n    const [isCheckboxesActive, setCheckboxesActive] = React.useState(true);\r\n\r\n    const searchEventHandler = (e) => {\r\n\r\n        if(e.target.value != 0) {\r\n            setSearch(e.target.value);\r\n            props.searchData(e.target.value);\r\n            setSearchActive(true)\r\n        }else {\r\n            setSearch(e.target.value);\r\n            setSearchActive(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const deviceEventHandler = (e) => {\r\n        props.setDeviceFilter(e.target.value);\r\n        props.updateData();\r\n    }\r\n    const osEventHandler = (e) => {\r\n        props.setOsFilter(e.target.value);\r\n\r\n        let currentIndex = props.configShop.sort.os.find((obj)=> {\r\n                return obj.title === e.target.value\r\n        });\r\n        props.setOsVersionFilter(currentIndex.version[0].toString());\r\n        props.updateData();\r\n    }\r\n    const osVersionsEventHandler = (e) => {\r\n        props.setOsVersionFilter(e.target.value);\r\n        props.updateData();\r\n    }\r\n\r\n    const browserEventHandler = (e) => {\r\n        props.setBrowserFilter(e.target.value);\r\n\r\n        let currentIndex = props.configShop.sort.browser.find((obj)=> {\r\n            return obj.title === e.target.value\r\n        });\r\n\r\n        props.setBrowserVersionFilter(currentIndex.version[0].toString());\r\n        props.updateData();\r\n    }\r\n    const browserVersionsEventHandler = (e) => {\r\n        props.setBrowserVersionFilter(e.target.value);\r\n        props.updateData();\r\n    }\r\n\r\n\r\n\r\n    const buyEventHandler = (dataObj) => {\r\n\r\n        setCheckboxesActive(true)\r\n    }\r\n    const checkBoxHandler = (data, value) => {\r\n\r\n        props.selectItem(data);\r\n    }\r\n\r\n\r\n\r\n\r\n    const tableCheckBox = (row) => {\r\n        return (<TableCell scope=\"row\" className=\"table_checkbox\">\r\n            <Checkbox color=\"primary\"  checked={row.isSelected} /></TableCell>);\r\n    }\r\n\r\n\r\n    let tableSearchContent = ( props.configShop.searchData.map((row, key) => {\r\n        return (<TableRow className={row.isSelected ? 'active' : null}\r\n                          onClick={()=>{buyEventHandler(row);  checkBoxHandler(row)}}\r\n                          key={key}>\r\n            {isCheckboxesActive ? tableCheckBox(row) : null}\r\n            <TableCell scope=\"row\">\r\n                <div className=\"shopObject color-white\">\r\n                    <div className=\"color-white\">{row.deviceObject.icon}{row.deviceObject.title}</div>\r\n                    <div className=\"color-white\">{row.osObject.icon}{row.osObject.version}</div>\r\n                    <div className=\"color-white\">{row.browserObject.icon}{row.browserObject.version}</div>\r\n                </div>\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">{row.screen}</TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">{row.userAgent}</TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">{row.videoCard}</TableCell>\r\n            <TableCell className=\"padding-sides-15 \">{row.created}</TableCell>\r\n            <TableCell className=\"padding-sides-15 \">$<b className=\"color-white\">{row.price}</b></TableCell>\r\n            <TableCell><div className=\"btn-buy\">BUY</div></TableCell>\r\n        </TableRow>);\r\n    }));\r\n    let tableContent = ( props.configShop.tableData.map((row, key) => {\r\n        return (<TableRow className={row.isSelected ? 'active' : null}\r\n                          onClick={()=>{buyEventHandler(row);  checkBoxHandler(row)}}\r\n                          key={key}>\r\n            {isCheckboxesActive ? tableCheckBox(row) : null}\r\n            <TableCell scope=\"row\">\r\n                <div className=\"shopObject color-white\">\r\n                    <div className=\"color-white\">{row.deviceObject.icon}{row.deviceObject.title}</div>\r\n                    <div className=\"color-white\">{row.osObject.icon}{row.osObject.version}</div>\r\n                    <div className=\"color-white\">{row.browserObject.icon}{row.browserObject.version}</div>\r\n                </div>\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">{row.screen}</TableCell>\r\n            <TableCell className=\"padding-sides-5 color-white\">{row.userAgent}</TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">{row.videoCard}</TableCell>\r\n            <TableCell className=\"padding-sides-20\">{row.created}</TableCell>\r\n            <TableCell className=\"padding-sides-15 \">$<b className=\"color-white\">{row.price}</b></TableCell>\r\n            <TableCell><div className=\"btn-buy\">BUY</div></TableCell>\r\n        </TableRow>);\r\n    }));\r\n\r\n\r\n\r\n    return (<div className=\"сustomStyle\">\r\n        <div className=\"filterPanel\">\r\n            <div>\r\n                <FormControl variant=\"filled\" className='w160 custom_label'>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">Device</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-filled-label\"\r\n                        value={props.configShop.currentSort.device}\r\n                        onChange={(e)=>{deviceEventHandler(e)}}>\r\n                        {props.configShop.sort.device.map((i, key) => {\r\n                            return (<MenuItem key={key} value={i.title}>{i.icon}{i.title}</MenuItem>);\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <div className=\"filterPanel__doubled\">\r\n                <FormControl variant=\"filled\" className='w160 custom_label'>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">OS</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-filled-label\"\r\n                        value={props.configShop.currentSort.os}\r\n                        onChange={(e)=>{osEventHandler(e)}}>\r\n\r\n\r\n                        {props.configShop.sort.os.map((i, key) => {\r\n\r\n                            return (<MenuItem key={key} value={i.title}>{i.icon}{i.title}</MenuItem>);\r\n\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"filled\" className='w118'>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">Version</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-filled-label\"\r\n                        value={props.configShop.currentSort.osVersion}\r\n                        onChange={(e)=>{osVersionsEventHandler(e)}}>\r\n\r\n                        {props.configShop.sort.os.map((i) => {\r\n                            if(i.title === props.configShop.currentSort.os){\r\n                                return i.version.map((version, key) => {\r\n                                    return (<MenuItem key={key} value={version}>{version}</MenuItem>);\r\n                                });\r\n                            }\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n\r\n            <div className=\"filterPanel__doubled\">\r\n                <FormControl variant=\"filled\" className='w160 custom_label'>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">Browser</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-filled-label\"\r\n                        value={props.configShop.currentSort.browser}\r\n                        onChange={(e)=>{browserEventHandler(e)}}>\r\n\r\n                        {props.configShop.sort.browser.map((i, key) => {\r\n\r\n                            return (<MenuItem key={key} value={i.title}>{i.icon}{i.title}</MenuItem>);\r\n\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"filled\" className='w118'>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">Version</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-filled-label\"\r\n                        value={props.configShop.currentSort.browserVersion}\r\n                        onChange={(e)=>{browserVersionsEventHandler(e)}}>\r\n\r\n                        {props.configShop.sort.browser.map((i) => {\r\n                            if(i.title === props.configShop.currentSort.browser){\r\n                                return i.version.map((version, key) => {\r\n                                    return (<MenuItem key={key} value={version}>{version}</MenuItem>);\r\n                                });\r\n                            }\r\n                        })}\r\n\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n            <TextField\r\n                variant=\"filled\"\r\n                fullWidth\r\n                className=\"search_area\"\r\n                placeholder=\"Search\"\r\n                value={searchValue}\r\n                onChange={(e)=>{searchEventHandler(e)}}>\r\n\r\n\r\n            </TextField>\r\n            <div className=\"search_additional_components\">\r\n                <div className=\"calendar\">{IconPack.searchComponents.calendar}</div>\r\n                <div>{IconPack.searchComponents.filter}</div>\r\n            </div>\r\n        </div>\r\n            <Table className=\"shopTable configTable\">\r\n                <TableHead>\r\n                    <TableRow>{isCheckboxesActive ? tableCheckBox('all', null) : null }\r\n                        <TableCell className=\"w275\">Device, OS, Browser</TableCell>\r\n                        <TableCell className=\"padding-sides-10 w100\">Screen</TableCell>\r\n                        <TableCell className=\"padding-sides-5\">Useragent</TableCell>\r\n                        <TableCell className=\"padding-sides-10\">Videocard</TableCell>\r\n                        <TableCell className=\"w125 padding-sides-15 text-align-right td-date\"> {IconPack.tableIcons.date} Created</TableCell>\r\n                        <TableCell className=\"w75 padding-sides-15\">Price</TableCell>\r\n                        <TableCell className=\"w60\"></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>{ isSearchActive ? tableSearchContent : tableContent }</TableBody>\r\n            </Table>\r\n    </div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    configShop: state.configShop.configShop,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDeviceFilter: (prop) => dispatch(setDeviceFilter(prop)),\r\n        updateData: () => dispatch(updateData()),\r\n        setOsFilter: (prop) => dispatch(setOsFilter(prop)),\r\n        setOsVersionFilter: (prop) => dispatch(setOsVersionFilter(prop)),\r\n        setBrowserFilter: (prop) => dispatch(setBrowserFilter(prop)),\r\n        setBrowserVersionFilter: (prop) => dispatch(setBrowserVersionFilter(prop)),\r\n        searchData: (prop) => dispatch(searchData(prop)),\r\n        selectItem: (prop) => dispatch(selectItem(prop)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\r\n\r\n","import React, {Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsManager from './../TabsManager/TabsManager';\r\nimport ConfigAlert from './ConfigAlert/ConfigAlert';\r\nimport Shop from './Shop/shop';\r\n\r\n\r\n\r\nconst ConfigShop = (props) => {\r\n\r\n    let tabs = [\r\n        {name : 'Shop', link: '/config-shop'},\r\n        {name : 'Purchased', link: '/purchased'},\r\n    ];\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <TabsManager data={tabs} license={props.licenses} user={props.currentUser} licenseBalance={true}/>\r\n\r\n            <div className=\"dashboard-content\">\r\n\r\n                <Shop />\r\n\r\n            </div>\r\n\r\n            <ConfigAlert />\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    licenses: state.licenses.licenses,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(ConfigShop);\r\n","import React from 'react';\r\nimport {searchData} from \"../../../redux/config-purchased/config.actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ConfigAlert = (props) => {\r\n\r\n\r\n        let summ = null;\r\n        let counter = 0;\r\n\r\n        {props.configPurchased.selectedData.map((i, key) => {\r\n            if(i) {\r\n                counter++;\r\n                summ = summ + i.price\r\n            }\r\n\r\n        })}\r\n\r\n        if(summ) {\r\n            return (<div className=\"table_action_bar\">\r\n                <div className=\"btn btn--transparent btn--cancel\">Cancel</div>\r\n                <div>\r\n                <div className=\"table_action_bar__info\">{counter} Selected for <b>${summ}</b></div>\r\n                <div className=\"btn btn--blue\">USE SELECTED</div>\r\n                </div>\r\n                </div>);\r\n        }else {\r\n            return null;\r\n        }\r\n\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    configPurchased: state.configPurchased.configShop,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchData: (prop) => dispatch(searchData(prop)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigAlert);","import { configTypes} from './config.types'\r\n\r\nexport const setDeviceFilter = type => ({\r\n  type: configTypes.SET_DEVICE_FILTER,\r\n  payload: type\r\n});\r\n\r\nexport const setOsFilter = type => ({\r\n  type: configTypes.SET_OS_FILTER,\r\n  payload: type\r\n});\r\n\r\nexport const setOsVersionFilter = (version) => ({\r\n  type: configTypes.SET_OS_VERSION_FILTER,\r\n  payload: version\r\n});\r\n\r\nexport const setBrowserFilter = type => ({\r\n  type: configTypes.SET_BROWSER_FILTER,\r\n  payload: type\r\n});\r\n\r\nexport const setBrowserVersionFilter = type => ({\r\n  type: configTypes.SET_BROWSER_VERSION_FILTER,\r\n  payload: type\r\n});\r\n\r\n\r\nexport const updateData = () => ({\r\n  type: configTypes.UPDATE_DATA,\r\n\r\n});\r\nexport const searchData = value => ({\r\n  type: configTypes.SEARCH_DATA,\r\n  payload: value\r\n});\r\n\r\nexport const selectItem = value => ({\r\n  type: configTypes.SELECT_ITEM,\r\n  payload: value\r\n});\r\nexport const unselectItem = value => ({\r\n  type: configTypes.UNSELECT_ITEM,\r\n  payload: value\r\n});","import React, { useState, useEffect } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport ConfigLimits from \"../../TableComponents/ConfigLimits/ConfigLimits\";\r\nimport DaysLeft from \"../../TableComponents/DaysLeft/DaysLeft\";\r\nimport {connect} from \"react-redux\";\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { setDeviceFilter, setOsFilter, setOsVersionFilter, setBrowserFilter, setBrowserVersionFilter, updateData, selectItem, searchData } from \"../../../redux/config-shop/config.actions\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport { IconPack } from \"../../../Images/IconPack\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\n\r\nconst Purchased = (props) => {\r\n\r\n    useEffect(() => {\r\n        props.setDeviceFilter('Desktop');\r\n        props.setOsFilter('Windows');\r\n        props.updateData();\r\n    }, []);\r\n    const [searchValue, setSearch] = React.useState('');\r\n\r\n    const [isSearchActive, setSearchActive] = React.useState(false);\r\n    const [isCheckboxesActive, setCheckboxesActive] = React.useState(true);\r\n\r\n    const searchEventHandler = (e) => {\r\n\r\n        if(e.target.value != 0) {\r\n            setSearch(e.target.value);\r\n            props.searchData(e.target.value);\r\n            setSearchActive(true)\r\n        }else {\r\n            setSearch(e.target.value);\r\n            setSearchActive(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const deviceEventHandler = (e) => {\r\n        props.setDeviceFilter(e.target.value);\r\n        props.updateData();\r\n    }\r\n    const osEventHandler = (e) => {\r\n        props.setOsFilter(e.target.value);\r\n\r\n        let currentIndex = props.configPurchased.sort.os.find((obj)=> {\r\n                return obj.title === e.target.value\r\n        });\r\n        props.setOsVersionFilter(currentIndex.version[0].toString());\r\n        props.updateData();\r\n    }\r\n    const osVersionsEventHandler = (e) => {\r\n        props.setOsVersionFilter(e.target.value);\r\n        props.updateData();\r\n    }\r\n\r\n    const browserEventHandler = (e) => {\r\n        props.setBrowserFilter(e.target.value);\r\n\r\n        let currentIndex = props.configPurchased.sort.browser.find((obj)=> {\r\n            return obj.title === e.target.value\r\n        });\r\n\r\n        props.setBrowserVersionFilter(currentIndex.version[0].toString());\r\n        props.updateData();\r\n    }\r\n    const browserVersionsEventHandler = (e) => {\r\n        props.setBrowserVersionFilter(e.target.value);\r\n        props.updateData();\r\n    }\r\n\r\n    const buyEventHandler = (dataObj) => {\r\n\r\n        setCheckboxesActive(true)\r\n    }\r\n    const checkBoxHandler = (data, value) => {\r\n\r\n        props.selectItem(data);\r\n    }\r\n\r\n\r\n\r\n    const tableCheckBox = (row) => {\r\n        return (<TableCell scope=\"row\" className=\"table_checkbox\">\r\n                <Checkbox  color=\"primary\"  checked={row.isSelected} /></TableCell>);\r\n    }\r\n\r\n\r\n    let tableSearchContent = ( props.configPurchased.searchData.map((row, key) => {\r\n        return (<TableRow className={row.isSelected ? 'active' : null}\r\n                          onClick={()=>{buyEventHandler(row);  checkBoxHandler(row)}}\r\n                          key={key}>\r\n            {isCheckboxesActive ? tableCheckBox(row) : null}\r\n            <TableCell scope=\"row\">\r\n                <div className=\"shopObject color-white\">\r\n                    <div className=\"color-white\">{row.deviceObject.icon}{row.deviceObject.title}</div>\r\n                    <div className=\"color-white\">{row.osObject.icon}{row.osObject.version}</div>\r\n                    <div className=\"color-white\">{row.browserObject.icon}{row.browserObject.version}</div>\r\n                </div>\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">{row.screen}</TableCell>\r\n            <TableCell className=\"padding-sides-15 color-white\">{row.userAgent}</TableCell>\r\n            <TableCell className=\"padding-sides-15 color-white\">{row.videoCard}</TableCell>\r\n            <TableCell className=\"padding-sides-15\">{row.created}</TableCell>\r\n            <TableCell className=\"padding-sides-0 icon-inside\"><div className=\"align-items-baseline\">{IconPack.userIcons.forTable} Lionel Messi</div></TableCell>\r\n            <TableCell className=\"padding-sides-15 \">$<b className=\"color-white\">{row.price}</b></TableCell>\r\n            <TableCell><div className=\"btn-buy\">USE</div></TableCell>\r\n        </TableRow>);\r\n        }));\r\n    let tableContent = ( props.configPurchased.tableData.map((row, key) => {\r\n                return (<TableRow className={row.isSelected ? 'active' : null}\r\n                                  onClick={()=>{buyEventHandler(row);  checkBoxHandler(row)}}\r\n                                  key={key}>\r\n                    {isCheckboxesActive ? tableCheckBox(row) : null}\r\n                        <TableCell scope=\"row\">\r\n                            <div className=\"shopObject color-white\">\r\n                                <div className=\"color-white\">{row.deviceObject.icon}{row.deviceObject.title}</div>\r\n                                <div className=\"color-white\">{row.osObject.icon}{row.osObject.version}</div>\r\n                                <div className=\"color-white\">{row.browserObject.icon}{row.browserObject.version}</div>\r\n                            </div>\r\n                        </TableCell>\r\n                        <TableCell className=\"padding-sides-10 color-white\">{row.screen}</TableCell>\r\n                        <TableCell className=\"padding-sides-15 color-white\">{row.userAgent}</TableCell>\r\n                        <TableCell className=\"padding-sides-15 color-white\">{row.videoCard}</TableCell>\r\n                        <TableCell className=\"padding-sides-25 text-align-right\">{row.created}</TableCell>\r\n                        <TableCell className=\"padding-sides-0 icon-inside\"><div className=\"align-items-baseline\">{IconPack.userIcons.forTable} Lionel Messi</div></TableCell>\r\n                        <TableCell className=\"padding-sides-15 \">$<b className=\"color-white\">{row.price}</b></TableCell>\r\n                        <TableCell><div className=\"btn-buy\">USE</div></TableCell>\r\n                    </TableRow>);\r\n            }));\r\n\r\n\r\n\r\n    return (<div className=\"сustomStyle\">\r\n            <div className=\"filterPanel\">\r\n                <div>\r\n                <FormControl variant=\"filled\" className='w160 custom_label'>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">Device</InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-filled-label\"\r\n                        value={props.configPurchased.currentSort.device}\r\n                        onChange={(e)=>{deviceEventHandler(e)}}>\r\n                        {props.configPurchased.sort.device.map((i, key) => {\r\n                            return (<MenuItem key={key} value={i.title}>{i.icon}{i.title}</MenuItem>);\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n                </div>\r\n                <div className=\"filterPanel__doubled\">\r\n                    <FormControl variant=\"filled\" className='w160 custom_label'>\r\n                        <InputLabel id=\"demo-simple-select-filled-label\">OS</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            value={props.configPurchased.currentSort.os}\r\n                            onChange={(e)=>{osEventHandler(e)}}>\r\n\r\n\r\n                            {props.configPurchased.sort.os.map((i, key) => {\r\n\r\n                                 return (<MenuItem key={key} value={i.title}>{i.icon}{i.title}</MenuItem>);\r\n\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl variant=\"filled\" className='w118'>\r\n                        <InputLabel id=\"demo-simple-select-filled-label\">Version</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            value={props.configPurchased.currentSort.osVersion}\r\n                            onChange={(e)=>{osVersionsEventHandler(e)}}>\r\n\r\n                            {props.configPurchased.sort.os.map((i) => {\r\n                                if(i.title === props.configPurchased.currentSort.os){\r\n                                    return i.version.map((version, key) => {\r\n                                        return (<MenuItem key={key} value={version}>{version}</MenuItem>);\r\n                                    });\r\n                                }\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n\r\n                <div className=\"filterPanel__doubled\">\r\n                    <FormControl variant=\"filled\" className='w160 custom_label'>\r\n                        <InputLabel id=\"demo-simple-select-filled-label\">Browser</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            value={props.configPurchased.currentSort.browser}\r\n                            onChange={(e)=>{browserEventHandler(e)}}>\r\n\r\n                            {props.configPurchased.sort.browser.map((i, key) => {\r\n\r\n                                return (<MenuItem key={key} value={i.title}>{i.icon}{i.title}</MenuItem>);\r\n\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl variant=\"filled\" className='w118'>\r\n                        <InputLabel id=\"demo-simple-select-filled-label\">Version</InputLabel>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            value={props.configPurchased.currentSort.browserVersion}\r\n                            onChange={(e)=>{browserVersionsEventHandler(e)}}>\r\n\r\n                            {props.configPurchased.sort.browser.map((i) => {\r\n                                if(i.title === props.configPurchased.currentSort.browser){\r\n                                    return i.version.map((version, key) => {\r\n                                        return (<MenuItem key={key} value={version}>{version}</MenuItem>);\r\n                                    });\r\n                                }\r\n                            })}\r\n\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    className=\"search_area\"\r\n                    placeholder=\"Search\"\r\n\r\n                    value={searchValue}\r\n                    onChange={(e)=>{searchEventHandler(e)}}>\r\n\r\n\r\n                </TextField>\r\n                <div className=\"search_additional_components\">\r\n                    <div className=\"calendar\">{IconPack.searchComponents.calendar}</div>\r\n                    <div>{IconPack.searchComponents.filter}</div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <Table className=\"shopTable configTable\">\r\n                    <TableHead>\r\n                        <TableRow>{isCheckboxesActive ? tableCheckBox('all', null) : null }<TableCell className=\"w225\">Device, OS, Browser</TableCell>\r\n                            <TableCell className=\"padding-sides-10 w100\">Screen</TableCell>\r\n                            <TableCell className=\"padding-sides-5\">Useragent</TableCell>\r\n                            <TableCell className=\"padding-sides-10\">Videocard</TableCell>\r\n                            <TableCell className=\"w150 padding-sides-25 text-align-right\">Created</TableCell>\r\n                            <TableCell className=\"w125 padding-sides-0\">Buyer nickname</TableCell>\r\n                            <TableCell className=\"w75 padding-sides-20\">Price</TableCell>\r\n                            <TableCell className=\"w60\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>{ isSearchActive ? tableSearchContent : tableContent }</TableBody>\r\n                </Table>\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    configPurchased: state.configPurchased.configShop,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDeviceFilter: (prop) => dispatch(setDeviceFilter(prop)),\r\n        updateData: () => dispatch(updateData()),\r\n        setOsFilter: (prop) => dispatch(setOsFilter(prop)),\r\n        setOsVersionFilter: (prop) => dispatch(setOsVersionFilter(prop)),\r\n        setBrowserFilter: (prop) => dispatch(setBrowserFilter(prop)),\r\n        setBrowserVersionFilter: (prop) => dispatch(setBrowserVersionFilter(prop)),\r\n        searchData: (prop) => dispatch(searchData(prop)),\r\n        selectItem: (prop) => dispatch(selectItem(prop)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Purchased);\r\n\r\n","import React, {Fragment} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TabsManager from './../TabsManager/TabsManager';\r\nimport PurchasedAlert from './PurchasedAlert/ConfigAlert';\r\nimport Purchased from './Purchased/purchased';\r\n\r\n\r\nconst ConfigPurchased = (props) => {\r\n\r\n    let tabs = [\r\n        {name : 'Shop', link: '/config-shop'},\r\n        {name : 'Purchased', link: '/purchased'},\r\n    ];\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <TabsManager data={tabs} license={props.licenses} user={props.currentUser} licenseBalance={true} />\r\n\r\n            <div className=\"dashboard-content\">\r\n\r\n                <Purchased />\r\n\r\n            </div>\r\n\r\n            <PurchasedAlert />\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    licenses: state.licenses.licenses,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(ConfigPurchased);\r\n","import React, {Fragment} from 'react';\r\nimport TabsManager from \"../../TabsManager/TabsManager\";\r\nimport TransactionsTable from \"../Transactions/TransactionsTable/TransactionsTable\";\r\nimport {setNewEmailAuthModal, setChangePasswordAuthModal, setResetPassAuthModal, setSignInAuthModal, setSignUpAuthModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Documentation = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"dashboard-content\">\r\n                <h2 onClick={()=>{props.setResetPassAuthModal(true)}}>resetPass</h2>\r\n                <h2 onClick={()=>{props.setNewEmailAuthModal(true)}}>setNewEmail</h2>\r\n                <h2 onClick={()=>{props.setChangePasswordAuthModal(true)}}>setNewPassword</h2>\r\n                <h2 onClick={()=>{props.setSignInAuthModal(true)}}>signIn</h2>\r\n                <h2 onClick={()=>{props.setSignUpAuthModal(true)}}>signUp</h2>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setNewEmailAuthModal: (bool) => dispatch(setNewEmailAuthModal(bool)),\r\n        setChangePasswordAuthModal: (bool) => dispatch(setChangePasswordAuthModal(bool)),\r\n        setResetPassAuthModal: (bool) => dispatch(setResetPassAuthModal(bool)),\r\n        setSignInAuthModal: (bool) => dispatch(setSignInAuthModal(bool)),\r\n        setSignUpAuthModal: (bool) => dispatch(setSignUpAuthModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Documentation);","import React from \"react\";\r\n\r\nimport {Route} from \"react-router-dom\";\r\n\r\nimport DefaultComponent from \"../defaultComponent/DefaultComponent\";\r\n\r\nimport Licenses from \"./../Licenses/Licenses\";\r\nimport LicensesNew from \"./../Licenses/LicensesNew/LicensesNew\";\r\nimport Installer from \"./Installer/Installer\";\r\nimport Operations from \"./Operations/Operations\";\r\nimport Transactions from \"./Transactions/Transactions\";\r\n\r\nimport Profile from \"./Profile/Profile\";\r\nimport Tickets from \"./Tickets/Tickets\";\r\nimport NewTicket from \"./NewTicket/NewTicket\";\r\n\r\nimport Deals from \"./Deals/Deals\";\r\nimport Faq from \"./Faq/Faq\";\r\nimport NewDeal from \"./NewDeal/NewDeal\";\r\nimport ConfigShop from \"../ConfigShop/ConfigShop\";\r\nimport ConfigPurchased from \"../ConfigShop/ConfigPurchased\";\r\nimport DocumentationComponent from'./Documentation/Documentation';\r\n\r\n\r\nimport './style.scss';\r\n\r\nconst DashBoard = () => {\r\n\r\n    const userId = 1234567890;\r\n    const licensePath = '/licenses/' + userId;\r\n\r\n\r\n    return (\r\n        <div className='dashboard'>\r\n\r\n            <Route path={licensePath+'/activity'} render={() => <Licenses activeTab='activity' />} />\r\n            <Route path={licensePath+'/costs'} render={() => <Licenses activeTab='costs'/>} />\r\n            <Route path={licensePath+'/users'} render={() => <Licenses activeTab='users'/>} />\r\n            <Route path={'/licenses/new'} render={() => <LicensesNew />} />\r\n\r\n            <Route path='/def' render={() => <DefaultComponent page='Default' />} />\r\n\r\n            <Route path='/config-shop' render={() => <ConfigShop activeTab='config-shop'/>} />\r\n            <Route path='/purchased' render={() => <ConfigPurchased activeTab='purchased'/>} />\r\n\r\n\r\n\r\n            <Route path='/installer' render={() => <Installer />} />\r\n            <Route path='/general' render={() => <Faq />} />\r\n\r\n            <Route path='/tickets' render={() => <Tickets />} />\r\n            <Route path='/new-ticket' render={() => <NewTicket />} />\r\n\r\n\r\n            <Route path='/deals' render={ () => <Deals /> } />\r\n            <Route path='/new-deal' render={ () => <NewDeal /> } />\r\n\r\n            <Route path='/profile' render={() => <Profile page='PROFILE' />} />\r\n\r\n            <Route path='/operations' render={() => <Operations />} />\r\n            <Route path='/transactions' render={() => <Transactions />} />\r\n\r\n            <Route path='/documentation' render={() => <DocumentationComponent />} />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashBoard;\r\n"],"sourceRoot":""}