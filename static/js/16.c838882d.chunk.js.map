{"version":3,"sources":["components/Licenses/Invite/CorporateInvite.jsx","redux/licenses/corporate/invite/invite.actions.js"],"names":["connect","state","inviteData","corporateLicenseInvite","invite","dispatch","setNewValueForInviteStoreItem","item","itemValue","id","type","inviteTypes","SET_NEW_VALUE_INVITE_FOR_STORE_ITEM","payload","createInviteItem","object","CREATE_INVITE_ITEM","deleteInviteItem","DELETE_INVITE_ITEM","props","getRowItem","itemData","TableRow","className","fullWidth","value","login","onChange","e","target","ticketID","variant","newLogin","disabled","password","nickname","telegram","comment","store","length","Button","onClick","IconPack","buttons","minus","reducerStore","reducerDefData","defValues","Date","newObject","addHandler","plus","Table","TableHead","TableBody","map"],"mappings":"mQA+IeA,uBAXS,SAACC,GAAD,MAAY,CAChCC,WAAYD,EAAME,uBAAuBC,WAGlB,SAACC,GACxB,MAAO,CACHC,8BAA+B,SAACC,EAAMC,EAAWC,GAAlB,OAAyBJ,ECvInB,SAAEE,EAAMC,EAAWC,GAAnB,MAA4B,CACrEC,KAAMC,IAAYC,oCAClBC,QAAS,CAACN,OAAMC,YAAWC,ODqI0CH,CAA8BC,EAAMC,EAAWC,KAChHK,iBAAkB,SAACC,GAAD,OAAYV,ECnIN,SAACU,GAAD,MAAa,CACzCL,KAAMC,IAAYK,mBAClBH,QAASE,GDiIkCD,CAAiBC,KACxDE,iBAAkB,SAAER,GAAF,OAAUJ,EC/HJ,SAACI,GAAD,MAAS,CACrCC,KAAMC,IAAYO,mBAClBL,QAASJ,GD6HgCQ,CAAkBR,QAGhDT,EA5HS,SAACmB,GAGrB,IAoBMC,EAAa,SAACC,GAChB,OAAQ,kBAACC,EAAA,EAAD,CAAUC,UAAU,cACxB,kBAAC,IAAD,CAAWA,UAAU,gCACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOJ,EAASK,MAChBC,SAAU,SAACC,GAAMT,EAAMb,8BAA8B,QAASsB,EAAEC,OAAOJ,MAAOJ,EAASS,WACvFC,QAAQ,YAIhB,kBAAC,IAAD,CAAWR,UAAU,gCACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAO,KAAOJ,EAASW,SACvBL,SAAU,SAACC,GAAMT,EAAMb,8BAA8B,WAAYsB,EAAEC,OAAOJ,MAAOJ,EAASS,WAC1FC,QAAQ,SACRE,UAAQ,KAGhB,kBAAC,IAAD,CAAWV,UAAU,gCACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOJ,EAASa,SAChBP,SAAU,SAACC,GAAMT,EAAMb,8BAA8B,WAAYsB,EAAEC,OAAOJ,MAAOJ,EAASS,WAC1FC,QAAQ,YAGhB,kBAAC,IAAD,CAAWR,UAAU,gCACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOJ,EAASc,SAChBR,SAAU,SAACC,GAAMT,EAAMb,8BAA8B,WAAYsB,EAAEC,OAAOJ,MAAOJ,EAASS,WAC1FC,QAAQ,YAGhB,kBAAC,IAAD,CAAWR,UAAU,+BACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOJ,EAASe,SAChBT,SAAU,SAACC,GAAMT,EAAMb,8BAA8B,WAAYsB,EAAEC,OAAOJ,MAAOJ,EAASS,WAC1FC,QAAQ,YAGhB,kBAAC,IAAD,CAAWR,UAAU,+BACjB,kBAAC,IAAD,CACIC,WAAS,EACTC,MAAOJ,EAASgB,QAChBV,SAAU,SAACC,GAAMT,EAAMb,8BAA8B,UAAWsB,EAAEC,OAAOJ,MAAOJ,EAASS,WACzFC,QAAQ,SACRR,UAAU,SAEd,yBAAKA,UAAU,8BACVJ,EAAMjB,WAAWoC,MAAMC,OAAS,EAAK,kBAACC,EAAA,EAAD,CAAQjB,UAAU,aAAakB,QAAS,WAAKtB,EAAMF,iBAAiBI,EAASS,YAAaY,IAASC,QAAQC,OAAmB,KACpK,kBAACJ,EAAA,EAAD,CAAQjB,UAAU,aAAakB,QAAS,YA1ErC,WACf,IAAMI,EAAgB1B,EAAMjB,WAAWoC,MACjCQ,EAAkB3B,EAAMjB,WAAW6C,UACrCjB,GAAa,IAAIkB,KAGjBC,EAAY,CACZvB,MAAOmB,EAAaA,EAAaN,OAAO,GAAGb,MAAQ,EACnDM,SAAUa,EAAaA,EAAaN,OAAO,GAAGb,MAAQ,EACtDQ,SAAUY,EAAeZ,SACzBC,SAAUW,EAAeX,SACzBC,SAAUU,EAAeV,SACzBC,QAASS,EAAeT,QACxBP,SAAUA,GAGdX,EAAML,iBAAiBmC,GA0DkCC,KAAgBR,IAASC,QAAQQ,UAS9F,OACI,yBAAK5B,UAAU,oBACX,yBAAKA,UAAU,cACX,uBAAGA,UAAU,eAAb,wIACA,0BAAMA,UAAU,uBAAhB,SAEJ,kBAAC6B,EAAA,EAAD,CAAO7B,UAAU,eACb,kBAAC8B,EAAA,EAAD,KACI,kBAAC/B,EAAA,EAAD,KACI,kBAAC,IAAD,CAAWC,UAAU,qBAArB,iBACA,kBAAC,IAAD,CAAWA,UAAU,qBAArB,aACA,kBAAC,IAAD,CAAWA,UAAU,qBAArB,YACA,kBAAC,IAAD,CAAWA,UAAU,oBAArB,YACA,kBAAC,IAAD,CAAWA,UAAU,oBAArB,YACA,kBAAC,IAAD,CAAWA,UAAU,yBAArB,8BAGR,kBAAC+B,EAAA,EAAD,CAAW/B,UAAU,YAChBJ,EAAMjB,WAAWoC,MAAMiB,KAAI,SAAAlC,GACxB,OAAOD,EAAWC","file":"static/js/16.c838882d.chunk.js","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\r\nimport {\r\n    setNewValueForInviteStoreItem,\r\n    createInviteItem,\r\n    deleteInviteItem\r\n} from \"../../../redux/licenses/corporate/invite/invite.actions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst CorporateInvite = (props) => {\r\n\r\n\r\n    const addHandler = () => {\r\n        const reducerStore =  props.inviteData.store;\r\n        const reducerDefData =  props.inviteData.defValues;\r\n        let ticketID = + new Date();\r\n\r\n\r\n        let newObject = {\r\n            login: reducerStore[reducerStore.length-1].login + 1,\r\n            newLogin: reducerStore[reducerStore.length-1].login + 1,\r\n            password: reducerDefData.password,\r\n            nickname: reducerDefData.nickname,\r\n            telegram: reducerDefData.telegram,\r\n            comment: reducerDefData.comment,\r\n            ticketID: ticketID,\r\n        };\r\n\r\n        props.createInviteItem(newObject);\r\n    }\r\n\r\n\r\n    const getRowItem = (itemData) => {\r\n        return (<TableRow className=\"inputs-row\">\r\n            <TableCell className=\"padding-sides-10 color-white\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={itemData.login}\r\n                    onChange={(e)=> {props.setNewValueForInviteStoreItem('login', e.target.value, itemData.ticketID)}}\r\n                    variant=\"filled\"\r\n\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={'CU' + itemData.newLogin}\r\n                    onChange={(e)=> {props.setNewValueForInviteStoreItem('newLogin', e.target.value, itemData.ticketID)}}\r\n                    variant=\"filled\"\r\n                    disabled\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={itemData.password}\r\n                    onChange={(e)=> {props.setNewValueForInviteStoreItem('password', e.target.value, itemData.ticketID)}}\r\n                    variant=\"filled\"\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={itemData.nickname}\r\n                    onChange={(e)=> {props.setNewValueForInviteStoreItem('nickname', e.target.value, itemData.ticketID)}}\r\n                    variant=\"filled\"\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-grey\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={itemData.telegram}\r\n                    onChange={(e)=> {props.setNewValueForInviteStoreItem('telegram', e.target.value, itemData.ticketID)}}\r\n                    variant=\"filled\"\r\n                />\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-10 color-grey\">\r\n                <TextField\r\n                    fullWidth\r\n                    value={itemData.comment}\r\n                    onChange={(e)=> {props.setNewValueForInviteStoreItem('comment', e.target.value, itemData.ticketID)}}\r\n                    variant=\"filled\"\r\n                    className=\"w80p\"\r\n                />\r\n                <div className=\"generateTable__btnsWrapper\">\r\n                    {props.inviteData.store.length > 1 ? (<Button className=\"btn--table\" onClick={()=>{props.deleteInviteItem(itemData.ticketID)}}>{IconPack.buttons.minus}</Button>) : null }\r\n                    <Button className=\"btn--table\" onClick={()=>{addHandler()}}>{IconPack.buttons.plus}</Button>\r\n                </div>\r\n            </TableCell>\r\n        </TableRow>)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n            <div className=\"alertPanel\">\r\n                <p className=\"color-white\">The users listed below will be invited to join your license. You can only invite users with whom you have an agreement on migration.</p>\r\n                <span className=\"btn-text color-blue\">MORE</span>\r\n            </div>\r\n            <Table className=\"configTable\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className=\"padding-sides-20 \">Current login</TableCell>\r\n                        <TableCell className=\"padding-sides-10 \">New login</TableCell>\r\n                        <TableCell className=\"padding-sides-10 \">Password</TableCell>\r\n                        <TableCell className=\"padding-sides-10\">Nickname</TableCell>\r\n                        <TableCell className=\"padding-sides-10\">Telegram</TableCell>\r\n                        <TableCell className=\"padding-sides-10 w500\">Comment(role or more...)</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className=\"no-hover\">\r\n                    {props.inviteData.store.map(itemData => {\r\n                        return getRowItem(itemData);\r\n                    })}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inviteData: state.corporateLicenseInvite.invite,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setNewValueForInviteStoreItem: (item, itemValue, id) => dispatch(setNewValueForInviteStoreItem(item, itemValue, id)),\r\n        createInviteItem: (object) => dispatch(createInviteItem(object)),\r\n        deleteInviteItem: ( id ) => dispatch(deleteInviteItem( id )),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CorporateInvite);","import { inviteTypes} from './invite.types'\r\n\r\n\r\nexport const setNewValueForInviteStoreItem = ( item, itemValue, id ) => ({\r\n    type: inviteTypes.SET_NEW_VALUE_INVITE_FOR_STORE_ITEM,\r\n    payload: {item, itemValue, id}\r\n})\r\n\r\nexport const createInviteItem = (object) => ({\r\n    type: inviteTypes.CREATE_INVITE_ITEM,\r\n    payload: object\r\n})\r\n\r\nexport const deleteInviteItem = (id) => ({\r\n    type: inviteTypes.DELETE_INVITE_ITEM,\r\n    payload: id\r\n})"],"sourceRoot":""}