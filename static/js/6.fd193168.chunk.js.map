{"version":3,"sources":["components/Licenses/Cost/CorporateCost.jsx"],"names":["connect","state","costsData","corporateLicenseCosts","costs","props","React","useState","searchValue","setSearchValue","itemHTML","i","key","className","amount","IconPack","userIcons","forTable","user","costAction","costDetail","licenseIcons","cog","boughtLeft","tbodyData","colspan","map","searchedData","filter","toLowerCase","includes","variant","fullWidth","placeholder","value","onChange","e","target","searchComponents","calendar","length"],"mappings":"uPAwIeA,uBALS,SAACC,GAAD,MAAY,CAChCC,UAAWD,EAAME,sBAAsBC,SAI5BJ,EA1HO,SAACK,GAAW,IAAD,EACSC,IAAMC,SAAS,IADxB,mBACtBC,EADsB,KACTC,EADS,KAkBvBC,EAAW,SAACC,EAAGC,GACjB,OAAY,kBAAC,IAAD,CAAUA,IAAKA,GACvB,kBAAC,IAAD,CAAWC,UAAU,yCAArB,IAA+DF,EAAEG,QACjE,kBAAC,IAAD,CAAWD,UAAU,gCAA+B,0BAAMA,UAAU,2CAA2CE,IAASC,UAAUC,UAAiBN,EAAEO,MACrJ,kBAAC,IAAD,CAAWL,UAAU,gCAAgCF,EAAEQ,YACvD,kBAAC,IAAD,CAAWN,UAAU,gCAAgCF,EAAES,WAAW,GAC9D,0BAAMP,UAAU,iDAAiDE,IAASM,aAAaC,IAAvF,IAA6FX,EAAES,WAAW,KAE9G,kBAAC,IAAD,CAAWP,UAAU,iDAAiDF,EAAEY,YACxE,kBAAC,IAAD,CAAWV,UAAU,+BAArB,qBAKJW,EAAa,oCACb,kBAAC,IAAD,CAAUX,UAAU,YAChB,kBAAC,IAAD,CAAWA,UAAU,+BAA+BY,QAAQ,KACxD,uBAAGZ,UAAU,eAAb,SACA,0BAAMA,UAAU,qBAAhB,aAIPR,EAAMH,UAAUwB,KAAI,SAACf,EAAGC,GACrB,OAAOF,EAASC,EAAGC,MAIvB,kBAAC,IAAD,CAAUC,UAAU,YAChB,kBAAC,IAAD,CAAWA,UAAU,+BAA+BY,QAAQ,KACxD,uBAAGZ,UAAU,eAAb,aACA,0BAAMA,UAAU,qBAAhB,aAIPR,EAAMH,UAAUwB,KAAI,SAACf,EAAGC,GACrB,OAAOF,EAASC,EAAGC,OAKvBe,EAAetB,EAAMH,UAAU0B,QAAO,SAAAjB,GAEtC,GAAIA,EAAEO,KAAKW,cAAcC,SAAStB,EAAYqB,gBAC1ClB,EAAEQ,WAAWU,cAAcC,SAAStB,EAAYqB,gBAChDlB,EAAES,WAAW,GAAGS,cAAcC,SAAStB,EAAYqB,gBACnDlB,EAAES,WAAW,GAAGS,cAAcC,SAAStB,EAAYqB,gBACnDlB,EAAEY,WAAWM,cAAcC,SAAStB,EAAYqB,eAEhD,OAAOlB,KAYf,OAPAgB,EAAeA,EAAaD,KAAI,SAACf,EAAGC,GAEhC,OAAOF,EAASC,EAAGC,MAMnB,yBAAKC,UAAU,oBACX,yBAAKA,UAAU,eAEX,kBAAC,IAAD,CACIkB,QAAQ,SACRC,WAAS,EACTnB,UAAU,cACVoB,YAAY,SACZC,MAAO1B,EACP2B,SAAU,SAACC,GAAK3B,EAAe2B,EAAEC,OAAOH,UAK5C,yBAAKrB,UAAU,gCACX,yBAAKA,UAAU,YAAYE,IAASuB,iBAAiBC,UACrD,6BAAMxB,IAASuB,iBAAiBV,UAGxC,kBAAC,IAAD,CAAOf,UAAU,eACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWA,UAAU,0CAArB,UACA,kBAAC,IAAD,CAAWA,UAAU,yBAArB,QACA,kBAAC,IAAD,CAAWA,UAAU,yBAArB,eACA,kBAAC,IAAD,CAAWA,UAAU,qBAArB,eACA,kBAAC,IAAD,CAAWA,UAAU,0CAArB,eACA,kBAAC,IAAD,CAAWA,UAAU,yBAArB,UAGR,kBAAC,IAAD,KACKL,EAAYgC,OAASb,EAAeH","file":"static/js/6.fd193168.chunk.js","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\r\n\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\n\r\nconst CorporateCost = (props) => {\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const prepearAmount = (amount, type) => {\r\n        switch (type) {\r\n            case 'loss':\r\n                return (\r\n                    <span className=\"red\">{amount}</span>)\r\n                break;\r\n            case 'profit':\r\n                return (<span className=\"green\">{amount}</span>)\r\n                break;\r\n            default:\r\n                return amount\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    const itemHTML = (i, key) => {\r\n        return  (   <TableRow key={key}>\r\n            <TableCell className=\"padding-sides-25 red text-align-right\">${i.amount}</TableCell>\r\n            <TableCell className=\"padding-sides-15 color-white\"><span className=\"icon-inside inline align-items-baseline\">{IconPack.userIcons.forTable}</span>{i.user}</TableCell>\r\n            <TableCell className=\"padding-sides-10 color-white\">{i.costAction}</TableCell>\r\n            <TableCell className=\"padding-sides-20 color-white\">{i.costDetail[0]}\r\n                <span className=\"ml-10 icon-inside inline align-items-baseline\">{IconPack.licenseIcons.cog} {i.costDetail[1]}</span>\r\n            </TableCell>\r\n            <TableCell className=\"padding-sides-20 color-white text-align-right\">{i.boughtLeft}</TableCell>\r\n            <TableCell className=\"padding-sides-15 color-grey\">3 Apr, 19:20:55</TableCell>\r\n        </TableRow>);\r\n    }\r\n\r\n\r\n    let tbodyData = (<>\r\n        <TableRow className=\"date-row\">\r\n            <TableCell className=\"padding-sides-20 color-white\" colspan=\"6\">\r\n                <b className=\"color-white\">Today</b>\r\n                <span className=\"color-grey inline\">April 3</span>\r\n            </TableCell>\r\n        </TableRow>\r\n\r\n        {props.costsData.map((i, key) => {\r\n            return itemHTML(i, key);\r\n        })}\r\n\r\n\r\n        <TableRow className=\"date-row\">\r\n            <TableCell className=\"padding-sides-20 color-white\" colspan=\"6\">\r\n                <b className=\"color-white\">Yesterday</b>\r\n                <span className=\"color-grey inline\">April 2</span>\r\n            </TableCell>\r\n        </TableRow>\r\n\r\n        {props.costsData.map((i, key) => {\r\n            return itemHTML(i, key);\r\n        })}\r\n        </>);\r\n\r\n\r\n    let searchedData = props.costsData.filter(i => {\r\n\r\n        if (i.user.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.costAction.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.costDetail[0].toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.costDetail[1].toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.boughtLeft.toLowerCase().includes(searchValue.toLowerCase())\r\n          ) {\r\n            return i\r\n        }\r\n\r\n    })\r\n\r\n    searchedData = searchedData.map((i, key) => {\r\n\r\n        return itemHTML(i, key);\r\n    });\r\n\r\n\r\n    /* active */\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n            <div className=\"filterPanel\">\r\n\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    fullWidth\r\n                    className=\"search_area\"\r\n                    placeholder=\"Search\"\r\n                    value={searchValue}\r\n                    onChange={(e)=>{setSearchValue(e.target.value)}}\r\n                >\r\n\r\n\r\n                </TextField>\r\n                <div className=\"search_additional_components\">\r\n                    <div className=\"calendar\">{IconPack.searchComponents.calendar}</div>\r\n                    <div>{IconPack.searchComponents.filter}</div>\r\n                </div>\r\n            </div>\r\n            <Table className=\"configTable\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className=\"padding-sides-25 w125 text-align-right\">Amount</TableCell>\r\n                        <TableCell className=\"padding-sides-15 w150\">User</TableCell>\r\n                        <TableCell className=\"padding-sides-10 w120\">Cost action</TableCell>\r\n                        <TableCell className=\"padding-sides-20 \">Cost detail</TableCell>\r\n                        <TableCell className=\"padding-sides-20 w125 text-align-right\">Bought left</TableCell>\r\n                        <TableCell className=\"padding-sides-15 w125\">Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {searchValue.length ? searchedData : tbodyData }\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    costsData: state.corporateLicenseCosts.costs,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(CorporateCost);"],"sourceRoot":""}