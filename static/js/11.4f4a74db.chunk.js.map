{"version":3,"sources":["redux/app/app.actions.js","redux/licenses/corporate/users/users.actions.js","../node_modules/@material-ui/core/utils/capitalize.js","../node_modules/@material-ui/core/Switch/Switch.js","../node_modules/@material-ui/core/internal/SwitchBase.js","../node_modules/@material-ui/core/FormControl/useFormControl.js","../node_modules/@material-ui/core/FormControl/FormControlContext.js","components/ModalWindows/LangDropdown/LangDropdown.jsx","components/ModalWindows/buyPersLicense/buyPersLicense.jsx","components/ModalWindows/buyCorpLicense/buyCorpLicense.jsx","components/ModalWindows/refillAccountBalance/refillAccountBalance.jsx","components/ModalWindows/refillLicenseBalance/refillLicenseBalance.jsx","components/ModalWindows/licenseDaysSetting/licenseDaysSetting.jsx","components/ModalWindows/changeEmail/ChangeEmail.jsx","components/ModalWindows/ChangePassword/ChangePassword.jsx","components/ModalWindows/changeTelegram/changeTelegram.jsx","components/ModalWindows/changeDeal/changeDeal.jsx","components/ModalWindows/autoRenewalSettings/autoRenewalSettings.jsx","components/ModalWindows/migrationToCorporate/migrationToCorporate.jsx","components/ModalWindows/setAccessRights/setAccessRights.jsx","components/ModalWindows/setAccessRightsForOneUser/setAccessRightsForOneUser.jsx","components/ModalWindows/authorizationData/authorizationData.jsx","components/ModalWindows/authorizationDataForOneUser/authorizationDataForOneUser.jsx","components/ModalWindows/ModalWindow.jsx"],"names":["setCurrentLanguage","lang","type","appTypes","SET_CURRENT_LANGUAGE","payload","setLanguageModal","bool","SET_LANGUAGE_MODAL","setAuthLanguageModal","SET_AUTH_LANGUAGE_MODAL","setAccessRightsModal","obj","SET_ACCESS_RIGHTS_MODAL","setAccessRightsForOneUserModal","SET_ACCESS_RIGHTS_FOR_ONE_USER_MODAL","setBuyPLicenseModal","SET_BUY_P_LICENSE_MODAL","setBuyCLicenseModal","SET_BUY_C_LICENSE_MODAL","setRefillBalanceModal","SET_REFILL_BALANCE_MODAL","setRefillLicenseModal","SET_REFILL_LICENSE_MODAL","setLicenseDaysSettingsModal","SET_LICENSE_DAYS_SETTINGS_MODAL","setChangeEmailModal","SET_CHANGE_EMAIL_MODAL","setChangePasswordlModal","SET_CHANGE_PASSWORD_MODAL","setChangeTelegramModal","SET_CHANGE_TELEGRAM_MODAL","setAutoRenewalModal","SET_AUTO_RENEWAL_MODAL","setMigrationModal","SET_MIGRATION_MODAL","setAuthorizationDataModal","SET_AUTHORIZATION_DATA_MODAL","setAuthorizationDataForOneUserModal","SET_AUTHORIZATION_DATA_FOR_ONE_USER_MODAL","setChangeDealModal","SET_CHANGE_DEAL_MODAL","setNewEmailAuthModal","SET_NEW_EMAIL_AUTHMODAL","setChangePasswordAuthModal","SET_CHANGE_PASSWORD_AUTHMODAL","setActivity","id","usersTypes","SET_ACTIVITY","setUsers","SET_USERS","setCosts","SET_COSTS","setDropdown","SET_DROPDOWN","setSelect","SET_SELECT","sortTableByType","SORT_TABLE_BY_TYPE","setAccessRights","SET_ACCESS_RIGHTS","setSelectForUsers","SET_SELECT_FOR_USERS","updateUsers","UPDATE_USERS","setDaysLeft","SET_DAYS_LEFT","setConfigLimit","SET_CONFIG_LIMIT","Object","defineProperty","exports","value","default","string","Error","_utils","formatMuiErrorMessage","charAt","toUpperCase","slice","require","_interopRequireWildcard","_interopRequireDefault","styles","_extends2","_objectWithoutProperties2","React","_clsx","_withStyles","_colorManipulator","_capitalize","_SwitchBase","theme","root","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","edgeStart","marginLeft","edgeEnd","marginRight","switchBase","top","left","color","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","checked","disabled","input","thumb","boxShadow","shadows","borderRadius","track","Switch","forwardRef","props","ref","classes","className","_props$color","_props$edge","edge","_props$size","size","other","icon","createElement","concat","checkedIcon","_default","name","_slicedToArray2","_useControlled3","_useFormControl","_IconButton","cursor","margin","SwitchBase","autoFocus","checkedProp","defaultChecked","disabledProp","inputProps","inputRef","onBlur","onChange","onFocus","readOnly","required","tabIndex","_useControlled","controlled","Boolean","state","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","component","role","undefined","event","newChecked","target","useContext","_FormControlContext","useFormControl","FormControlContext","createContext","connect","appState","appOptions","dispatch","val","currentLang","appLanguage","currentAppLanguage","langListClone","languagesInterface","langListContent","map","item","current","key","title","toString","onClick","e","newLangVal","src","alt","find","langObj","modals","languageDropdown","currentUser","user","history","useHistory","useState","buyPersLicense","data","value1","setValue1","value2","setValue2","viewBox","fill","xmlns","fillRule","clipRule","d","variant","fullWidth","select","label","MenuItem","rows","console","log","Slider","step","min","max","newValue","Button","push","buyCorpLicense","refillAccountBalance","refillLicenseBalance","usersTabData","corporateLicenseUsers","usersTab","currentData","assign","licenseDaysSettings","userOptions","balance","setBalance","spend","setSpendValue","spendClass","setSpendClass","daysLeft","daysValue","setDaysValue","IconPack","userIcons","forTable","toFixed","match","applyHandler","changeEmail","changePass","changeTelegram","amountComisionRate","changeDeal","userIcon","buyer","seller","amountToSend","amountToRecive","multiline","description","value3","setValue3","autoRenewal","migration","seesActivity","setSeesActivity","seesUsers","setSeesUsers","seesCosts","setSeesCosts","selectItemsArray","i","isSelected","length","newDataObj","currentUserObj","userObject","accessRightsForOneUser","useEffect","newDataObjString","creds","password","replace","navigator","clipboard","writeText","authorizationDataForOneUser","currentWindow","accessRights","authorizationData"],"mappings":"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","file":"static/js/11.4f4a74db.chunk.js","sourcesContent":["import { appTypes} from './app.types'\r\nimport {usersTypes} from \"../licenses/corporate/users/users.types\";\r\n\r\nexport const setCurrentLanguage = lang => ({\r\n  type: appTypes.SET_CURRENT_LANGUAGE,\r\n  payload: lang\r\n});\r\n\r\nexport const setDashboard = bool => ({\r\n  type: appTypes.SET_DASHBOARD,\r\n  payload: bool\r\n});\r\n\r\nexport const setLanguageModal = bool => ({\r\n  type: appTypes.SET_LANGUAGE_MODAL,\r\n  payload: bool\r\n});\r\n\r\nexport const setAuthLanguageModal = bool => ({\r\n  type: appTypes.SET_AUTH_LANGUAGE_MODAL,\r\n  payload: bool\r\n});\r\n\r\n\r\nexport const setAccessRightsModal = obj => ({\r\n  type: appTypes.SET_ACCESS_RIGHTS_MODAL,\r\n  payload: obj\r\n})\r\n\r\nexport const setAccessRightsForOneUserModal = obj => ({\r\n  type: appTypes.SET_ACCESS_RIGHTS_FOR_ONE_USER_MODAL,\r\n  payload: obj\r\n})\r\n\r\nexport const setBuyPLicenseModal = bool => ({\r\n  type: appTypes.SET_BUY_P_LICENSE_MODAL,\r\n  payload: bool\r\n})\r\nexport const setBuyCLicenseModal = bool => ({\r\n  type: appTypes.SET_BUY_C_LICENSE_MODAL,\r\n  payload: bool\r\n})\r\nexport const setRefillBalanceModal = bool => ({\r\n  type: appTypes.SET_REFILL_BALANCE_MODAL,\r\n  payload: bool\r\n})\r\nexport const setRefillLicenseModal = bool => ({\r\n  type: appTypes.SET_REFILL_LICENSE_MODAL,\r\n  payload: bool\r\n})\r\nexport const setLicenseDaysSettingsModal = obj => ({\r\n  type: appTypes.SET_LICENSE_DAYS_SETTINGS_MODAL,\r\n  payload: obj\r\n})\r\n\r\nexport const setChangeEmailModal = bool => ({\r\n  type: appTypes.SET_CHANGE_EMAIL_MODAL,\r\n  payload: bool\r\n})\r\n\r\nexport const setChangePasswordlModal = bool => ({\r\n  type: appTypes.SET_CHANGE_PASSWORD_MODAL,\r\n  payload: bool\r\n})\r\n\r\nexport const setChangeTelegramModal = bool => ({\r\n  type: appTypes.SET_CHANGE_TELEGRAM_MODAL,\r\n  payload: bool\r\n})\r\n\r\nexport const setAutoRenewalModal = bool => ({\r\n  type: appTypes.SET_AUTO_RENEWAL_MODAL,\r\n  payload: bool\r\n})\r\n\r\nexport const setMigrationModal = bool => ({\r\n  type: appTypes.SET_MIGRATION_MODAL,\r\n  payload: bool\r\n})\r\n\r\n\r\nexport const setAuthorizationDataModal =  obj  => ({\r\n  type: appTypes.SET_AUTHORIZATION_DATA_MODAL,\r\n  payload: obj\r\n})\r\n\r\nexport const setAuthorizationDataForOneUserModal =  obj  => ({\r\n  type: appTypes.SET_AUTHORIZATION_DATA_FOR_ONE_USER_MODAL,\r\n  payload: obj\r\n})\r\n\r\nexport const setChangeDealModal =  obj  => ({\r\n  type: appTypes.SET_CHANGE_DEAL_MODAL,\r\n  payload: obj\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const setNewEmailAuthModal = bool => ({\r\n  type: appTypes.SET_NEW_EMAIL_AUTHMODAL,\r\n  payload: bool\r\n})\r\nexport const setChangePasswordAuthModal = bool => ({\r\n  type: appTypes.SET_CHANGE_PASSWORD_AUTHMODAL,\r\n  payload: bool\r\n})\r\n\r\nexport const setResetPassAuthModal = bool => ({\r\n  type: appTypes.SET_RESET_PASS_AUTHMODAL,\r\n  payload: bool\r\n})\r\n\r\nexport const setSignInAuthModal = bool => ({\r\n  type: appTypes.SET_SIGNIN_AUTHMODAL,\r\n  payload: bool\r\n})\r\nexport const setSignUpAuthModal = bool => ({\r\n  type: appTypes.SET_SIGNUP_AUTHMODAL,\r\n  payload: bool\r\n})","import { usersTypes} from './users.types'\r\n\r\n\r\nexport const setActivity = ( bool, id ) => ({\r\n  type: usersTypes.SET_ACTIVITY,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const setUsers = ( bool, id ) => ({\r\n  type: usersTypes.SET_USERS,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const setCosts = ( bool, id ) => ({\r\n  type: usersTypes.SET_COSTS,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const setDropdown = ( bool, id ) => ({\r\n  type: usersTypes.SET_DROPDOWN,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const setSelect = ( bool, id ) => ({\r\n  type: usersTypes.SET_SELECT,\r\n  payload: {bool, id}\r\n})\r\n\r\nexport const sortTableByType = ( type ) => ({\r\n  type: usersTypes.SORT_TABLE_BY_TYPE,\r\n  payload: type\r\n})\r\n\r\nexport const setAccessRights = ( obj ) => ({\r\n  type: usersTypes.SET_ACCESS_RIGHTS,\r\n  payload: obj\r\n})\r\n\r\nexport const setSelectForUsers = ( bool ) => ({\r\n  type: usersTypes.SET_SELECT_FOR_USERS,\r\n  payload: bool\r\n})\r\n\r\nexport const updateUsers = ( obj ) => ({\r\n  type: usersTypes.UPDATE_USERS,\r\n  payload: obj\r\n})\r\n\r\nexport const setDaysLeft = ( obj ) => ({\r\n  type: usersTypes.SET_DAYS_LEFT,\r\n  payload: obj\r\n})\r\n\r\n\r\nexport const setConfigLimit = ( obj ) => ({\r\n  type: usersTypes.SET_CONFIG_LIMIT,\r\n  payload: obj\r\n})","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = capitalize;\n\nvar _utils = require(\"@material-ui/utils\");\n\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nfunction capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : (0, _utils.formatMuiErrorMessage)(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _colorManipulator = require(\"../styles/colorManipulator\");\n\nvar _capitalize = _interopRequireDefault(require(\"../utils/capitalize\"));\n\nvar _SwitchBase = _interopRequireDefault(require(\"../internal/SwitchBase\"));\n\n// @inheritedComponent IconButton\nvar styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: (0, _colorManipulator.fade)(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: (0, _colorManipulator.fade)(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\n\nexports.styles = styles;\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = (0, _objectWithoutProperties2.default)(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: (0, _clsx.default)(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat((0, _capitalize.default)(size))])\n  }, /*#__PURE__*/React.createElement(_SwitchBase.default, (0, _extends2.default)({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: (0, _clsx.default)(classes.switchBase, classes[\"color\".concat((0, _capitalize.default)(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: _propTypes.default.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: _propTypes.default.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: _propTypes.default.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: _propTypes.default.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: _propTypes.default.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: _utils.refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: _propTypes.default.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: _propTypes.default.any\n} : void 0;\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiSwitch'\n})(Switch);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _utils = require(\"@material-ui/utils\");\n\nvar _useControlled3 = _interopRequireDefault(require(\"../utils/useControlled\"));\n\nvar _useFormControl = _interopRequireDefault(require(\"../FormControl/useFormControl\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _IconButton = _interopRequireDefault(require(\"../IconButton\"));\n\nvar styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nexports.styles = styles;\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = (0, _objectWithoutProperties2.default)(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = (0, _useControlled3.default)({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = (0, _slicedToArray2.default)(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = (0, _useFormControl.default)();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(_IconButton.default, (0, _extends2.default)({\n    component: \"span\",\n    className: (0, _clsx.default)(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", (0, _extends2.default)({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: _propTypes.default.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: _propTypes.default.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: _propTypes.default.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: _propTypes.default.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: _propTypes.default.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: _propTypes.default.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: _utils.refType,\n\n  /*\n   * @ignore\n   */\n  name: _propTypes.default.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: _propTypes.default.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: _propTypes.default.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: _propTypes.default.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: _propTypes.default.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: _propTypes.default.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: _propTypes.default.any\n} : void 0;\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useFormControl;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _FormControlContext = _interopRequireDefault(require(\"./FormControlContext\"));\n\nfunction useFormControl() {\n  return React.useContext(_FormControlContext.default);\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFormControl = useFormControl;\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\n/**\n * @ignore - internal component.\n */\nvar FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nfunction useFormControl() {\n  return React.useContext(FormControlContext);\n}\n\nvar _default = FormControlContext;\nexports.default = _default;","import React, {Fragment} from 'react';\r\nimport {setCurrentLanguage, setLanguageModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst LangDropdown = (props) => {\r\n    let currentLang = props.appState.appLanguage.currentAppLanguage;\r\n    let langListClone = [...props.appState.appLanguage.languagesInterface];\r\n    let component = '';\r\n\r\n    const clickHandler = ( newLangVal ,e ) => {\r\n\r\n        props.setCurrentLanguage(newLangVal);\r\n        props.setLanguageModal(false);\r\n\r\n\r\n    };\r\n\r\n    let langListContent = langListClone.map((item)=>{\r\n        let current = '';\r\n        if(item.value === currentLang){\r\n            current = 'currentLang';\r\n        }\r\n        return (<div key={item.title.toString()} onClick={(e)=> { clickHandler(item.value, e) }} className={current}><img src={item.icon} alt=\"\"/> {item.title}</div>)\r\n    });\r\n    let currentLangObj = langListClone.find((langObj) => {\r\n        return langObj.value === currentLang;\r\n    });\r\n\r\n\r\n\r\n    if(props.appState.modals.languageDropdown) {\r\n        component = ( <div className=\"appLanguageDropdown\">\r\n            <div className=\"content\">\r\n                {langListContent}\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return component;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentLanguage: (val) => dispatch(setCurrentLanguage(val)),\r\n        setLanguageModal: (bool) => dispatch(setLanguageModal(bool))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LangDropdown);","import React, {Fragment} from 'react';\r\nimport {setBuyPLicenseModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst BuyPersLicense = (props) => {\r\n\r\n    let component = '';\r\n\r\n    let history = useHistory();\r\n\r\n    const clickHandler = ( newLangVal ,e ) => {\r\n        props.setCurrentLanguage(newLangVal);\r\n        props.setLanguageModal(false);\r\n\r\n    };\r\n    const [value1, setValue1] = React.useState(props.appState.modals.buyPersLicense.data);\r\n    const [value2, setValue2] = React.useState('From account balance');\r\n\r\n    const handleChange1 = (event, newValue) => {\r\n        if(newValue >= 1000) {\r\n            setValue1(newValue);\r\n        }else {\r\n            setValue1(1000)\r\n        }\r\n    };\r\n    const handleChange3 = (val) => {\r\n        console.log(val);\r\n        if(val >= 10000){\r\n            setValue1(10000);\r\n        }else if(val >= 1000) {\r\n            setValue1(val);\r\n            console.log();\r\n        }else {\r\n            setValue1(val > 1000 ? val : 1000)\r\n        }\r\n\r\n\r\n    };\r\n    const handleChange2 = (event) => {\r\n        setValue2(event.value);\r\n    };\r\n\r\n\r\n\r\n    if(props.appState.modals.buyPersLicense) {\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w320\">\r\n                <header>\r\n                    <h3>Buy Personal License</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setBuyPLicenseModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        select\r\n                        label=\"Payment method\"\r\n                        value={value2}\r\n                        onChange={(e)=>{handleChange2(e.target)}}\r\n                    >\r\n                        <MenuItem value='From account balance'>From account balance</MenuItem>\r\n                        <MenuItem value='From Bitcoin wallet'>From Bitcoin wallet</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label=\"Amount\"\r\n                        fullWidth\r\n                        rows={1}\r\n                        value={value1}\r\n                        onChange={(e)=>{handleChange3(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        className=\"inputDollar\"\r\n                    />\r\n                    <Slider\r\n                        step={100}\r\n                        min={0}\r\n                        max={10000}\r\n                        value={value1} onChange={handleChange1} />\r\n                <p>Funds will be transferred from account balance to license balance</p>\r\n\r\n                    <Button variant=\"contained\" className=\"btn btn--blue\" onClick={()=>{history.push(\"/licenses/\" + props.currentUser.id + \"/activity\");props.setBuyPLicenseModal(false) }}>\r\n                        GO TO PAYMENT\r\n                    </Button>\r\n                </main>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return component;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setBuyPLicenseModal: (bool) => dispatch(setBuyPLicenseModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyPersLicense);","import React, {Fragment} from 'react';\r\nimport {setBuyCLicenseModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst BuyCorpLicense = (props) => {\r\n\r\n    let component = '';\r\n    let history = useHistory();\r\n\r\n    const clickHandler = ( newLangVal ,e ) => {\r\n        props.setCurrentLanguage(newLangVal);\r\n        props.setLanguageModal(false);\r\n\r\n    };\r\n    const [value1, setValue1] = React.useState(props.appState.modals.buyCorpLicense.data);\r\n    const [value2, setValue2] = React.useState('From account balance');\r\n\r\n    const handleChange1 = (event, newValue) => {\r\n        setValue1(newValue);\r\n    };\r\n    const handleChange3 = (val) => {\r\n\r\n\r\n            if(val >= 50000){\r\n                setValue1(50000);\r\n            }else if(val >= 5000) {\r\n                setValue1(val);\r\n            }else {\r\n                setValue1(val > 1000 ? val : 1000)\r\n            }\r\n        };\r\n    const handleChange2 = (event) => {\r\n        setValue2(event.value);\r\n    };\r\n\r\n\r\n    component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w320\">\r\n                <header>\r\n                    <h3>Buy Corporate License</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setBuyCLicenseModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        select\r\n                        label=\"Payment method\"\r\n                        value={value2}\r\n                        onChange={(e)=>{handleChange2(e.target)}}\r\n                    >\r\n\r\n                        <MenuItem value='From account balance'>From account balance</MenuItem>\r\n                        <MenuItem value='From Bitcoin wallet'>From Bitcoin wallet</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label=\"Amount\"\r\n                        fullWidth\r\n                        rows={1}\r\n                        value={value1}\r\n                        onChange={handleChange3}\r\n                        variant=\"filled\"\r\n                        className=\"inputDollar\"\r\n                    />\r\n                    <Slider\r\n                        step={100}\r\n                        min={5000}\r\n                        max={50000}\r\n                        value={value1} onChange={handleChange1} />\r\n                    <p>Funds will be transferred from account balance to license balance</p>\r\n\r\n                    <Button variant=\"contained\" className=\"btn btn--blue\" onClick={()=>{history.push(\"/licenses/\" + props.currentUser.id + \"/activity\");props.setBuyCLicenseModal(false) }}>\r\n                        GO TO PAYMENT\r\n                    </Button>\r\n                </main>\r\n            </div>\r\n        </div>);\r\n\r\n\r\n    return component;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n    currentUser: state.user.currentUser,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setBuyCLicenseModal: (bool) => dispatch(setBuyCLicenseModal(bool))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyCorpLicense);","import React, {Fragment} from 'react';\r\nimport {setRefillBalanceModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n\r\n\r\nconst RefillAccountBalance = (props) => {\r\n\r\n    let component = '';\r\n\r\n    const clickHandler = ( newLangVal ,e ) => {\r\n        props.setCurrentLanguage(newLangVal);\r\n        props.setLanguageModal(false);\r\n\r\n    };\r\n    const [value1, setValue1] = React.useState(1000);\r\n    const [value2, setValue2] = React.useState('Bitcoin');\r\n\r\n    const handleChange1 = (event, newValue) => {\r\n        setValue1(newValue);\r\n    };\r\n    const handleChange3 = (event, newValue) => {\r\n        setValue1(newValue);\r\n    };\r\n\r\n    const handleChange2 = (event) => {\r\n        setValue2(event.value);\r\n    };\r\n\r\n\r\n\r\n    if(props.appState.modals.refillAccountBalance) {\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w320\">\r\n                <header>\r\n                    <h3>Refill account balance</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setRefillBalanceModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        select\r\n                        label=\"Payment method\"\r\n                        value={value2}\r\n                        onChange={(e)=>{handleChange2(e.target)}}\r\n                    >\r\n                        <MenuItem value='Bitcoin'>Bitcoin</MenuItem>\r\n                        <MenuItem value='Ethereum'>Ethereum</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label=\"Amount to replenish\"\r\n                        fullWidth\r\n                        rows={1}\r\n                        value={value1}\r\n                        onChange={handleChange3}\r\n                        variant=\"filled\"\r\n                        className=\"inputDollar\"\r\n                    />\r\n                    <Slider\r\n                        step={100}\r\n                        min={0}\r\n                        max={10000}\r\n                        value={value1} onChange={handleChange1} />\r\n                    <p>Funds will be transferred from account balance to license balance</p>\r\n                    <div className=\"btn btn--blue\">GO TO PAYMENT</div>\r\n\r\n                </main>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            {component}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setRefillBalanceModal: (bool) => dispatch(setRefillBalanceModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RefillAccountBalance);","import React, {Fragment} from 'react';\r\nimport {setRefillLicenseModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\n\r\nconst RefillLicenseBalance = (props) => {\r\n\r\n    let component = null;\r\n\r\n    const clickHandler = ( newLangVal ,e ) => {\r\n        props.setCurrentLanguage(newLangVal);\r\n        props.setLanguageModal(false);\r\n\r\n    };\r\n    const [value1, setValue1] = React.useState(1500);\r\n    const [value2, setValue2] = React.useState('From account balance');\r\n\r\n    const handleChange1 = (event, newValue) => {\r\n        setValue1(newValue);\r\n    };\r\n    const handleChange3 = (event, newValue) => {\r\n        setValue1(newValue);\r\n    };\r\n\r\n    const handleChange2 = (event) => {\r\n        setValue2(event.value);\r\n    };\r\n\r\n\r\n    if(props.appState.modals.refillLicenseBalance) {\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w320\">\r\n                <header>\r\n                    <h3>Refill account balance</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setRefillLicenseModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <div className=\"header\">\r\n                        <div>\r\n                            <h6>Account balance: </h6>\r\n                            <p>$ <span className=\"color-white\">3500</span>.00</p>\r\n                        </div>\r\n                        <div>\r\n                            <h6>License balance: </h6>\r\n                            <p>$ <span className=\"color-white\">1063</span>.00</p>\r\n                        </div>\r\n                    </div>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        select\r\n                        label=\"Payment method\"\r\n                        value={value2}\r\n                        onChange={(e)=>{handleChange2(e.target)}}\r\n                    >\r\n                        <MenuItem value='From account balance'>From account balance</MenuItem>\r\n                        <MenuItem value='From account balance2'>From account balance2</MenuItem>\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label=\"Amount to replenish\"\r\n                        fullWidth\r\n                        rows={1}\r\n                        value={value1}\r\n                        onChange={handleChange3}\r\n                        variant=\"filled\"\r\n                        className=\"inputDollar\"\r\n                    />\r\n                    <Slider\r\n                        step={100}\r\n                        min={0}\r\n                        max={10000}\r\n                        value={value1} onChange={handleChange1} />\r\n                    <p>Funds will be transferred from account balance to license balance</p>\r\n                    <Button variant=\"contained\" className=\"btn btn--blue\" >\r\n                        GO TO PAYMENT\r\n                    </Button>\r\n                </main>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            {component}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setRefillLicenseModal: (bool) => dispatch(setRefillLicenseModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RefillLicenseBalance);","import React, {Fragment} from 'react';\r\nimport {setLicenseDaysSettingsModal} from \"../../../redux/app/app.actions\";\r\nimport {setDaysLeft} from \"../../../redux/licenses/corporate/users/users.actions\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst LicenseDaysSetting = (props) => {\r\n\r\n    let component = null;\r\n\r\n    let defaultDescription = 'Set a new value for the remaining days. You can edit any field, the value of the remaining fields will change automatically.';\r\n\r\n    const currentData =  Object.assign({}, props.appState.modals.licenseDaysSettings.data );\r\n    const [balance, setBalance] = React.useState('$' + currentData.userOptions.balance);\r\n    const [spend, setSpendValue] = React.useState(0);\r\n    const [spendClass, setSpendClass] = React.useState('');\r\n    const [daysValue, setDaysValue] = React.useState(currentData.userOptions.daysLeft);\r\n\r\n    let configRate = 2;\r\n\r\n\r\n    const daysHandler = (value) => {\r\n        setDaysValue(value);\r\n\r\n        if(value > currentData.userOptions.daysLeft) {\r\n            setBalance('$' + (currentData.userOptions.balance + (value - currentData.userOptions.daysLeft)*configRate).toFixed(2) );\r\n\r\n            setSpendValue('-$' +((value - currentData.userOptions.daysLeft)*configRate).toFixed(2));\r\n            setSpendClass('color-red');\r\n\r\n        }else if(value === currentData.userOptions.daysLeft){\r\n            setSpendClass('');\r\n            setSpendValue(0);\r\n            setBalance('$' +currentData.userOptions.balance);\r\n        }else {\r\n            setSpendClass('color-green');\r\n            setSpendValue('+$' + ((currentData.userOptions.daysLeft - value)*configRate).toFixed(2));\r\n            setBalance('$' +(currentData.userOptions.balance + (value - currentData.userOptions.daysLeft)*configRate).toFixed(2) );\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    const sliderHandler = (event, newValue) => {\r\n        setDaysValue(newValue);\r\n\r\n        if(newValue > currentData.userOptions.daysLeft) {\r\n            setBalance('$' + (currentData.userOptions.balance + (newValue - currentData.userOptions.daysLeft)*configRate).toFixed(2) );\r\n\r\n            setSpendValue('-$' +((newValue - currentData.userOptions.daysLeft)*configRate).toFixed(2));\r\n            setSpendClass('color-red');\r\n\r\n        }else if(newValue === currentData.userOptions.daysLeft){\r\n            setSpendClass('');\r\n            setSpendValue(0);\r\n            setBalance('$' +currentData.userOptions.balance);\r\n        }else {\r\n            setSpendClass('color-green');\r\n            setSpendValue('+$' + ((currentData.userOptions.daysLeft - newValue)*configRate).toFixed(2));\r\n            setBalance('$' +(currentData.userOptions.balance + (newValue - currentData.userOptions.daysLeft)*configRate).toFixed(2) );\r\n        }\r\n\r\n    };\r\n\r\n    const applyHandler = () => {\r\n\r\n        let data = {\r\n            id: currentData.user.id,\r\n            balance: +balance.match(/\\d+/)[0],\r\n            daysValue: daysValue,\r\n        }\r\n        props.setDaysLeft(data);\r\n        setSpendValue(0);\r\n        setSpendClass('');\r\n        props.setLicenseDaysSettingsModal(false)\r\n    };\r\n\r\n\r\n\r\n    component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w400\">\r\n                <header>\r\n                    <h3>Days Settings</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setLicenseDaysSettingsModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <div className=\"header\">\r\n                        <div>\r\n                            <h6>User: </h6>\r\n                            <p>\r\n                            <span className=\"icon-inside\">{IconPack.userIcons.forTable} {currentData.user.name}</span>\r\n                            </p>\r\n\r\n                        </div>\r\n                        <div>\r\n                            <h6>Days left: </h6>\r\n                            <p className=\"color-white\">{currentData.userOptions.daysLeft}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"line\"></div>\r\n\r\n                    <div className=\"fieldsWrapper\">\r\n                    <TextField\r\n                        label=\"Days left\"\r\n                        fullWidth\r\n                        rows={1}\r\n                        value={daysValue}\r\n                        onChange={(e) => {daysHandler(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        className=\"col-3\"\r\n                    />\r\n                    <TextField\r\n                        label=\"Balance\"\r\n                        fullWidth\r\n                        rows={1}\r\n                        value={balance}\r\n                        variant=\"filled\"\r\n                        className=\"col-3\"\r\n\r\n                    />\r\n                    <TextField\r\n                        label={daysValue < currentData.userOptions.daysLeft ?   'Refund' : 'Spend'}\r\n                        fullWidth\r\n                        rows={1}\r\n                        value={spend}\r\n                        variant=\"filled\"\r\n                        className={spendClass + \" col-3\"}\r\n                    /></div>\r\n\r\n                    <Slider\r\n                        step={1}\r\n                        min={0}\r\n                        max={90}\r\n                        value={daysValue} onChange={sliderHandler} />\r\n                    <p>\r\n                        {daysValue > currentData.userOptions.daysLeft\r\n                            ? (<>You are about to <b className=\"color-white\">add {daysValue - currentData.userOptions.daysLeft} days.</b> The cost of adding is <span className=\"color-red\">{spend}</span>. Funds will be deducted from the balance of the license.</>)\r\n                            : null}\r\n                        {daysValue === currentData.userOptions.daysLeft\r\n                            ? (<>Set a new value for the remaining days. You can edit any field, the value of the remaining fields will change automatically.</>)\r\n                            : null}\r\n                        {daysValue < currentData.userOptions.daysLeft\r\n                            ? (<>You are about to <b className=\"color-white\">take {currentData.userOptions.daysLeft - daysValue} days.</b> The reimbursement cost will be <span className=\"color-green\">{spend}</span>. The funds will be credited to the balance of your license.</>)\r\n                            : null}\r\n                    </p>\r\n                    <Button variant=\"contained\" className=\"btn btn--blue\" onClick={()=>{applyHandler()}}>\r\n                        SAVE CHANGES\r\n                    </Button>\r\n                </main>\r\n            </div>\r\n        </div>);\r\n\r\n\r\n    return component;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLicenseDaysSettingsModal: (bool) => dispatch(setLicenseDaysSettingsModal(bool)),\r\n        setDaysLeft: (obj) => dispatch(setDaysLeft(obj)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LicenseDaysSetting);\r\n","import React, {Fragment} from 'react';\r\nimport {setChangeEmailModal, setNewEmailAuthModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n\r\n\r\nconst ChangeEmail = (props) => {\r\n\r\n    let component = '';\r\n\r\n    if(props.appState.modals.changeEmail) {\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w320\">\r\n                <header>\r\n                    <h3>Change Email</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setChangeEmailModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <p>\r\n                        Email change is out after confirmation of current e-mail. We will send an email to <span className=\"color-white\">Lionel.Messi@gmail.com</span> which contains a link that you should click on\r\n                    </p>\r\n                    <div className=\"btn btn--blue\" onClick={()=>{props.setChangeEmailModal(false); props.setNewEmailAuthModal(true)}}>Send link from my email</div>\r\n                </main>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            {component}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChangeEmailModal: (bool) => dispatch(setChangeEmailModal(bool)),\r\n        setNewEmailAuthModal: (bool) => dispatch(setNewEmailAuthModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeEmail);","import React, {Fragment} from 'react';\r\nimport {setChangePasswordlModal, setChangePasswordAuthModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n\r\n\r\nconst ChangePassword = (props) => {\r\n\r\n    let component = '';\r\n\r\n    if(props.appState.modals.changePass) {\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w320\">\r\n                <header>\r\n                    <h3>Change Password</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setChangePasswordlModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <p>Password change is carried out after confirmation of e-mail. We will send an email to <span className=\"color-white\">Lionel.Messi@gmail.com </span>which contains a link that you should click on</p>\r\n                    <div className=\"btn btn--blue\" onClick={()=>{props.setChangePasswordlModal(false); props.setChangePasswordAuthModal(true)}}>Send link from my email</div>\r\n                </main>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            {component}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChangePasswordlModal: (bool) => dispatch(setChangePasswordlModal(bool)),\r\n        setChangePasswordAuthModal: (bool) => dispatch(setChangePasswordAuthModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);\r\n\r\n","import React, {Fragment} from 'react';\r\nimport {setChangeTelegramModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\n\r\n\r\n\r\nconst ChangeTelegram = (props) => {\r\n\r\n    const [value1, setValue1] = React.useState();\r\n    const [value2, setValue2] = React.useState(true);\r\n\r\n    let component = '';\r\n\r\n    if(props.appState.modals.changeTelegram) {\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w320\">\r\n                <header>\r\n                    <h3>Change Telegram</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setChangeTelegramModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"Your telegram\"\r\n                        value={value1}\r\n                        onChange={(e)=>{ setValue1(e.target.value)}}>\r\n                    </TextField>\r\n\r\n                    <div className=\"switch-wrapper\">\r\n                        <Switch checked={ value2 }\r\n                                name=\"autoRenew\"\r\n                                onChange={(e)=>{ setValue2(!value2)}} />\r\n                        <p><span className=\"color-white\">Display for other users</span></p>\r\n                    </div>\r\n                    <div className=\"btn btn--blue\" onClick={()=>{props.setChangeTelegramModal(false)}}>Save changes</div>\r\n                </main>\r\n\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            {component}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChangeTelegramModal: (bool) => dispatch(setChangeTelegramModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeTelegram);","import React, {Fragment} from 'react';\r\nimport {setChangeDealModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\n\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\n\r\nconst ChangeDeal = (props) => {\r\n\r\n    const [amountComisionRate, setAmountComisionRate] = React.useState(100);\r\n\r\n    let component = '';\r\n\r\n    if(props.appState.modals.changeDeal.bool) {\r\n\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content popup-description w500\">\r\n                <header>\r\n                    <h3>Deal details</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setChangeDealModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n\r\n                    <div className=\"alertPanel\">{IconPack.userIcon} Lionel Messi offers to join to Corporate license</div>\r\n\r\n                        <div className=\"row1\">\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Buyer Login\"\r\n                                value={props.appState.modals.changeDeal.data.buyer}\r\n                                disabled\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Seller Login\"\r\n                                value={props.appState.modals.changeDeal.data.seller}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                        <div className=\"row2\">\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                label=\"Amount to send\"\r\n                                value={props.appState.modals.changeDeal.data.amountToSend}\r\n                                disabled\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                disabled\r\n                                label=\"Comision rate\"\r\n                                value={amountComisionRate}\r\n\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                disabled\r\n                                label=\"Amount to recive\"\r\n                                value={props.appState.modals.changeDeal.data.amountToRecive}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row3\">\r\n                            <TextField\r\n                                label=\"Deal title\"\r\n                                fullWidth\r\n                                rows={1}\r\n                                disabled\r\n                                value={props.appState.modals.changeDeal.data.title}\r\n                                variant=\"filled\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Terms of transaction\"\r\n                                fullWidth\r\n                                rows={11}\r\n                                disabled\r\n                                multiline\r\n                                value={props.appState.modals.changeDeal.data.description}\r\n                                className={'height-auto'}\r\n                                variant=\"filled\"\r\n                            />\r\n                        </div>\r\n\r\n                    <div className=\"btn btn--blue\" onClick={()=>{props.setChangeDealModal(false);}}>Cancel a deal</div>\r\n                </main>\r\n\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            {component}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setChangeDealModal: (obj) => dispatch(setChangeDealModal(obj)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeDeal);","import React, {Fragment} from 'react';\r\nimport {setAutoRenewalModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\n\r\n\r\n\r\nconst AutoRenewalSettings = (props) => {\r\n\r\n    let component = '';\r\n\r\n    const clickHandler = ( newLangVal ,e ) => {\r\n        props.setCurrentLanguage(newLangVal);\r\n        props.setLanguageModal(false);\r\n\r\n    };\r\n    const [value1, setValue1] = React.useState(200);\r\n    const [value2, setValue2] = React.useState(500);\r\n    const [value3, setValue3] = React.useState(true);\r\n    const handleChange2 = (event, newValue) => {\r\n        setValue2(newValue);\r\n    };\r\n\r\n    if(props.appState.modals.autoRenewal) {\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w320\">\r\n                <header>\r\n                    <h3>Auto renewal settings</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setAutoRenewalModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <div className=\"switch-wrapper\">\r\n                        <Switch checked={ value3 }\r\n                                name=\"autoRenew\"\r\n                                onChange={(e)=>{ setValue3(!value3)}} />\r\n                        <p><span className=\"color-white\">Auto renew</span></p>\r\n                    </div>\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        label=\"License balance left\"\r\n                        value={value1}\r\n                        className=\"inputDollar\"\r\n                        onChange={(e)=>{ setValue1(e.target.value)}}\r\n                    >\r\n\r\n                    </TextField>\r\n                    <TextField\r\n                        label=\"Amount to replenish\"\r\n                        fullWidth\r\n                        rows={1}\r\n                        value={value2}\r\n                        onChange={(e)=>{ setValue2(e.target.value)}}\r\n                        variant=\"filled\"\r\n                        className=\"inputDollar\"\r\n                    />\r\n                    <Slider\r\n                        step={100}\r\n                        min={0}\r\n                        max={10000}\r\n                        value={value2} onChange={handleChange2} />\r\n                    <p>When the balance of the license is less than <span className=\"color-white\">${value1}</span>, it will automatically replenish by <span className=\"color-white\">${value2}</span>  from account balance</p>\r\n                    <div className=\"btn btn--blue\">GO TO PAYMENT</div>\r\n\r\n                </main>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            {component}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAutoRenewalModal: (bool) => dispatch(setAutoRenewalModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoRenewalSettings);","import React, {Fragment} from 'react';\r\nimport {setMigrationModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\n\r\n\r\n\r\nconst MigrationToCorporate = (props) => {\r\n\r\n    let component = '';\r\n\r\n    const clickHandler = ( newLangVal ,e ) => {\r\n        props.setCurrentLanguage(newLangVal);\r\n        props.setLanguageModal(false);\r\n\r\n    };\r\n    const [value1, setValue1] = React.useState(200);\r\n    const [value2, setValue2] = React.useState(500);\r\n    const [value3, setValue3] = React.useState(true);\r\n    const handleChange2 = (event, newValue) => {\r\n        setValue2(newValue);\r\n    };\r\n\r\n    if(props.appState.modals.migration) {\r\n        component = ( <div className=\"popup-layer\">\r\n            <div className=\"popup-content w500\">\r\n                <header>\r\n                    <h3>Migration to corporate</h3>\r\n                    <div className=\"close\" onClick={()=>{props.setMigrationModal(false)}}><svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                    </div>\r\n                </header>\r\n                <main>\r\n\r\n                    <div className=\"alertPanel\">Lionel Messi offers to join to Corporate license</div>\r\n\r\n                    <span className=\"color-orange\"><svg width=\"17\" height=\"15\" className=\"mr-10\" viewBox=\"0 0 17 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M16.5586 12.8086L9.99609 1.40625C9.50391 0.558594 8.21875 0.53125 7.72656 1.40625L1.16406 12.8086C0.671875 13.6562 1.30078 14.75 2.3125 14.75H15.4102C16.4219 14.75 17.0508 13.6836 16.5586 12.8086ZM8.875 10.4297C9.55859 10.4297 10.1328 11.0039 10.1328 11.6875C10.1328 12.3984 9.55859 12.9453 8.875 12.9453C8.16406 12.9453 7.61719 12.3984 7.61719 11.6875C7.61719 11.0039 8.16406 10.4297 8.875 10.4297ZM7.67188 5.91797C7.64453 5.72656 7.80859 5.5625 8 5.5625H9.72266C9.91406 5.5625 10.0781 5.72656 10.0508 5.91797L9.85938 9.63672C9.83203 9.82812 9.69531 9.9375 9.53125 9.9375H8.19141C8.02734 9.9375 7.89062 9.82812 7.86328 9.63672L7.67188 5.91797Z\" fill=\"#F2994A\"/>\r\n                    </svg>\r\n                    If you accept his invitation, the following will happen:</span>\r\n\r\n                    <ol>\r\n                        <li>Your sessions and configs will be available to users of the corporate license of Ronaldo</li>\r\n                        <li>The balance of your balance will go in favor of the balance of the corporate license of Ronaldo</li>\r\n                        <li>Your account with the email Lionel.Messi@gmail.com and login Lionel Messi will be permanently deleted, but you can register an empty account again</li>\r\n                    </ol>\r\n\r\n                    <p className=\"description\">If you don’t know what this is about, click the “REJECT” button and the user will not disturb you anymore.</p>\r\n\r\n                    <div className=\"switch-wrapper\">\r\n                        <Switch checked={ value3 }\r\n                                name=\"autoRenew\"\r\n                                onChange={(e)=>{ setValue3(!value3)}} />\r\n                        <p><span className=\"color-white\">Everything is clear, I want to migrate to corporate</span></p>\r\n                    </div>\r\n\r\n                    <div className=\"btns-wrapper\">\r\n                        <div className=\"btn btn--decline\">Reject invite</div>\r\n                        <div className=\"btn btn--accept\">Decline invite</div>\r\n                    </div>\r\n\r\n\r\n                </main>\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    return (\r\n        <Fragment >\r\n            {component}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setMigrationModal: (bool) => dispatch(setMigrationModal(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MigrationToCorporate);","import React, {Fragment} from 'react';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {setAccessRightsModal} from \"../../../redux/app/app.actions\";\r\nimport {setAccessRights} from \"../../../redux/licenses/corporate/users/users.actions\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\n\r\n\r\nconst SetAccessRights = (props) => {\r\n    let component = null;\r\n\r\n    const [seesActivity, setSeesActivity] = React.useState(true);\r\n    const [seesUsers, setSeesUsers] = React.useState(true);\r\n    const [seesCosts, setSeesCosts] = React.useState(true);\r\n\r\n\r\n    let selectItemsArray = [];\r\n\r\n    props.usersTabData.map((i, key) => {\r\n        if(i.userOptions.isSelected) {\r\n          selectItemsArray.push(i);\r\n        };\r\n    })\r\n\r\n    const applyHandler = () => {\r\n\r\n        let newDataObj = props.usersTabData.map((i, key) => {\r\n            if(i.userOptions.isSelected) {\r\n                i.userOptions.seesActivity = seesActivity;\r\n                i.userOptions.seesUsers = seesUsers;\r\n                i.userOptions.seesCosts = seesCosts;\r\n                i.userOptions.isSelected = false;\r\n            };\r\n            return i\r\n        })\r\n\r\n        props.setAccessRights(newDataObj);\r\n        props.setAccessRightsModal( false,  null)\r\n    };\r\n\r\n\r\n\r\n    return (<div className=\"popup-layer\">\r\n        <div className=\"popup-content w320\">\r\n            <header>\r\n                <h3>Set access rights</h3>\r\n                <div className=\"close\" onClick={() => {\r\n                    props.setAccessRightsModal(false)\r\n                }}>\r\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                <div className=\"header\">\r\n                    <div>\r\n                        <h6>User: </h6>\r\n                        <p className=\"icon-inside\">{IconPack.userIcons.forTable} <b>{selectItemsArray.length} selected users</b> </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"line mb-10\"></div>\r\n                <div><Switch\r\n                    checked={seesActivity}\r\n                    onChange={() => {\r\n                        setSeesActivity(!seesActivity)\r\n                    }}\r\n                /><span className=\"color-white ml-10\">Sees activity</span></div>\r\n                <div><Switch\r\n                    checked={seesUsers}\r\n                    onChange={() => {\r\n                        setSeesUsers(!seesUsers)\r\n                    }}\r\n                /><span className=\"color-white ml-10\">Sees users</span></div>\r\n                <div><Switch\r\n                    checked={seesCosts}\r\n                    onChange={() => {\r\n                        setSeesCosts(!seesCosts)\r\n                    }}\r\n                /><span className=\"color-white ml-10\">Sees costs</span></div>\r\n\r\n\r\n                <p className=\"mt-10\">Access rights will be applied to all selected users</p>\r\n\r\n                <Button variant=\"contained\" className=\"btn btn--blue\"  onClick={()=>{applyHandler()}}>\r\n                    Save changes\r\n                </Button>\r\n\r\n            </main>\r\n        </div>\r\n    </div>);\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAccessRightsModal: (bool) => dispatch(setAccessRightsModal(bool)),\r\n        setAccessRights: (obj) => dispatch(setAccessRights(obj)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetAccessRights);","import React, {Fragment , useEffect} from 'react';\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport {setAccessRightsForOneUserModal} from \"../../../redux/app/app.actions\";\r\nimport {setAccessRights} from \"../../../redux/licenses/corporate/users/users.actions\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\nimport Switch from \"@material-ui/core/Switch/Switch\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\n\r\n\r\nconst SetAccessRightsForOneUser = (props) => {\r\n    let component = null;\r\n\r\n    let currentUserObj =  props.usersTabData.find((userObject) => {\r\n        return userObject.user.id === props.appState.modals.accessRightsForOneUser.data;\r\n    });\r\n\r\n    const [seesActivity, setSeesActivity] = React.useState();\r\n    const [seesUsers, setSeesUsers] = React.useState();\r\n    const [seesCosts, setSeesCosts] = React.useState();\r\n\r\n    useEffect(() => {\r\n        setSeesActivity( currentUserObj.userOptions.seesActivity );\r\n        setSeesUsers( currentUserObj.userOptions.seesUsers );\r\n        setSeesCosts(currentUserObj.userOptions.seesCosts);\r\n    }, []);\r\n\r\n\r\n\r\n    const applyHandler = () => {\r\n\r\n        let newDataObj = props.usersTabData.map((i, key) => {\r\n            if(i.user.id === props.appState.modals.accessRightsForOneUser.data) {\r\n                i.userOptions.seesActivity = seesActivity;\r\n                i.userOptions.seesUsers = seesUsers;\r\n                i.userOptions.seesCosts = seesCosts;\r\n            };\r\n            return i\r\n        })\r\n\r\n        props.setAccessRights(newDataObj);\r\n        props.setAccessRightsForOneUserModal({bool: false, data: null})\r\n    };\r\n\r\n\r\n\r\n    return (<div className=\"popup-layer\">\r\n        <div className=\"popup-content w320\">\r\n            <header>\r\n                <h3>Set access rights</h3>\r\n                <div className=\"close\" onClick={() => {\r\n                    props.setAccessRightsForOneUserModal({bool: false, data: null})\r\n                }}>\r\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                <div className=\"header\">\r\n                    <div>\r\n                        <h6>User: </h6>\r\n                        <p className=\"icon-inside\">{IconPack.userIcons.forTable} <b>{currentUserObj.user.name}</b> </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"line mb-10\"></div>\r\n                <div><Switch\r\n                    checked={seesActivity}\r\n                    onChange={() => {\r\n                        setSeesActivity(!seesActivity)\r\n                    }}\r\n                /><span className=\"color-white ml-10\">Sees activity</span></div>\r\n                <div><Switch\r\n                    checked={seesUsers}\r\n                    onChange={() => {\r\n                        setSeesUsers(!seesUsers)\r\n                    }}\r\n                /><span className=\"color-white ml-10\">Sees users</span></div>\r\n                <div><Switch\r\n                    checked={seesCosts}\r\n                    onChange={() => {\r\n                        setSeesCosts(!seesCosts)\r\n                    }}\r\n                /><span className=\"color-white ml-10\">Sees costs</span></div>\r\n\r\n\r\n                <p className=\"mt-10\">Access rights will be applied to {currentUserObj.user.name}</p>\r\n\r\n                <Button variant=\"contained\" className=\"btn btn--blue\"  onClick={()=>{applyHandler()}}>\r\n                    Save changes\r\n                </Button>\r\n\r\n            </main>\r\n        </div>\r\n    </div>);\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAccessRightsForOneUserModal: (bool) => dispatch(setAccessRightsForOneUserModal(bool)),\r\n        setAccessRights: (obj) => dispatch(setAccessRights(obj)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SetAccessRightsForOneUser);","import React, {Fragment} from 'react';\r\n\r\nimport {setSelectForUsers} from \"../../../redux/licenses/corporate/users/users.actions\";\r\nimport {setAuthorizationDataModal} from \"../../../redux/app/app.actions\";\r\n\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\n\r\n\r\n\r\nconst AuthorizationData = (props) => {\r\n\r\n\r\n    const applyHandler = () => {\r\n        navigator.clipboard.writeText(newDataObjString);\r\n        props.setSelectForUsers(false);\r\n        props.setAuthorizationDataModal(false);\r\n    };\r\n    let newDataObj = [];\r\n\r\n    props.usersTabData.map((i) => {\r\n        if(i.userOptions.isSelected) {\r\n            newDataObj.push(i);\r\n        };\r\n    });\r\n\r\n    newDataObj = newDataObj.map((i) => {\r\n        return (i.user.name +': ' + i.user.id + '; ' + i.user.creds.password + ';' )\r\n    });\r\n\r\n    let newDataObjString = newDataObj.toString().replace(/,/g, `\\r\\n`);\r\n\r\n    const [value, setValue] = React.useState(newDataObj);\r\n\r\n\r\n    return (<div className=\"popup-layer\">\r\n        <div className=\"popup-content w400\">\r\n            <header>\r\n                <h3>Authorization data</h3>\r\n                <div className=\"close\" onClick={() => {\r\n                    props.setAuthorizationDataModal(false)\r\n                }}>\r\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                <TextField\r\n                    label={'Nickname: Login; Password;'}\r\n                    fullWidth\r\n                    multiline\r\n                    disabled\r\n                    rows={newDataObj.length}\r\n                    value={newDataObjString}\r\n                    className='heightAuto'\r\n                    variant=\"filled\"\r\n                />\r\n                <Button variant=\"contained\" className=\"btn btn--blue\"  onClick={()=>{applyHandler()}}>\r\n                    Copy to clipboard\r\n                </Button>\r\n\r\n            </main>\r\n        </div>\r\n    </div>);\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAuthorizationDataModal: (bool) => dispatch(setAuthorizationDataModal(bool)),\r\n        setSelectForUsers: (bool) => dispatch(setSelectForUsers(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizationData);","import React, {Fragment , useEffect} from 'react';\r\n\r\nimport {setSelectForUsers} from \"../../../redux/licenses/corporate/users/users.actions\";\r\nimport {setAuthorizationDataForOneUserModal} from \"../../../redux/app/app.actions\";\r\n\r\n\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\n\r\n\r\n\r\nconst AuthorizationDataForOneUser = (props) => {\r\n\r\n    const applyHandler = () => {\r\n        navigator.clipboard.writeText(newDataObjString);\r\n        props.setAuthorizationDataForOneUserModal({bool: false, data: null})\r\n    };\r\n\r\n    let newDataObj = [];\r\n\r\n    let currentUserObj =  props.usersTabData.find((userObject) => {\r\n        return userObject.user.id === props.appState.modals.authorizationDataForOneUser.data;\r\n    });\r\n\r\n    newDataObj.push(currentUserObj);\r\n\r\n    newDataObj = newDataObj.map((i) => {\r\n        return (i.user.name +': ' + i.user.id + '; ' + i.user.creds.password + ';' )\r\n    });\r\n\r\n    let newDataObjString = newDataObj.toString().replace(/,/g, `\\r\\n`);\r\n\r\n    return (<div className=\"popup-layer\">\r\n        <div className=\"popup-content w400\">\r\n            <header>\r\n                <h3>Authorization data</h3>\r\n                <div className=\"close\" onClick={() => {\r\n                    props.setAuthorizationDataForOneUserModal({bool: false, data: null})\r\n                }}>\r\n                    <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path opacity=\"0.7\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6.65613 5.74086L11.6899 0.707107L10.9828 0L5.94903 5.03375L0.956513 0.0412364L0.249406 0.748343L5.24192 5.74086L0 10.9828L0.707107 11.6899L5.94903 6.44797L11.2322 11.7311L11.9393 11.024L6.65613 5.74086Z\" fill=\"white\"/>\r\n                    </svg>\r\n                </div>\r\n            </header>\r\n            <main>\r\n                <TextField\r\n                    label={'Nickname: Login; Password;'}\r\n                    fullWidth\r\n                    multiline\r\n                    disabled\r\n                    rows={newDataObj.length}\r\n                    value={newDataObjString}\r\n                    className='heightAuto'\r\n                    variant=\"filled\"\r\n                />\r\n                <Button variant=\"contained\" className=\"btn btn--blue\"  onClick={()=>{applyHandler()}}>\r\n                    Copy to clipboard\r\n                </Button>\r\n\r\n            </main>\r\n        </div>\r\n    </div>);\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState,\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setAuthorizationDataForOneUserModal: (bool) => dispatch(setAuthorizationDataForOneUserModal(bool)),\r\n        setSelectForUsers: (bool) => dispatch(setSelectForUsers(bool)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthorizationDataForOneUser);","import React, {} from 'react';\r\n\r\nimport LangDropDown from './LangDropdown/LangDropdown';\r\nimport BuyPersLicense from './buyPersLicense/buyPersLicense';\r\nimport BuyCorpLicense from './buyCorpLicense/buyCorpLicense';\r\nimport RefillAccountBalance from './refillAccountBalance/refillAccountBalance';\r\nimport RefillLicenseBalance from './refillLicenseBalance/refillLicenseBalance';\r\nimport LicenseDaysSetting from './licenseDaysSetting/licenseDaysSetting';\r\nimport ChangeEmail from './changeEmail/ChangeEmail';\r\nimport ChangePassword from './ChangePassword/ChangePassword';\r\nimport ChangeTelegram from './changeTelegram/changeTelegram';\r\nimport ChangeDeal from './changeDeal/changeDeal';\r\nimport AutoRenewalSettings from './autoRenewalSettings/autoRenewalSettings';\r\nimport MigrationToCorporate from './migrationToCorporate/migrationToCorporate';\r\nimport SetAccessRights from './setAccessRights/setAccessRights';\r\nimport SetAccessRightsForOneUser from './setAccessRightsForOneUser/setAccessRightsForOneUser';\r\nimport AuthorizationData from './authorizationData/authorizationData';\r\nimport AuthorizationDataForOneUser from './authorizationDataForOneUser/authorizationDataForOneUser';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nconst ModalWindow = (props) => {\r\n\r\n    let currentWindow = null;\r\n\r\n    if(props.appState.modals.languageDropdown)     { currentWindow = <LangDropDown /> };\r\n    if(props.appState.modals.buyCorpLicense.bool)       { currentWindow = <BuyCorpLicense /> };\r\n    if(props.appState.modals.buyPersLicense.bool)       { currentWindow = <BuyPersLicense /> };\r\n    if(props.appState.modals.refillAccountBalance) { currentWindow = <RefillAccountBalance /> };\r\n    if(props.appState.modals.refillLicenseBalance) { currentWindow = <RefillLicenseBalance /> };\r\n    if(props.appState.modals.changeEmail)          { currentWindow = <ChangeEmail /> };\r\n    if(props.appState.modals.changePass)           { currentWindow = <ChangePassword /> };\r\n    if(props.appState.modals.changeTelegram)       { currentWindow = <ChangeTelegram /> };\r\n    if(props.appState.modals.autoRenewal)          { currentWindow = <AutoRenewalSettings /> };\r\n    if(props.appState.modals.migration)            { currentWindow = <MigrationToCorporate /> };\r\n    if(props.appState.modals.accessRights)         { currentWindow = <SetAccessRights /> };\r\n    if(props.appState.modals.accessRightsForOneUser.bool)         { currentWindow = <SetAccessRightsForOneUser /> };\r\n    if(props.appState.modals.licenseDaysSettings.bool)  { currentWindow = <LicenseDaysSetting /> };\r\n    if(props.appState.modals.authorizationData)    { currentWindow = <AuthorizationData /> };\r\n    if(props.appState.modals.authorizationDataForOneUser.bool)    { currentWindow = <AuthorizationDataForOneUser /> };\r\n    if(props.appState.modals.changeDeal.bool)    { currentWindow = <ChangeDeal /> };\r\n\r\n    return currentWindow;\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    appState: state.appOptions.appState\r\n});\r\n\r\nexport default connect(mapStateToProps)(ModalWindow);"],"sourceRoot":""}