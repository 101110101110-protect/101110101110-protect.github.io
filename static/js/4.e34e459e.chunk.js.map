{"version":3,"sources":["components/Licenses/Activity/CorporateActivity.jsx"],"names":["connect","state","activityData","corporateLicenseActivity","activity","props","React","useState","searchValue","setSearchValue","tbodyData","IconPack","userIcons","forTable","licenseIcons","mail","className","colspan","map","i","key","user","action","description","searchedData","filter","toLowerCase","includes","variant","fullWidth","placeholder","value","onChange","e","target","searchComponents","calendar","tableIcons","date","length"],"mappings":"uPA4IeA,uBALS,SAACC,GAAD,MAAY,CAChCC,aAAcD,EAAME,yBAAyBC,YAIlCJ,EA7HW,SAACK,GAAW,IAAD,EACKC,IAAMC,SAAS,IADpB,mBAC1BC,EAD0B,KACbC,EADa,KA6B7BC,GAxBc,aACb,IACI,IAA8GC,IAASC,UAAUC,SACjI,IACA,IAA6IF,IAASG,aAAaC,KACnK,IAEJ,IACI,IAA8GJ,IAASC,UAAUC,SACjI,IACA,IAAwKF,IAASG,aAAaC,KAC9L,IAEJ,IACI,IAA8GJ,IAASC,UAAUC,SACjI,IACA,IAAwKF,IAASG,aAAaC,KAC9L,IAOQ,oCACb,kBAAC,IAAD,CAAUC,UAAU,YAChB,kBAAC,IAAD,CAAWA,UAAU,+BAA+BC,QAAQ,KACxD,uBAAGD,UAAU,eAAb,SACA,0BAAMA,UAAU,qBAAhB,aAIPX,EAAMH,aAAagB,KAAI,SAACC,EAAGC,GACxB,OAAU,kBAAC,IAAD,KACN,kBAAC,IAAD,CAAWJ,UAAU,gCAA+B,0BAAMA,UAAU,2CAA2CL,IAASC,UAAUC,SAAUM,EAAEE,OAC9I,kBAAC,IAAD,CAAWL,UAAU,+BAA+BG,EAAEG,QACtD,kBAAC,IAAD,CAAWN,UAAU,gCAAgCG,EAAEI,YAAY,GAAG,0BAAMP,UAAU,4DAA4DL,IAASG,aAAaC,KAAMI,EAAEI,YAAY,IAA5L,KACA,kBAAC,IAAD,CAAWP,UAAU,+BAArB,wBAIR,kBAAC,IAAD,CAAUA,UAAU,YAChB,kBAAC,IAAD,CAAWA,UAAU,+BAA+BC,QAAQ,KACxD,uBAAGD,UAAU,eAAb,aACA,0BAAMA,UAAU,qBAAhB,aAIPX,EAAMH,aAAagB,KAAI,SAACC,EAAGC,GACxB,OAAU,kBAAC,IAAD,KACN,kBAAC,IAAD,CAAWJ,UAAU,gCAA+B,0BAAMA,UAAU,2CAA2CL,IAASC,UAAUC,SAAUM,EAAEE,OAC9I,kBAAC,IAAD,CAAWL,UAAU,+BAA+BG,EAAEG,QACtD,kBAAC,IAAD,CAAWN,UAAU,gCAAgCG,EAAEI,YAAY,GAAG,0BAAMP,UAAU,4DAA4DL,IAASG,aAAaC,KAAMI,EAAEI,YAAY,IAA5L,KACA,kBAAC,IAAD,CAAWP,UAAU,+BAArB,0BAORQ,EAAenB,EAAMH,aAAauB,QAAO,SAAAN,GACzC,GAAIA,EAAEE,KAAKK,cAAcC,SAASnB,EAAYkB,gBAC1CP,EAAEI,YAAY,GAAGG,cAAcC,SAASnB,EAAYkB,gBACpDP,EAAEI,YAAY,GAAGG,cAAcC,SAASnB,EAAYkB,gBACpDP,EAAEG,OAAOI,cAAcC,SAASnB,EAAYkB,eAC5C,OAAOP,KAgBf,OAZAK,EAAeA,EAAaN,KAAI,SAACC,EAAGC,GAE9B,OAAU,kBAAC,IAAD,CAAUA,IAAKA,GACf,kBAAC,IAAD,CAAWJ,UAAU,gCAA+B,0BAAMA,UAAU,2CAA2CL,IAASC,UAAUC,SAAUM,EAAEE,OAC9I,kBAAC,IAAD,CAAWL,UAAU,+BAA+BG,EAAEG,QACtD,kBAAC,IAAD,CAAWN,UAAU,gCAAgCG,EAAEI,YAAY,GAAG,0BAAMP,UAAU,4DAA4DL,IAASG,aAAaC,KAAMI,EAAEI,YAAY,IAA5L,KACA,kBAAC,IAAD,CAAWP,UAAU,+BAArB,wBAOZ,yBAAKA,UAAU,oBACP,yBAAKA,UAAU,eACX,kBAAC,IAAD,CACIY,QAAQ,SACRC,WAAS,EACTb,UAAU,cACVc,YAAY,SACZC,MAAOvB,EACPwB,SAAU,SAACC,GAAKxB,EAAewB,EAAEC,OAAOH,UAG5C,yBAAKf,UAAU,gCACX,yBAAKA,UAAU,YAAYL,IAASwB,iBAAiBC,UACrD,6BAAMzB,IAASwB,iBAAiBV,UAG5C,kBAAC,IAAD,CAAOT,UAAU,eACb,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWA,UAAU,yBAArB,QACA,kBAAC,IAAD,CAAWA,UAAU,wBAArB,UACA,kBAAC,IAAD,CAAWA,UAAU,oBAArB,eACA,kBAAC,IAAD,CAAWA,UAAU,iCAArB,IAAuDL,IAAS0B,WAAWC,KAA3E,WAGR,kBAAC,IAAD,KACK9B,EAAY+B,OAASf,EAAed","file":"static/js/4.e34e459e.chunk.js","sourcesContent":["import React from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport {connect} from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../Images/IconPack\";\r\n\r\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\r\n\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\n\r\n\r\nconst CorporateActivity = (props) => {\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n\r\n\r\n\r\n    let todayItems = (<>\r\n        <TableRow >\r\n            <TableCell className=\"padding-sides-15 color-white\"><span className=\"icon-inside align-items-baseline inline\">{IconPack.userIcons.forTable}Ronaldo</span></TableCell>\r\n            <TableCell className=\"padding-sides-0 color-white\">Permission changes</TableCell>\r\n            <TableCell className=\"padding-sides-25 color-white\">Send invite to<span className=\"color-grey icon-inside align-items-baseline inline ml-10\">{IconPack.licenseIcons.mail}robert@lewandowski.com</span> </TableCell>\r\n            <TableCell className=\"padding-sides-20 color-grey\">13 Feb, 11:10:22</TableCell>\r\n        </TableRow>\r\n        <TableRow >\r\n            <TableCell className=\"padding-sides-15 color-white\"><span className=\"icon-inside align-items-baseline inline\">{IconPack.userIcons.forTable}Lionel Messi</span></TableCell>\r\n            <TableCell className=\"padding-sides-0 color-white\">Permission changes</TableCell>\r\n            <TableCell className=\"padding-sides-25 color-white\">Action detail here must be long or short <span className=\"color-grey icon-inside align-items-baseline inline ml-10\">{IconPack.licenseIcons.mail}robert@lewandowski.com</span> </TableCell>\r\n            <TableCell className=\"padding-sides-20 color-grey\">13 Feb, 11:10:22</TableCell>\r\n        </TableRow>\r\n        <TableRow >\r\n            <TableCell className=\"padding-sides-15 color-white\"><span className=\"icon-inside align-items-baseline inline\">{IconPack.userIcons.forTable}Lionel Messi</span></TableCell>\r\n            <TableCell className=\"padding-sides-0 color-white\">Permission changes</TableCell>\r\n            <TableCell className=\"padding-sides-25 color-white\">Action detail here must be long or short <span className=\"color-grey icon-inside align-items-baseline inline ml-10\">{IconPack.licenseIcons.mail}robert@lewandowski.com</span> </TableCell>\r\n            <TableCell className=\"padding-sides-20 color-grey\">13 Feb, 11:10:22</TableCell>\r\n        </TableRow>\r\n    </>);\r\n\r\n\r\n\r\n\r\n    let tbodyData = (<>\r\n        <TableRow className=\"date-row\">\r\n            <TableCell className=\"padding-sides-20 color-white\" colspan=\"4\">\r\n                <b className=\"color-white\">Today</b>\r\n                <span className=\"color-grey inline\">April 3</span>\r\n            </TableCell>\r\n\r\n        </TableRow>\r\n        {props.activityData.map((i, key) => {\r\n            return  ( <TableRow >\r\n                <TableCell className=\"padding-sides-15 color-white\"><span className=\"icon-inside align-items-baseline inline\">{IconPack.userIcons.forTable}{i.user}</span></TableCell>\r\n                <TableCell className=\"padding-sides-0 color-white\">{i.action}</TableCell>\r\n                <TableCell className=\"padding-sides-25 color-white\">{i.description[0]}<span className=\"color-grey icon-inside align-items-baseline inline ml-10\">{IconPack.licenseIcons.mail}{i.description[1]}</span> </TableCell>\r\n                <TableCell className=\"padding-sides-20 color-grey\">13 Feb, 11:10:22</TableCell>\r\n            </TableRow>);\r\n        })}\r\n\r\n        <TableRow className=\"date-row\">\r\n            <TableCell className=\"padding-sides-20 color-white\" colspan=\"4\">\r\n                <b className=\"color-white\">Yesterday</b>\r\n                <span className=\"color-grey inline\">April 2</span>\r\n            </TableCell>\r\n        </TableRow>\r\n\r\n        {props.activityData.map((i, key) => {\r\n            return  ( <TableRow >\r\n                <TableCell className=\"padding-sides-15 color-white\"><span className=\"icon-inside align-items-baseline inline\">{IconPack.userIcons.forTable}{i.user}</span></TableCell>\r\n                <TableCell className=\"padding-sides-0 color-white\">{i.action}</TableCell>\r\n                <TableCell className=\"padding-sides-25 color-white\">{i.description[0]}<span className=\"color-grey icon-inside align-items-baseline inline ml-10\">{IconPack.licenseIcons.mail}{i.description[1]}</span> </TableCell>\r\n                <TableCell className=\"padding-sides-20 color-grey\">13 Feb, 11:10:22</TableCell>\r\n            </TableRow>);\r\n        })}\r\n    </>);\r\n\r\n\r\n\r\n    let searchedData = props.activityData.filter(i => {\r\n        if (i.user.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n            i.description[0].toLowerCase().includes(searchValue.toLowerCase())||\r\n            i.description[1].toLowerCase().includes(searchValue.toLowerCase())||\r\n            i.action.toLowerCase().includes(searchValue.toLowerCase())) {\r\n            return i\r\n        }\r\n    })\r\n\r\n    searchedData = searchedData.map((i, key) => {\r\n\r\n          return  ( <TableRow key={key} >\r\n                    <TableCell className=\"padding-sides-15 color-white\"><span className=\"icon-inside align-items-baseline inline\">{IconPack.userIcons.forTable}{i.user}</span></TableCell>\r\n                    <TableCell className=\"padding-sides-0 color-white\">{i.action}</TableCell>\r\n                    <TableCell className=\"padding-sides-25 color-white\">{i.description[0]}<span className=\"color-grey icon-inside align-items-baseline inline ml-10\">{IconPack.licenseIcons.mail}{i.description[1]}</span> </TableCell>\r\n                    <TableCell className=\"padding-sides-20 color-grey\">13 Feb, 11:10:22</TableCell>\r\n                </TableRow>);\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n                <div className=\"filterPanel\">\r\n                    <TextField\r\n                        variant=\"filled\"\r\n                        fullWidth\r\n                        className=\"search_area\"\r\n                        placeholder=\"Search\"\r\n                        value={searchValue}\r\n                        onChange={(e)=>{setSearchValue(e.target.value)}}\r\n                       >\r\n                    </TextField>\r\n                    <div className=\"search_additional_components\">\r\n                        <div className=\"calendar\">{IconPack.searchComponents.calendar}</div>\r\n                        <div>{IconPack.searchComponents.filter}</div>\r\n                    </div>\r\n                </div>\r\n            <Table className=\"configTable\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell className=\"padding-sides-20 w160\">User</TableCell>\r\n                        <TableCell className=\"padding-sides-0 w140\">Action</TableCell>\r\n                        <TableCell className=\"padding-sides-25\">Description</TableCell>\r\n                        <TableCell className=\"padding-sides-25 w140 td-date\"> {IconPack.tableIcons.date} Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {searchValue.length ? searchedData : tbodyData }\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    activityData: state.corporateLicenseActivity.activity,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(CorporateActivity);"],"sourceRoot":""}