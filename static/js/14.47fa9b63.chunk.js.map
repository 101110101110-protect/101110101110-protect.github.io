{"version":3,"sources":["components/TableComponents/DaysLeft/DaysLeft.jsx","components/TableComponents/ConfigLimits/ConfigLimits.jsx","components/TableComponents/DaysLeft/cog.svg","components/TableComponents/ConfigLimits/minus.svg","components/TableComponents/ConfigLimits/plus.svg","components/TableComponents/UserProfile/UserProfile.jsx","components/MobileComponents/Licenses/Users/tableActionDropdown.jsx","components/MobileComponents/Licenses/Users/CorporateUsers.jsx"],"names":["connect","state","usersTabData","corporateLicenseUsers","usersTab","dispatch","setLicenseDaysSettingsModal","obj","props","className","rowData","userOptions","daysLeft","maxDaysLeft","onClick","bool","data","src","cogIcon","alt","setConfigLimit","dataValue","configsLimits","val","max","id","user","configLimit","Minus","Plus","module","exports","UserProfile","dataImage","dataName","dataId","setDropdown","setAccessRightsForOneUserModal","setAuthorizationDataForOneUserModal","updateUsers","handleItem","type","dataArray","map","i","key","push","ClickAwayListener","onClickAway","setCosts","setUsers","setActivity","setSelect","setCurrentTab","prop","setAdditionalScreenCorporate","sortTableByType","React","useState","searchValue","setSearchValue","orderValue","setOrderValue","orderStatus","setOrderStatus","selectedDataClone","isSelected","tableSort","setSort","expanded","setExpanded","tableItem","square","onChange","panel","event","newExpanded","AccordionSummary","aria-controls","searchedData","filter","name","toLowerCase","includes","telegram","comment","reverse","tbodyData","msg","variant","fullWidth","placeholder","value","e","target","FormControl","labelId","label","select","console","dir","MenuItem","IconPack","searchComponents","orderDown","Button","add","length"],"mappings":"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","file":"static/js/14.47fa9b63.chunk.js","sourcesContent":["import React from 'react';\r\nimport cogIcon from './cog.svg';\r\nimport {setLicenseDaysSettingsModal} from \"../../../redux/app/app.actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst DaysLeft = (props) => {\r\n    return (\r\n        <div className=\"tableCell-daysLeft\">\r\n            <div className=\"value\">\r\n            {props.rowData.userOptions.daysLeft}\r\n            </div>\r\n            <div className=\"days\">\r\n                {props.rowData.userOptions.maxDaysLeft}\r\n            </div>\r\n            <div className=\"btn\" onClick={()=>{\r\n                props.setLicenseDaysSettingsModal({bool: true, data: props.rowData});\r\n            }}>\r\n                <img src={cogIcon} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setLicenseDaysSettingsModal: (obj) => dispatch(setLicenseDaysSettingsModal(obj)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DaysLeft);","import React from 'react';\r\nimport Minus from \"./minus.svg\";\r\nimport Plus from \"./plus.svg\";\r\nimport { setConfigLimit} from \"../../../redux/licenses/corporate/users/users.actions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst ConfigLimits = (props) => {\r\n\r\n    return (\r\n        <div className=\"tableCell-configLimits\">\r\n            <div className=\"value\">\r\n                {props.dataValue.userOptions.configsLimits.val}\r\n            </div>\r\n            <div className=\"days\">\r\n                {props.dataValue.userOptions.configsLimits.max}\r\n            </div>\r\n            <div className=\"btn--configLimits\" onClick={()=>{\r\n                 if(props.dataValue.userOptions.configsLimits.val > 0) {\r\n                    props.setConfigLimit({id:props.dataValue.user.id , configLimit: props.dataValue.userOptions.configsLimits.val - 1})\r\n                }\r\n            }}>\r\n                <img src={Minus} alt=\"\"/>\r\n            </div>\r\n            <div className=\"btn--configLimits\" onClick={()=>{\r\n                    if(props.dataValue.userOptions.configsLimits.val < props.dataValue.userOptions.configsLimits.max) {\r\n                        props.setConfigLimit({id: props.dataValue.user.id, configLimit: props.dataValue.userOptions.configsLimits.val + 1})\r\n                    }\r\n            }}>\r\n                <img src={Plus} alt=\"\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setConfigLimit: (obj) => dispatch(setConfigLimit(obj)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ConfigLimits);","module.exports = __webpack_public_path__ + \"static/media/cog.47ace99b.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.16ce7abd.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.c9c2af7c.svg\";","import React from 'react';\r\n\r\nconst UserProfile = (props) => {\r\n    return (\r\n        <div className=\"tableCell-profile\">\r\n            <img src={props.dataImage} alt=\"ALT\"/>\r\n            <div>\r\n                <h5 className=\"color-white\">{props.dataName}</h5>\r\n                <span>{props.dataId}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;","import React from 'react';\r\nimport { setDropdown, updateUsers} from \"../../../../redux/licenses/corporate/users/users.actions\";\r\nimport {\r\n    setAccessRightsForOneUserModal,\r\n    setAuthorizationDataForOneUserModal,\r\n    setLicenseDaysSettingsModal\r\n} from \"../../../../redux/app/app.actions\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nconst TableActionDropdown = (props) => {\r\n\r\n    const handleClickAway = () => {\r\n        props.setDropdown(false, props.id);\r\n    };\r\n\r\n    const handleItem = (type) => {\r\n\r\n        switch (type){\r\n            case 'get data':\r\n                props.setAuthorizationDataForOneUserModal({bool: true, data: props.id});\r\n\r\n                break;\r\n            case 'set rights':\r\n                props.setAccessRightsForOneUserModal({bool: true, data: props.id});\r\n\r\n                break;\r\n            case 'delete user':\r\n                let dataArray = [];\r\n\r\n                props.usersTabData.map((i, key) => {\r\n                    if(i.user.id !== props.id) {\r\n                        dataArray.push(i);\r\n                    }\r\n                });\r\n\r\n                props.updateUsers(dataArray);\r\n\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    return (<ClickAwayListener onClickAway={handleClickAway}>\r\n        <div className=\"table_action_dropdown\">\r\n            <ul>\r\n                <li onClick={()=>{handleItem('get data')}}>Get authorization data</li>\r\n                <li onClick={()=>{handleItem('set rights')}}>Set access rights</li>\r\n                <li onClick={()=>{handleItem('delete user')}}>Delete user</li>\r\n            </ul>\r\n        </div>\r\n    </ClickAwayListener>);\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDropdown: (bool, id) => dispatch(setDropdown(bool, id)),\r\n        setAccessRightsForOneUserModal: (bool, id) => dispatch(setAccessRightsForOneUserModal(bool, id)),\r\n        setAuthorizationDataForOneUserModal: (bool, id) => dispatch(setAuthorizationDataForOneUserModal(bool, id)),\r\n        setLicenseDaysSettingsModal: (bool, id) => dispatch(setLicenseDaysSettingsModal(bool, id)),\r\n        updateUsers: (data) => dispatch(updateUsers(data)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableActionDropdown);","import React from 'react';\r\n\r\nimport TableUserProfile from \"../../../TableComponents/UserProfile/UserProfile\";\r\nimport ConfigLimits from \"../../../TableComponents/ConfigLimits/ConfigLimits\";\r\nimport DaysLeft from \"../../../TableComponents/DaysLeft/DaysLeft\";\r\nimport {connect} from \"react-redux\";\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {setCosts, setUsers, setActivity, sortTableByType, setSelect, setDropdown} from \"../../../../redux/licenses/corporate/users/users.actions\";\r\nimport {setCurrentLicense, setCurrentTab, setAdditionalScreenCorporate} from \"../../../../redux/licenses/licenses.actions\";\r\nimport {setLicenseDaysSettingsModal} from \"../../../../redux/app/app.actions\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport {IconPack} from \"../../../../Images/IconPack\";\r\nimport InputLabel from \"@material-ui/core/InputLabel/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport Select from \"@material-ui/core/Select/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Checkbox from \"@material-ui/core/Checkbox/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FormattedMessage } from 'react-intl';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport TableActionDropdown from './tableActionDropdown';\r\n\r\n\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails/AccordionDetails\";\r\nimport Accordion from \"@material-ui/core/Accordion/Accordion\";\r\n\r\n\r\nconst CorporateUsers = (props) => {\r\n\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [orderValue, setOrderValue] = React.useState(false);\r\n    const [orderStatus, setOrderStatus] = React.useState(false);\r\n    const [wasChecked, setCheckedState] = React.useState(false);\r\n\r\n\r\n\r\n    const handleChange = (rowData, type, event) => {\r\n\r\n        switch (type) {\r\n            case 'activity':\r\n                props.setActivity(!rowData.userOptions.seesActivity, rowData.user.id);\r\n                break;\r\n            case 'users':\r\n                props.setUsers(!rowData.userOptions.seesUsers, rowData.user.id);\r\n                break;\r\n            case 'costs':\r\n                props.setCosts(!rowData.userOptions.seesCosts, rowData.user.id);\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n    };\r\n\r\n    let selectedDataClone = [];\r\n     props.usersTabData.map((i)=> {\r\n        if(i.userOptions.isSelected) {\r\n            selectedDataClone.push(i);\r\n        }\r\n    });\r\n\r\n\r\n    const [tableSort, setSort] = React.useState('Date of register');\r\n\r\n\r\n    const handleSort = (event) => {\r\n        setSort(event.target.value);\r\n\r\n        if (event.target.value === 'Date of register') {\r\n            props.sortTableByType('byRegistration');\r\n        } else if (event.target.value === 'Date of last visit') {\r\n            props.sortTableByType('byVisit');\r\n        }\r\n    };\r\n\r\n\r\n    const tableCheckBox = (row) => {\r\n        return (<Checkbox color=\"primary\"  checked={row.userOptions.isSelected} onChange={()=> {\r\n            props.setSelect(!row.userOptions.isSelected, row.user.id);\r\n            setCheckedState(true);\r\n        }}/>);\r\n    }\r\n\r\n    const handleClick = (rowData) => {\r\n        props.setDropdown(!rowData.userOptions.isOpenedDropdown, rowData.user.id);\r\n    }\r\n    const [expanded, setExpanded] = React.useState('panel1');\r\n\r\n    const handleAccordion = (panel) => (event, newExpanded) => {\r\n        setExpanded(newExpanded ? panel : false);\r\n    };\r\n\r\n    const tableItem = (rowData, key) => {\r\n        return (\r\n            <Accordion square expanded={expanded === 'panel' + key} onChange={handleAccordion('panel' + key)}>\r\n                <AccordionSummary aria-controls=\"panel1d-content\" id=\"panel1d-header\">\r\n                    <h2>Collapsible Group Item {key}</h2>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <p  >\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex,\r\n                        sit amet blandit leo lobortis eget. Lorem ipsum dolor sit amet, consectetur adipiscing\r\n                        elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.\r\n                    </p>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n\r\n\r\n            //     <TableRow key={key} className={rowData.userOptions.isSelected ? 'active' : null}>\r\n            //\r\n            //     <TableCell className=\"padding-sides-5\">{rowData.user.telegram}</TableCell>\r\n            //     <TableCell className=\"padding-sides-20 white-space-normal\">{rowData.user.comment}</TableCell>\r\n            //\r\n            //     <TableCell className=\"padding-sides-20\">\r\n            //         <Switch checked={rowData.userOptions.seesActivity} onChange={(e) => {\r\n            //             handleChange(rowData, 'activity', e)\r\n            //         }}/></TableCell>\r\n            //\r\n            //     <TableCell className=\"padding-sides-25\"> <Switch checked={rowData.userOptions.seesUsers} onChange={(e) => {\r\n            //         handleChange(rowData, 'users', e)\r\n            //     }} /></TableCell>\r\n            //\r\n            //     <TableCell className=\"padding-sides-25\"> <Switch checked={rowData.userOptions.seesCosts} onChange={(e) => {\r\n            //         handleChange(rowData, 'costs', e)\r\n            //     }} /></TableCell>\r\n            //\r\n            //     <TableCell className=\"padding-sides-25\"><DaysLeft rowData={rowData}/></TableCell>\r\n            //     <TableCell className=\"padding-sides-0 va-top relative o-visible\"><ConfigLimits dataValue={rowData}/>\r\n            //\r\n            //         {rowData.userOptions.isOpenedDropdown ? <TableActionDropdown id={rowData.user.id}></TableActionDropdown> : null }\r\n            //         <div className=\"btn--pins\" onClick={() => {handleClick(rowData)}}>\r\n            //               {IconPack.buttons.pins}\r\n            //         </div>\r\n            //     </TableCell>\r\n            // </TableRow>\r\n        )\r\n    };\r\n\r\n    let searchedData = [];\r\n\r\n    if(orderValue){\r\n        searchedData = props.usersTabData.filter(i => {\r\n\r\n            if (i.user.name.toLowerCase().includes( searchValue.toLowerCase() ) ||\r\n                i.user.id.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                i.user.telegram.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                i.user.comment.toLowerCase().includes(searchValue.toLowerCase())\r\n            ) {\r\n                return i;\r\n            }\r\n        }).map((i,key)=> {\r\n            return tableItem(i, key)\r\n        })\r\n    }else {\r\n        searchedData = props.usersTabData.filter(i => {\r\n            if (i.user.name.toLowerCase().includes( searchValue.toLowerCase() ) ||\r\n                i.user.id.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                i.user.telegram.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n                i.user.comment.toLowerCase().includes(searchValue.toLowerCase())) {\r\n                    return i;\r\n            }\r\n        }).map((i,key)=> {\r\n            return tableItem(i, key)\r\n        }).reverse();\r\n    }\r\n\r\n\r\n\r\n\r\n    let tbodyData = [];\r\n\r\n    if(orderValue){\r\n        tbodyData = props.usersTabData.map((rowData,key) => {\r\n            return tableItem(rowData,key);\r\n        })\r\n    }else {\r\n        tbodyData = props.usersTabData.map((rowData,key) => {\r\n            return tableItem(rowData,key);\r\n        }).reverse();\r\n    }\r\n\r\n\r\n    const orderHandler = () => {\r\n        if(!orderStatus){\r\n            setOrderStatus(true);\r\n            setOrderValue(true);\r\n        }else {\r\n            if(orderValue === false) {\r\n                setOrderStatus(false);\r\n            }else {\r\n                setOrderValue(false);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const getOrderClasses = () => {\r\n        let classes;\r\n        if(orderStatus) {\r\n            if (!orderValue) {\r\n                classes = 'filterPanel__select__order filterPanel__select__order--active';\r\n            } else {\r\n                classes = 'rotate-child-180  filterPanel__select__order filterPanel__select__order--active';\r\n            }\r\n        }else {\r\n            classes = 'filterPanel__select__order';\r\n        }\r\n\r\n        return classes;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"сustomStyle\">\r\n            <div className=\"filterPanel filterPanel--mobile filterPanel--users\">\r\n\r\n                <div className=\"position-relative w100percent mb-15\">\r\n                    <FormattedMessage  id='filterPanel.search'>\r\n                        {(msg) => ( <TextField\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            className=\"search_area\"\r\n                            placeholder={msg}\r\n                            value={searchValue}\r\n                            onChange={(e)=>{setSearchValue(e.target.value)}}\r\n                        >\r\n                        </TextField>)}\r\n                    </FormattedMessage>\r\n\r\n                </div>\r\n\r\n                <FormControl variant=\"filled\" className='filterPanel__select w160 mr10'>\r\n\r\n                    <FormattedMessage  id='filterPanel.sortUsersBy'>\r\n                        {(msg) =>\r\n                            <TextField\r\n                                labelId=\"selectlabel\"\r\n                                value={tableSort}\r\n                                label={msg}\r\n                                select\r\n                                variant=\"filled\"\r\n                                onChange={(e) => {\r\n                                    handleSort(e);\r\n                                    setSort(e.target.value);\r\n                                    console.dir(e.target.value);\r\n                                }}\r\n                                >\r\n                                <MenuItem key={1} value={'Date of register'}> <FormattedMessage  id='filterPanel.dateOfRegister' /></MenuItem>\r\n                                <MenuItem key={2} value={'Date of last visit'}><FormattedMessage  id='filterPanel.dateOfLastVisit' /></MenuItem>\r\n                            </TextField>}\r\n                    </FormattedMessage>\r\n\r\n                </FormControl>\r\n                <div className={getOrderClasses()}  onClick={()=>{orderHandler()}}>\r\n                    {IconPack.searchComponents.orderDown}\r\n                </div>\r\n\r\n\r\n                <Button variant=\"contained\" className=\"btn btn--blue filterPanel__add\"  onClick={()=>{\r\n                    props.setCurrentTab('Generate');\r\n                    props.setAdditionalScreenCorporate(true);\r\n                }}>\r\n                    {IconPack.searchComponents.add}\r\n                </Button>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                {searchValue.length ? searchedData : tbodyData }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    usersTabData: state.corporateLicenseUsers.usersTab,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCosts: (bool, id) => dispatch(setCosts(bool, id)),\r\n        setDropdown: (bool, id) => dispatch(setDropdown(bool, id)),\r\n        setUsers: (bool, id) => dispatch(setUsers(bool, id)),\r\n        setActivity: (bool, id) => dispatch(setActivity(bool, id)),\r\n        setSelect: (bool, id) => dispatch(setSelect(bool, id)),\r\n        setCurrentTab: (prop) => dispatch(setCurrentTab(prop)),\r\n        setAdditionalScreenCorporate: (bool) => dispatch(setAdditionalScreenCorporate(bool)),\r\n        setLicenseDaysSettingsModal: (type) => dispatch(setLicenseDaysSettingsModal(type)),\r\n        sortTableByType: (type) => dispatch(sortTableByType(type)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CorporateUsers);"],"sourceRoot":""}